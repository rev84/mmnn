// Generated by CoffeeScript 1.12.7
var BattleResultManager, Cell, Character1, Character10, Character100, Character100Base, Character101, Character101Base, Character102, Character102Base, Character103, Character103Base, Character104, Character104Base, Character105, Character105Base, Character106, Character106Base, Character107, Character107Base, Character108, Character108Base, Character109, Character109Base, Character10Base, Character11, Character110, Character110Base, Character111, Character111Base, Character112, Character112Base, Character113, Character113Base, Character114, Character114Base, Character115, Character115Base, Character116, Character116Base, Character117, Character117Base, Character118, Character118Base, Character119, Character119Base, Character11Base, Character12, Character120, Character120Base, Character121, Character121Base, Character122, Character122Base, Character123, Character123Base, Character124, Character124Base, Character125, Character125Base, Character126, Character126Base, Character127, Character127Base, Character128, Character128Base, Character129, Character129Base, Character12Base, Character13, Character130, Character130Base, Character131, Character131Base, Character132, Character132Base, Character133, Character133Base, Character134, Character134Base, Character135, Character135Base, Character136, Character136Base, Character137, Character137Base, Character138, Character138Base, Character139, Character139Base, Character13Base, Character14, Character140, Character140Base, Character141, Character141Base, Character142, Character142Base, Character143, Character143Base, Character144, Character144Base, Character145, Character145Base, Character146, Character146Base, Character147, Character147Base, Character148, Character148Base, Character149, Character149Base, Character14Base, Character15, Character150, Character150Base, Character151, Character151Base, Character152, Character152Base, Character153, Character153Base, Character154, Character154Base, Character155, Character155Base, Character156, Character156Base, Character157, Character157Base, Character158, Character158Base, Character159, Character159Base, Character15Base, Character16, Character160, Character160Base, Character161, Character161Base, Character162, Character162Base, Character163, Character163Base, Character164, Character164Base, Character165, Character165Base, Character166, Character166Base, Character167, Character167Base, Character168, Character168Base, Character169, Character169Base, Character16Base, Character17, Character170, Character170Base, Character171, Character171Base, Character172, Character172Base, Character173, Character173Base, Character174, Character174Base, Character175, Character175Base, Character176, Character176Base, Character177, Character177Base, Character178, Character178Base, Character179, Character179Base, Character17Base, Character18, Character180, Character180Base, Character181, Character181Base, Character182, Character182Base, Character183, Character183Base, Character184, Character184Base, Character185, Character185Base, Character186, Character186Base, Character187, Character187Base, Character188, Character188Base, Character189, Character189Base, Character18Base, Character19, Character190, Character190Base, Character191, Character191Base, Character192, Character192Base, Character193, Character193Base, Character194, Character194Base, Character195, Character195Base, Character196, Character196Base, Character197, Character197Base, Character198, Character198Base, Character199, Character199Base, Character19Base, Character1Base, Character2, Character20, Character200, Character200Base, Character201, Character201Base, Character202, Character202Base, Character203, Character203Base, Character204, Character204Base, Character20Base, Character21, Character21Base, Character22, Character22Base, Character23, Character23Base, Character24, Character24Base, Character25, Character25Base, Character26, Character26Base, Character27, Character27Base, Character28, Character28Base, Character29, Character29Base, Character2Base, Character3, Character30, Character30Base, Character31, Character31Base, Character32, Character32Base, Character33, Character33Base, Character34, Character34Base, Character35, Character35Base, Character36, Character36Base, Character37, Character37Base, Character38, Character38Base, Character39, Character39Base, Character3Base, Character4, Character40, Character40Base, Character41, Character41Base, Character42, Character42Base, Character43, Character43Base, Character44, Character44Base, Character45, Character45Base, Character46, Character46Base, Character47, Character47Base, Character48, Character48Base, Character49, Character49Base, Character4Base, Character5, Character50, Character50Base, Character51, Character51Base, Character52, Character52Base, Character53, Character53Base, Character54, Character54Base, Character55, Character55Base, Character56, Character56Base, Character57, Character57Base, Character58, Character58Base, Character59, Character59Base, Character5Base, Character6, Character60, Character60Base, Character61, Character61Base, Character62, Character62Base, Character63, Character63Base, Character64, Character64Base, Character65, Character65Base, Character66, Character66Base, Character67, Character67Base, Character68, Character68Base, Character69, Character69Base, Character6Base, Character7, Character70, Character70Base, Character71, Character71Base, Character72, Character72Base, Character73, Character73Base, Character74, Character74Base, Character75, Character75Base, Character76, Character76Base, Character77, Character77Base, Character78, Character78Base, Character79, Character79Base, Character7Base, Character8, Character80, Character80Base, Character81, Character81Base, Character82, Character82Base, Character83, Character83Base, Character84, Character84Base, Character85, Character85Base, Character86, Character86Base, Character87, Character87Base, Character88, Character88Base, Character89, Character89Base, Character8Base, Character9, Character90, Character90Base, Character91, Character91Base, Character92, Character92Base, Character93, Character93Base, Character94, Character94Base, Character95, Character95Base, Character96, Character96Base, Character97, Character97Base, Character98, Character98Base, Character99, Character99Base, Character9Base, CharacterBase, CharacterPalletManager, Enemy1, Enemy1Base, Enemy2, Enemy2Base, Enemy3, Enemy3Base, Enemy4, Enemy4Base, Enemy5, Enemy5Base, EnemyBase, EnvManager, FieldManager, GameManager, InfoManager, LeftInfoManager, LevelupController, LevelupManager, LevelupPanel, MenuManager, ObjectBase, Panel, PresentboxBase, RightInfoManager, Utl,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ObjectBase = (function() {
  ObjectBase.OBJECT_TYPE = {
    CHARACTER: 'CHARACTER',
    ENEMY: 'ENEMY',
    PRESENTBOX: 'PRESENTBOX'
  };

  ObjectBase.ATTACK_TYPE = {
    PHYSIC: '物理',
    MAGIC: '魔法'
  };

  ObjectBase.DAMAGE_SHAKE_RATE = 0.1;

  ObjectBase.KNOCKOUT = {
    OK: './img/circle.png',
    MAY: './img/triangle.png',
    NG: './img/cross.png'
  };

  function ObjectBase(objectType) {
    this.objectType = objectType;
  }

  ObjectBase.prototype.getObjectType = function() {
    return this.objectType;
  };

  ObjectBase.prototype.isCharacterObject = function() {
    return this.objectType === this.constructor.OBJECT_TYPE.CHARACTER;
  };

  ObjectBase.prototype.isEnemyObject = function() {
    return this.objectType === this.constructor.OBJECT_TYPE.ENEMY;
  };

  ObjectBase.prototype.isPresentObject = function() {
    return this.objectType === this.constructor.OBJECT_TYPE.PRESENTBOX;
  };

  ObjectBase.prototype.getHpMax = function(level) {
    if (level == null) {
      level = null;
    }
    if (level === null) {
      return this.constructor.hpBase * this.level;
    } else {
      return this.constructor.hpBase * level;
    }
  };

  ObjectBase.prototype.getHp = function() {
    if (this.hp === null || this.getHpMax() < this.hp) {
      return this.getHpMax();
    } else if (this.hp <= 0) {
      return 0;
    } else {
      return this.hp;
    }
  };

  ObjectBase.prototype.damage = function(amount) {
    if (amount <= 0) {
      return false;
    }
    this.hp = this.getHp() - amount;
    return this.getHp();
  };

  ObjectBase.prototype.getLevel = function(level) {
    if (level == null) {
      level = null;
    }
    if (level === null) {
      return this.level;
    } else {
      return level;
    }
  };

  ObjectBase.prototype.setLevel = function(level) {
    return this.level = level;
  };

  ObjectBase.prototype.levelup = function(level) {
    return this.level += level;
  };

  ObjectBase.prototype.getCharacterName = function() {
    return this.constructor.characterName;
  };

  ObjectBase.prototype.getAttackType = function() {
    return this.constructor.attackTypeBase;
  };

  ObjectBase.prototype.getAttack = function(level) {
    if (level == null) {
      level = null;
    }
    if (level === null) {
      return Math.ceil(this.constructor.attackBase * this.level);
    } else {
      return Math.ceil(this.constructor.attackBase * level);
    }
  };

  ObjectBase.prototype.getAttackBase = function() {
    return this.constructor.attackBase;
  };

  ObjectBase.prototype.getPDef = function(level) {
    if (level == null) {
      level = null;
    }
    if (level === null) {
      return Math.ceil(this.constructor.pDefBase * this.level);
    } else {
      return Math.ceil(this.constructor.pDefBase * level);
    }
  };

  ObjectBase.prototype.getPDefBase = function() {
    return this.constructor.pDefBase;
  };

  ObjectBase.prototype.getMDef = function(level) {
    if (level == null) {
      level = null;
    }
    if (level === null) {
      return Math.ceil(this.constructor.mDefBase * this.level);
    } else {
      return Math.ceil(this.constructor.mDefBase * level);
    }
  };

  ObjectBase.prototype.getMDefBase = function() {
    return this.constructor.mDefBase;
  };

  ObjectBase.prototype.getMove = function() {
    return this.constructor.moveBase;
  };

  ObjectBase.prototype.getMoveBase = function() {
    return this.constructor.moveBase;
  };

  ObjectBase.prototype.getRange = function() {
    return this.constructor.rangeBase;
  };

  ObjectBase.prototype.getRangeBase = function() {
    return this.constructor.rangeBase;
  };

  ObjectBase.prototype.getHitRate = function() {
    return this.constructor.hitRateBase;
  };

  ObjectBase.prototype.getHitRateBase = function() {
    return this.constructor.hitRateBase;
  };

  ObjectBase.prototype.getDodgeRate = function() {
    return this.constructor.dodgeRateBase;
  };

  ObjectBase.prototype.getDodgeRateBase = function() {
    return this.constructor.dodgeRateBase;
  };

  ObjectBase.prototype.getExp = function() {
    return Math.ceil(this.level * this.constructor.expRate);
  };

  ObjectBase.prototype.getAbilityName = function() {
    return this.constructor.abilityName;
  };

  ObjectBase.prototype.getAbilityDesc = function() {
    return this.constructor.abilityDesc;
  };

  ObjectBase.prototype.getBaseImage = function() {
    return this.constructor.images[0];
  };

  ObjectBase.prototype.getImages = function() {
    return this.constructor.images;
  };

  ObjectBase.prototype.getImage = function(index) {
    if (!((0 <= index && index < this.constructor.images.length))) {
      return null;
    }
    return this.constructor.images[index];
  };

  ObjectBase.prototype.getNeededExp = function(level) {
    var baseExp, baseLevel, targetExp, targetLevel;
    targetLevel = this.level + level;
    baseLevel = this.level;
    targetExp = (Math.pow(targetLevel, 2)) * this.constructor.expRate;
    baseExp = (Math.pow(baseLevel, 2)) * this.constructor.expRate;
    return Math.ceil(targetExp - baseExp);
  };

  ObjectBase.prototype.getLevelUpMax = function(exp) {
    var baseExp, targetExp;
    baseExp = (Math.pow(this.level, 2)) * this.constructor.expRate;
    targetExp = baseExp + exp;
    return Math.floor(Math.sqrt(targetExp / this.constructor.expRate) - this.level);
  };

  ObjectBase.getDamageMin = function(attack, def) {
    var damage;
    damage = attack - def;
    if (damage < 1) {
      return 1;
    }
    damage = Math.round(damage - damage * this.DAMAGE_SHAKE_RATE);
    if (damage < 1) {
      return 1;
    }
    return damage;
  };

  ObjectBase.getDamageMax = function(attack, def) {
    var damage;
    damage = attack - def;
    if (damage < 1) {
      return 1;
    }
    damage = Math.round(damage + damage * this.DAMAGE_SHAKE_RATE);
    if (damage < 1) {
      return 1;
    }
    return damage;
  };

  ObjectBase.getDamage = function(attack, def) {
    return Utl.rand(this.getDamageMin(attack, def), this.getDamageMax(attack, def));
  };

  ObjectBase.getKnockoutRate = function(hp, attack, def) {
    var max, min;
    min = this.getDamageMin(attack, def);
    max = this.getDamageMax(attack, def);
    if (hp <= min) {
      return +2e308;
    } else if (hp <= max) {
      return Math.round((max - hp + 1) / (max - min + 1) * 100);
    } else {
      return -2e308;
    }
  };

  return ObjectBase;

})();

BattleResultManager = (function() {
  function BattleResultManager() {}

  BattleResultManager.ID = 'battle_result';

  BattleResultManager.ANIMATION_WAIT_BEFORE_MSEC = 1000;

  BattleResultManager.ANIMATION_DECREASE_MSEC = 1000;

  BattleResultManager.ANIMATION_DECREASE_FPS = 30;

  BattleResultManager.ANIMATION_WAIT_AFTER_MSEC = 1000;

  BattleResultManager.init = function(parentElement) {
    this.parentElement = parentElement;
    this.divObject = $('<div>').attr('id', this.ID).addClass('no_display');
    this.progress = $('<div>').addClass('progress').appendTo(this.divObject);
    this.progressBar = $('<div>').addClass('progress-bar').attr('role', 'progressbar').appendTo(this.progress);
    this.character = $('<div>').addClass('character').appendTo(this.divObject);
    this.characterType = $('<div>').addClass('character_type').appendTo(this.divObject);
    this.enemy = $('<div>').addClass('enemy').appendTo(this.divObject);
    this.enemyType = $('<div>').addClass('enemy_type').appendTo(this.divObject);
    return this.divObject.appendTo(this.parentElement);
  };

  BattleResultManager.animate = function(characterObject, enemyObject, isCharacterOffence, hpMax, hpBase, hpTo, callback) {
    var characterTypeImg, enemyTypeImg;
    if (callback == null) {
      callback = null;
    }
    characterTypeImg = characterObject.getAttackType() === ObjectBase.ATTACK_TYPE.PHYSIC && isCharacterOffence ? './img/sword.png' : characterObject.getAttackType() === ObjectBase.ATTACK_TYPE.MAGIC && isCharacterOffence ? './img/magic.png' : characterObject.getAttackType() === ObjectBase.ATTACK_TYPE.PHYSIC && !isCharacterOffence ? './img/shield.png' : './img/resist.png';
    enemyTypeImg = enemyObject.getAttackType() === ObjectBase.ATTACK_TYPE.PHYSIC && !isCharacterOffence ? './img/sword.png' : enemyObject.getAttackType() === ObjectBase.ATTACK_TYPE.MAGIC && !isCharacterOffence ? './img/magic.png' : enemyObject.getAttackType() === ObjectBase.ATTACK_TYPE.PHYSIC && isCharacterOffence ? './img/shield.png' : './img/resist.png';
    this.character.css('background-image', 'url(' + characterObject.getBaseImage() + ')');
    this.characterType.css('background-image', 'url(' + characterTypeImg + ')');
    this.enemy.css('background-image', 'url(' + enemyObject.getBaseImage() + ')');
    this.enemyType.css('background-image', 'url(' + enemyTypeImg + ')');
    this.setRate(hpBase / hpMax);
    this.divObject.removeClass('no_display');
    return setTimeout((function(_this) {
      return function() {
        var decrease, decreaseRate, nowRate, restTime;
        restTime = Math.ceil(_this.ANIMATION_DECREASE_MSEC / _this.ANIMATION_DECREASE_FPS);
        nowRate = hpBase / hpMax;
        decreaseRate = (nowRate - (hpTo / hpMax)) / restTime;
        decrease = function(restTime, nowRate, decreaseRate) {
          nowRate -= decreaseRate;
          restTime--;
          _this.setRate(nowRate);
          if (restTime > 0) {
            return setTimeout(decrease.bind(_this, restTime, nowRate, decreaseRate), 1 / _this.ANIMATION_DECREASE_FPS);
          } else {
            return setTimeout(function() {
              _this.divObject.addClass('no_display');
              if (callback instanceof Function) {
                return callback();
              }
            }, _this.ANIMATION_WAIT_AFTER_MSEC);
          }
        };
        return decrease(restTime, nowRate, decreaseRate);
      };
    })(this), this.ANIMATION_WAIT_BEFORE_MSEC);
  };

  BattleResultManager.setRate = function(rate) {
    if (rate > 1) {
      rate = 1;
    }
    if (rate < 0) {
      rate = 0;
    }
    return this.progressBar.css('width', '' + rate * 100 + '%');
  };

  return BattleResultManager;

})();

Cell = (function() {
  Cell.SIZE_X = 70;

  Cell.SIZE_Y = 70;

  Cell.OBJECT_ANIMATION_MSEC = 500;

  Cell.PUT_FIELD_MAX_X = 1;

  Cell.IMAGE_BACKGROUND = ['./img/background/light_blue.png'];

  Cell.IMAGE_MOVABLE = './img/movable.png';

  Cell.IMAGE_FIN = './img/fin.png';

  Cell.IMAGE_SNIPE = './img/target.png';

  function Cell(parentElement, xIndex1, yIndex1, borderSize) {
    this.parentElement = parentElement;
    this.xIndex = xIndex1;
    this.yIndex = yIndex1;
    this.removeMe = bind(this.removeMe, this);
    this.stepObjectAnimation = bind(this.stepObjectAnimation, this);
    this.elements = {
      mother: null,
      collision: null,
      background: null,
      object: null,
      movable: null,
      knockout: null
    };
    this.object = null;
    this.tempObject = null;
    this.background = this.constructor.IMAGE_BACKGROUND[Utl.rand(0, this.constructor.IMAGE_BACKGROUND.length - 1)];
    this.wayStack = null;
    this.knockout = null;
    this.objectAnimationIndex = 0;
    this.initElements(borderSize);
  }

  Cell.prototype.onMouseMiddleUp = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.changeControllable(false);
    return GameManager.changeControllable(true);
  };

  Cell.prototype.onMouseRightUp = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.changeControllable(false);
    return GameManager.changeControllable(true);
  };

  Cell.prototype.onMouseLeftUp = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.changeControllable(false);
    if (this.tryCharacterPut(evt)) {

    } else if (this.tryMovePick(evt)) {

    } else if (this.tryMoveTo(evt)) {

    } else if (this.tryAttack(evt)) {

    } else {
      return GameManager.changeControllable(true);
    }
  };

  Cell.prototype.onMouseLeftDown = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.changeControllable(false);
    if (this.tempObject !== null) {
      CharacterPalletManager.pickCharacter(this.tempObject);
      this.tempObject = null;
    }
    return GameManager.changeControllable(true);
  };

  Cell.prototype.onMouseMiddleDown = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.changeControllable(false);
    return GameManager.changeControllable(true);
  };

  Cell.prototype.onMouseRightDown = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.changeControllable(false);
    return GameManager.changeControllable(true);
  };

  Cell.prototype.onMouseMove = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    if (GameManager.flags.isBattle) {
      if (this.object === null) {
        LeftInfoManager.setObject(null);
        return RightInfoManager.setObject(null);
      } else if (this.object.isCharacterObject()) {
        LeftInfoManager.setObject(this.object);
        return RightInfoManager.setObject(null);
      } else if (this.object.isEnemyObject()) {
        LeftInfoManager.setObject(null);
        return RightInfoManager.setObject(this.object);
      }
    }
  };

  Cell.prototype.onMouseLeave = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.changeControllable(false);
    return GameManager.changeControllable(true);
  };

  Cell.prototype.setTempObject = function(object) {
    this.tempObject = object;
    object.setInField(true);
    return this.draw();
  };

  Cell.prototype.setObject = function(object) {
    this.object = object;
    this.tempObject = null;
    return this.draw();
  };

  Cell.prototype.switchTemp = function() {
    if (this.tempObject !== null) {
      this.object = this.tempObject;
      this.tempObject = null;
      return this.draw();
    }
  };

  Cell.prototype.initElements = function(borderSize) {
    var cssPos, cssSize;
    this.elements.mother = $('<div>').addClass('cell cell_mother').css({
      left: this.xIndex * this.constructor.SIZE_X + borderSize * (this.xIndex + 1),
      top: this.yIndex * this.constructor.SIZE_Y + borderSize * (this.yIndex + 1),
      width: this.constructor.SIZE_X,
      height: this.constructor.SIZE_Y
    });
    cssPos = {
      left: 0,
      top: 0
    };
    cssSize = {
      width: this.constructor.SIZE_X,
      height: this.constructor.SIZE_Y
    };
    this.elements.collision = $('<div>').addClass('cell cell_collision').css(cssPos).css(cssSize).on('mousemove', this.onMouseMove.bind(this)).on('mouseup', (function(_this) {
      return function(evt) {
        switch (evt.which) {
          case 1:
            return _this.onMouseLeftUp.bind(_this)(evt);
          case 2:
            return _this.onMouseMiddleUp.bind(_this)(evt);
          case 3:
            return _this.onMouseRightUp.bind(_this)(evt);
        }
      };
    })(this)).on('mousedown', (function(_this) {
      return function(evt) {
        switch (evt.which) {
          case 1:
            return _this.onMouseLeftDown.bind(_this)(evt);
          case 2:
            return _this.onMouseMiddleDown.bind(_this)(evt);
          case 3:
            return _this.onMouseRightDown.bind(_this)(evt);
        }
      };
    })(this)).on('mouseleave', this.onMouseLeave.bind(this)).appendTo(this.elements.mother);
    this.elements.background = $('<div>').addClass('cell cell_background').css(cssPos).css(cssSize).appendTo(this.elements.mother);
    this.elements.object = $('<img>').addClass('cell cell_object').css({
      left: 0,
      bottom: 10
    }).css({
      width: '100%'
    }).appendTo(this.elements.mother);
    this.elements.movable = $('<div>').addClass('cell cell_movable').css(cssPos).css(cssSize).addClass('no_display').appendTo(this.elements.mother);
    this.elements.fin = $('<div>').addClass('cell cell_fin').css(cssPos).css(cssSize).addClass('no_display').appendTo(this.elements.mother);
    this.elements.knockout = $('<div>').addClass('cell cell_knockout').css({
      right: 0,
      top: 0
    }).css({
      width: this.constructor.SIZE_X * 0.3,
      height: this.constructor.SIZE_Y * 0.3
    }).addClass('no_display').appendTo(this.elements.mother);
    this.elements.animation = $('<div>').addClass('cell cell_animation').css(cssPos).css(cssSize).addClass('no_display').appendTo(this.elements.mother);
    this.changeBackground(this.background);
    this.changeMovable(this.constructor.IMAGE_MOVABLE);
    this.changeFin(this.constructor.IMAGE_FIN);
    return $(this.elements.mother).appendTo(this.parentElement);
  };

  Cell.prototype.changeBackground = function(imagePath) {
    if (imagePath == null) {
      imagePath = null;
    }
    if (imagePath === null) {
      return this.elements.background.addClass('no_display');
    } else {
      return this.elements.background.css('background-image', 'url(' + imagePath + ')').removeClass('no_display');
    }
  };

  Cell.prototype.changeObject = function(imagePath) {
    if (imagePath == null) {
      imagePath = null;
    }
    if (imagePath === null) {
      return this.elements.object.addClass('no_display');
    } else {
      return this.elements.object.attr('src', imagePath).removeClass('no_display');
    }
  };

  Cell.prototype.changeAttackable = function(imagePath) {
    if (imagePath == null) {
      imagePath = null;
    }
    if (imagePath === null) {
      return this.elements.attackable.addClass('no_display');
    } else {
      return this.elements.attackable.css('background-image', 'url(' + imagePath + ')').removeClass('no_display');
    }
  };

  Cell.prototype.changeMovable = function(imagePath) {
    return this.elements.movable.css('background-image', 'url(' + imagePath + ')');
  };

  Cell.prototype.changeFin = function(imagePath) {
    return this.elements.fin.css('background-image', 'url(' + imagePath + ')');
  };

  Cell.prototype.changeKnockout = function(imagePath, num) {
    if (num == null) {
      num = '';
    }
    return this.elements.knockout.css('background-image', 'url(' + imagePath + ')').html(num).removeClass('no_display');
  };

  Cell.prototype.startAnimation = function(imagePath, startMsec, endMsec, callback) {
    if (callback == null) {
      callback = null;
    }
    setTimeout((function(_this) {
      return function() {
        return _this.elements.animation.css('background-image', 'url(' + imagePath + ')').removeClass('no_display');
      };
    })(this), startMsec);
    return setTimeout((function(_this) {
      return function() {
        _this.elements.animation.css('background-image', 'none').addClass('no_display');
        if (callback instanceof Function) {
          return callback();
        }
      };
    })(this), endMsec);
  };

  Cell.prototype.showObject = function(bool) {
    if (bool == null) {
      bool = true;
    }
    if (bool) {
      return this.elements.object.removeClass('no_display');
    } else {
      return this.elements.object.addClass('no_display');
    }
  };

  Cell.prototype.showMovable = function(bool) {
    if (bool == null) {
      bool = true;
    }
    if (bool) {
      return this.elements.movable.removeClass('no_display');
    } else {
      return this.elements.movable.addClass('no_display');
    }
  };

  Cell.prototype.showFin = function(bool) {
    if (bool == null) {
      bool = true;
    }
    if (bool) {
      return this.elements.fin.removeClass('no_display');
    } else {
      return this.elements.fin.addClass('no_display');
    }
  };

  Cell.prototype.showKnockout = function(bool) {
    if (bool == null) {
      bool = true;
    }
    if (bool) {
      return this.elements.knockout.removeClass('no_display');
    } else {
      return this.elements.knockout.addClass('no_display');
    }
  };

  Cell.prototype.showPopover = function(text, msec, callback) {
    var position;
    if (text == null) {
      text = null;
    }
    if (msec == null) {
      msec = null;
    }
    if (callback == null) {
      callback = null;
    }
    if (text === null) {
      return $(this.elements.mother).popover('destroy');
    } else {
      position = this.xIndex < FieldManager.SIZE_X / 4 ? 'right' : FieldManager.SIZE_X / 4 * 3 < this.xIndex ? 'left' : this.yIndex < FieldManager.SIZE_Y / 4 ? 'bottom' : 'top';
      $(this.elements.mother).popover({
        content: text,
        placement: position
      }).popover('show');
      if (msec === null) {
        if (callback instanceof Function) {
          return callback();
        }
      } else {
        return setTimeout((function(_this) {
          return function() {
            $(_this.elements.mother).popover('destroy');
            if (callback instanceof Function) {
              return callback();
            }
          };
        })(this), msec);
      }
    }
  };

  Cell.prototype.draw = function() {
    this.changeBackground(this.background);
    if (this.object !== null) {
      this.changeObject(this.object.getBaseImage());
    } else if (this.tempObject !== null) {
      this.changeObject(this.tempObject.getBaseImage());
    } else {
      this.changeObject();
    }
    this.drawMovable();
    this.drawFin();
    return this.drawKnockout();
  };

  Cell.prototype.isDroppableCharacter = function() {
    return this.xIndex <= this.constructor.PUT_FIELD_MAX_X && this.object === null;
  };

  Cell.prototype.isEnterable = function() {
    return this.object === null;
  };

  Cell.prototype.tryCharacterPut = function(evt) {
    if (GameManager.flags.pickedCharacterObject === null && GameManager.flags.pickedCharacterElement === null) {
      return;
    }
    if (GameManager.flags.pickedCharacterObject !== null && this.isDroppableCharacter()) {
      FieldManager.removeAllTempObject(this.tempObject);
      this.setTempObject(GameManager.flags.pickedCharacterObject);
    }
    GameManager.flags.pickedCharacterObject = null;
    if (GameManager.flags.pickedCharacterElement !== null) {
      GameManager.flags.pickedCharacterElement.remove();
      GameManager.flags.pickedCharacterElement = null;
    }
    CharacterPalletManager.redraw();
    GameManager.changeControllable(true);
    return true;
  };

  Cell.prototype.tryMovePick = function(evt) {
    if (!GameManager.flags.isBattle) {
      return;
    }
    if (GameManager.flags.movePickCell !== null) {
      return;
    }
    if (GameManager.flags.waitAttackCell !== null) {
      return;
    }
    if (!(this.object !== null && this.object.isCharacterObject())) {
      return;
    }
    if (this.object.isMoved()) {
      return;
    }
    GameManager.movePick(this);
    GameManager.changeControllable(true);
    return true;
  };

  Cell.prototype.tryMoveTo = function(evt) {
    if (GameManager.flags.movePickCell === null) {
      return;
    }
    if (this.object !== null) {
      return;
    }
    if (this.wayStack === null) {
      return;
    }
    FieldManager.moveObject(GameManager.flags.movePickCell, this, function() {
      return GameManager.changeControllable(true);
    });
    return true;
  };

  Cell.prototype.tryAttack = function(evt) {
    if (GameManager.flags.waitAttackCell === null) {
      return;
    }
    if (this.knockout === null) {
      return;
    }
    return GameManager.attack(this.knockout, this, function() {
      GameManager.flags.movePickCell = null;
      GameManager.flags.moveToCell = null;
      GameManager.flags.waitAttackCell = null;
      return GameManager.changeControllable(true);
    });
  };

  Cell.prototype.setWayStack = function(wayStack) {
    return this.wayStack = wayStack;
  };

  Cell.prototype.drawMovable = function() {
    return this.showMovable(this.wayStack !== null);
  };

  Cell.prototype.drawKnockout = function() {
    var attack, attackType, def, hp, knockout;
    if (this.object !== null && this.knockout !== null) {
      attackType = this.knockout.object.getAttackType();
      attack = this.knockout.object.getAttack();
      def = attackType === ObjectBase.ATTACK_TYPE.PHYSIC ? this.object.getPDef() : this.object.getMDef();
      hp = this.object.getHp();
      knockout = ObjectBase.getKnockoutRate(hp, attack, def);
      if (knockout === +2e308) {
        return this.changeKnockout(ObjectBase.KNOCKOUT.OK);
      } else if (knockout === -2e308) {
        return this.changeKnockout(ObjectBase.KNOCKOUT.NG);
      } else {
        return this.changeKnockout(ObjectBase.KNOCKOUT.MAY, knockout);
      }
    } else {
      return this.showKnockout(false);
    }
  };

  Cell.prototype.drawFin = function() {
    if (this.object !== null && (this.object.isCharacterObject() || this.object.isEnemyObject()) && this.object.isMoved()) {
      return this.showFin(true);
    } else {
      return this.showFin(false);
    }
  };

  Cell.prototype.stepObjectAnimation = function() {
    if (this.object === null) {
      return this.showObject(false);
    }
    this.objectAnimationIndex++;
    if (this.object.getImage(this.objectAnimationIndex) === null) {
      this.objectAnimationIndex = 0;
    }
    return this.changeObject(this.object.getImage(this.objectAnimationIndex));
  };

  Cell.prototype.removeMe = function() {
    var e, j, len, ref, results;
    ref = this.elements;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      e = ref[j];
      results.push(e.remove());
    }
    return results;
  };

  return Cell;

})();

CharacterBase = (function(superClass) {
  extend(CharacterBase, superClass);

  function CharacterBase(params) {
    CharacterBase.__super__.constructor.call(this, ObjectBase.OBJECT_TYPE.CHARACTER);
    if (params.joined === null) {
      this.joined = this.constructor.defaultJoin;
    } else {
      this.joined = params.joined;
    }
    this.level = params.level;
    this.hp = params.hp;
    this.items = params.items;
    this.inField = params.inField;
    this.moved = params.moved;
  }

  CharacterBase.prototype.getId = function() {
    return this.constructor.characterId;
  };

  CharacterBase.prototype.getName = function() {
    return this.constructor.characterName;
  };

  CharacterBase.prototype.isInField = function() {
    return this.inField;
  };

  CharacterBase.prototype.setInField = function(isInField) {
    this.inField = !!isInField;
    return CharacterPalletManager.redraw(this);
  };

  CharacterBase.prototype.isMoved = function() {
    return this.moved;
  };

  CharacterBase.prototype.setMoved = function(bool) {
    return this.moved = !!bool;
  };

  CharacterBase.prototype.getTextOnDeath = function() {
    return this.constructor.textDeath;
  };

  return CharacterBase;

})(ObjectBase);

Character1Base = (function(superClass) {
  extend(Character1Base, superClass);

  Character1Base.characterId = 1;

  Character1Base.characterName = "島村卯月";

  Character1Base.defaultJoin = true;

  Character1Base.images = ["./img/character/1/1.png", "./img/character/1/2.png"];

  Character1Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character1Base.attackBase = 12;

  Character1Base.hpBase = 17;

  Character1Base.pDefBase = 1.7;

  Character1Base.mDefBase = 1.5;

  Character1Base.moveBase = 4;

  Character1Base.rangeBase = 1;

  Character1Base.hitRateBase = 97;

  Character1Base.dodgeRateBase = 3;

  Character1Base.itemMax = 10;

  Character1Base.expRate = 1.8;

  Character1Base.textDeath = "島村卯月";

  Character1Base.abilityName = "笑顔の魔法";

  Character1Base.abilityDesc = "周囲8マスの味方の攻撃を10%上げる";

  function Character1Base(params) {
    Character1Base.__super__.constructor.call(this, params);
  }

  return Character1Base;

})(CharacterBase);

Character2Base = (function(superClass) {
  extend(Character2Base, superClass);

  Character2Base.characterId = 2;

  Character2Base.characterName = "渋谷凛";

  Character2Base.defaultJoin = true;

  Character2Base.images = ["./img/character/2/1.png", "./img/character/2/2.png"];

  Character2Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character2Base.attackBase = 15;

  Character2Base.hpBase = 16;

  Character2Base.pDefBase = 1.5;

  Character2Base.mDefBase = 1.5;

  Character2Base.moveBase = 5;

  Character2Base.rangeBase = 1;

  Character2Base.hitRateBase = 97;

  Character2Base.dodgeRateBase = 5;

  Character2Base.itemMax = 10;

  Character2Base.expRate = 1.8;

  Character2Base.textDeath = "渋谷凛";

  Character2Base.abilityName = "蒼の波動";

  Character2Base.abilityDesc = "周囲8マスの味方の回避を10%上げる";

  function Character2Base(params) {
    Character2Base.__super__.constructor.call(this, params);
  }

  return Character2Base;

})(CharacterBase);

Character3Base = (function(superClass) {
  extend(Character3Base, superClass);

  Character3Base.characterId = 3;

  Character3Base.characterName = "本田未央";

  Character3Base.defaultJoin = true;

  Character3Base.images = ["./img/character/3/1.png", "./img/character/3/2.png"];

  Character3Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character3Base.attackBase = 13;

  Character3Base.hpBase = 17;

  Character3Base.pDefBase = 1.5;

  Character3Base.mDefBase = 1.5;

  Character3Base.moveBase = 4;

  Character3Base.rangeBase = 1;

  Character3Base.hitRateBase = 97;

  Character3Base.dodgeRateBase = 3;

  Character3Base.itemMax = 10;

  Character3Base.expRate = 1.8;

  Character3Base.textDeath = "本田未央";

  Character3Base.abilityName = "フレンドリー";

  Character3Base.abilityDesc = "周囲8マスの味方の物防・魔防を10%上げる";

  function Character3Base(params) {
    Character3Base.__super__.constructor.call(this, params);
  }

  return Character3Base;

})(CharacterBase);

Character4Base = (function(superClass) {
  extend(Character4Base, superClass);

  Character4Base.characterId = 4;

  Character4Base.characterName = "相川千夏";

  Character4Base.defaultJoin = true;

  Character4Base.images = ["./img/character/4/1.png", "./img/character/4/2.png"];

  Character4Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character4Base.attackBase = 13;

  Character4Base.hpBase = 17;

  Character4Base.pDefBase = 1.5;

  Character4Base.mDefBase = 1.5;

  Character4Base.moveBase = 4;

  Character4Base.rangeBase = 1;

  Character4Base.hitRateBase = 97;

  Character4Base.dodgeRateBase = 3;

  Character4Base.itemMax = 10;

  Character4Base.expRate = 2.2;

  Character4Base.textDeath = "相川千夏";

  Character4Base.abilityName = "なし";

  Character4Base.abilityDesc = "なし";

  function Character4Base(params) {
    Character4Base.__super__.constructor.call(this, params);
  }

  return Character4Base;

})(CharacterBase);

Character5Base = (function(superClass) {
  extend(Character5Base, superClass);

  Character5Base.characterId = 5;

  Character5Base.characterName = "愛野渚";

  Character5Base.defaultJoin = true;

  Character5Base.images = ["./img/character/5/1.png", "./img/character/5/2.png"];

  Character5Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character5Base.attackBase = 13;

  Character5Base.hpBase = 17;

  Character5Base.pDefBase = 1.5;

  Character5Base.mDefBase = 1.5;

  Character5Base.moveBase = 4;

  Character5Base.rangeBase = 1;

  Character5Base.hitRateBase = 97;

  Character5Base.dodgeRateBase = 3;

  Character5Base.itemMax = 10;

  Character5Base.expRate = 2.2;

  Character5Base.textDeath = "愛野渚";

  Character5Base.abilityName = "なし";

  Character5Base.abilityDesc = "なし";

  function Character5Base(params) {
    Character5Base.__super__.constructor.call(this, params);
  }

  return Character5Base;

})(CharacterBase);

Character6Base = (function(superClass) {
  extend(Character6Base, superClass);

  Character6Base.characterId = 6;

  Character6Base.characterName = "相葉夕美";

  Character6Base.defaultJoin = true;

  Character6Base.images = ["./img/character/6/1.png", "./img/character/6/2.png"];

  Character6Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character6Base.attackBase = 12;

  Character6Base.hpBase = 18;

  Character6Base.pDefBase = 1.5;

  Character6Base.mDefBase = 1.5;

  Character6Base.moveBase = 4;

  Character6Base.rangeBase = 1;

  Character6Base.hitRateBase = 97;

  Character6Base.dodgeRateBase = 3;

  Character6Base.itemMax = 15;

  Character6Base.expRate = 2.2;

  Character6Base.textDeath = "相葉夕美";

  Character6Base.abilityName = "なし";

  Character6Base.abilityDesc = "ターン終了時、周囲の空いているマスに花を出現させることがある";

  function Character6Base(params) {
    Character6Base.__super__.constructor.call(this, params);
  }

  return Character6Base;

})(CharacterBase);

Character7Base = (function(superClass) {
  extend(Character7Base, superClass);

  Character7Base.characterId = 7;

  Character7Base.characterName = "相原雪乃";

  Character7Base.defaultJoin = true;

  Character7Base.images = ["./img/character/7/1.png", "./img/character/7/2.png"];

  Character7Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character7Base.attackBase = 13;

  Character7Base.hpBase = 17;

  Character7Base.pDefBase = 1.5;

  Character7Base.mDefBase = 1.5;

  Character7Base.moveBase = 4;

  Character7Base.rangeBase = 1;

  Character7Base.hitRateBase = 97;

  Character7Base.dodgeRateBase = 3;

  Character7Base.itemMax = 10;

  Character7Base.expRate = 2.2;

  Character7Base.textDeath = "相原雪乃";

  Character7Base.abilityName = "なし";

  Character7Base.abilityDesc = "なし";

  function Character7Base(params) {
    Character7Base.__super__.constructor.call(this, params);
  }

  return Character7Base;

})(CharacterBase);

Character8Base = (function(superClass) {
  extend(Character8Base, superClass);

  Character8Base.characterId = 8;

  Character8Base.characterName = "赤城みりあ";

  Character8Base.defaultJoin = true;

  Character8Base.images = ["./img/character/8/1.png", "./img/character/8/2.png"];

  Character8Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character8Base.attackBase = 12;

  Character8Base.hpBase = 15;

  Character8Base.pDefBase = 1.3;

  Character8Base.mDefBase = 1.5;

  Character8Base.moveBase = 5;

  Character8Base.rangeBase = 1;

  Character8Base.hitRateBase = 97;

  Character8Base.dodgeRateBase = 5;

  Character8Base.itemMax = 10;

  Character8Base.expRate = 2.0;

  Character8Base.textDeath = "赤城みりあ";

  Character8Base.abilityName = "みりあもやるー！";

  Character8Base.abilityDesc = "行動終了後に味方が攻撃した時、1%の確率で再行動できる";

  function Character8Base(params) {
    Character8Base.__super__.constructor.call(this, params);
  }

  return Character8Base;

})(CharacterBase);

Character9Base = (function(superClass) {
  extend(Character9Base, superClass);

  Character9Base.characterId = 9;

  Character9Base.characterName = "赤西瑛梨華";

  Character9Base.defaultJoin = true;

  Character9Base.images = ["./img/character/9/1.png", "./img/character/9/2.png"];

  Character9Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character9Base.attackBase = 13;

  Character9Base.hpBase = 17;

  Character9Base.pDefBase = 1.5;

  Character9Base.mDefBase = 1.5;

  Character9Base.moveBase = 4;

  Character9Base.rangeBase = 1;

  Character9Base.hitRateBase = 97;

  Character9Base.dodgeRateBase = 3;

  Character9Base.itemMax = 10;

  Character9Base.expRate = 2.2;

  Character9Base.textDeath = "赤西瑛梨華";

  Character9Base.abilityName = "なし";

  Character9Base.abilityDesc = "なし";

  function Character9Base(params) {
    Character9Base.__super__.constructor.call(this, params);
  }

  return Character9Base;

})(CharacterBase);

Character10Base = (function(superClass) {
  extend(Character10Base, superClass);

  Character10Base.characterId = 10;

  Character10Base.characterName = "浅野風香";

  Character10Base.defaultJoin = true;

  Character10Base.images = ["./img/character/10/1.png", "./img/character/10/2.png"];

  Character10Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character10Base.attackBase = 13;

  Character10Base.hpBase = 17;

  Character10Base.pDefBase = 1.5;

  Character10Base.mDefBase = 1.5;

  Character10Base.moveBase = 4;

  Character10Base.rangeBase = 1;

  Character10Base.hitRateBase = 97;

  Character10Base.dodgeRateBase = 3;

  Character10Base.itemMax = 10;

  Character10Base.expRate = 2.2;

  Character10Base.textDeath = "浅野風香";

  Character10Base.abilityName = "なし";

  Character10Base.abilityDesc = "なし";

  function Character10Base(params) {
    Character10Base.__super__.constructor.call(this, params);
  }

  return Character10Base;

})(CharacterBase);

Character11Base = (function(superClass) {
  extend(Character11Base, superClass);

  Character11Base.characterId = 11;

  Character11Base.characterName = "浅利七海";

  Character11Base.defaultJoin = true;

  Character11Base.images = ["./img/character/11/1.png", "./img/character/11/2.png"];

  Character11Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character11Base.attackBase = 13;

  Character11Base.hpBase = 17;

  Character11Base.pDefBase = 1.5;

  Character11Base.mDefBase = 1.5;

  Character11Base.moveBase = 4;

  Character11Base.rangeBase = 1;

  Character11Base.hitRateBase = 97;

  Character11Base.dodgeRateBase = 3;

  Character11Base.itemMax = 10;

  Character11Base.expRate = 2.2;

  Character11Base.textDeath = "浅利七海";

  Character11Base.abilityName = "なし";

  Character11Base.abilityDesc = "なし";

  function Character11Base(params) {
    Character11Base.__super__.constructor.call(this, params);
  }

  return Character11Base;

})(CharacterBase);

Character12Base = (function(superClass) {
  extend(Character12Base, superClass);

  Character12Base.characterId = 12;

  Character12Base.characterName = "アナスタシア";

  Character12Base.defaultJoin = true;

  Character12Base.images = ["./img/character/12/1.png", "./img/character/12/2.png"];

  Character12Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character12Base.attackBase = 13;

  Character12Base.hpBase = 17;

  Character12Base.pDefBase = 1.5;

  Character12Base.mDefBase = 1.7;

  Character12Base.moveBase = 4;

  Character12Base.rangeBase = 1;

  Character12Base.hitRateBase = 97;

  Character12Base.dodgeRateBase = 3;

  Character12Base.itemMax = 10;

  Character12Base.expRate = 2.2;

  Character12Base.textDeath = "アナスタシア";

  Character12Base.abilityName = "なし";

  Character12Base.abilityDesc = "なし";

  function Character12Base(params) {
    Character12Base.__super__.constructor.call(this, params);
  }

  return Character12Base;

})(CharacterBase);

Character13Base = (function(superClass) {
  extend(Character13Base, superClass);

  Character13Base.characterId = 13;

  Character13Base.characterName = "安部菜々";

  Character13Base.defaultJoin = true;

  Character13Base.images = ["./img/character/13/1.png", "./img/character/13/2.png"];

  Character13Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character13Base.attackBase = 13;

  Character13Base.hpBase = 15;

  Character13Base.pDefBase = 1.4;

  Character13Base.mDefBase = 1.4;

  Character13Base.moveBase = 4;

  Character13Base.rangeBase = 1;

  Character13Base.hitRateBase = 97;

  Character13Base.dodgeRateBase = 3;

  Character13Base.itemMax = 10;

  Character13Base.expRate = 2.2;

  Character13Base.textDeath = "安部菜々";

  Character13Base.abilityName = "なし";

  Character13Base.abilityDesc = "なし";

  function Character13Base(params) {
    Character13Base.__super__.constructor.call(this, params);
  }

  return Character13Base;

})(CharacterBase);

Character14Base = (function(superClass) {
  extend(Character14Base, superClass);

  Character14Base.characterId = 14;

  Character14Base.characterName = "綾瀬穂乃香";

  Character14Base.defaultJoin = true;

  Character14Base.images = ["./img/character/14/1.png", "./img/character/14/2.png"];

  Character14Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character14Base.attackBase = 13;

  Character14Base.hpBase = 14;

  Character14Base.pDefBase = 1.5;

  Character14Base.mDefBase = 1.5;

  Character14Base.moveBase = 4;

  Character14Base.rangeBase = 1;

  Character14Base.hitRateBase = 97;

  Character14Base.dodgeRateBase = 10;

  Character14Base.itemMax = 10;

  Character14Base.expRate = 2.2;

  Character14Base.textDeath = "綾瀬穂乃香";

  Character14Base.abilityName = "なし";

  Character14Base.abilityDesc = "なし";

  function Character14Base(params) {
    Character14Base.__super__.constructor.call(this, params);
  }

  return Character14Base;

})(CharacterBase);

Character15Base = (function(superClass) {
  extend(Character15Base, superClass);

  Character15Base.characterId = 15;

  Character15Base.characterName = "荒木比奈";

  Character15Base.defaultJoin = true;

  Character15Base.images = ["./img/character/15/1.png", "./img/character/15/2.png"];

  Character15Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character15Base.attackBase = 13;

  Character15Base.hpBase = 16;

  Character15Base.pDefBase = 1.4;

  Character15Base.mDefBase = 1.4;

  Character15Base.moveBase = 4;

  Character15Base.rangeBase = 1;

  Character15Base.hitRateBase = 95;

  Character15Base.dodgeRateBase = 2;

  Character15Base.itemMax = 10;

  Character15Base.expRate = 2.2;

  Character15Base.textDeath = "荒木比奈";

  Character15Base.abilityName = "なし";

  Character15Base.abilityDesc = "なし";

  function Character15Base(params) {
    Character15Base.__super__.constructor.call(this, params);
  }

  return Character15Base;

})(CharacterBase);

Character16Base = (function(superClass) {
  extend(Character16Base, superClass);

  Character16Base.characterId = 16;

  Character16Base.characterName = "有浦柑奈";

  Character16Base.defaultJoin = true;

  Character16Base.images = ["./img/character/16/1.png", "./img/character/16/2.png"];

  Character16Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character16Base.attackBase = 13;

  Character16Base.hpBase = 17;

  Character16Base.pDefBase = 1.5;

  Character16Base.mDefBase = 1.5;

  Character16Base.moveBase = 4;

  Character16Base.rangeBase = 1;

  Character16Base.hitRateBase = 97;

  Character16Base.dodgeRateBase = 3;

  Character16Base.itemMax = 10;

  Character16Base.expRate = 2.2;

  Character16Base.textDeath = "有浦柑奈";

  Character16Base.abilityName = "なし";

  Character16Base.abilityDesc = "なし";

  function Character16Base(params) {
    Character16Base.__super__.constructor.call(this, params);
  }

  return Character16Base;

})(CharacterBase);

Character17Base = (function(superClass) {
  extend(Character17Base, superClass);

  Character17Base.characterId = 17;

  Character17Base.characterName = "安斎都";

  Character17Base.defaultJoin = true;

  Character17Base.images = ["./img/character/17/1.png", "./img/character/17/2.png"];

  Character17Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character17Base.attackBase = 13;

  Character17Base.hpBase = 17;

  Character17Base.pDefBase = 1.5;

  Character17Base.mDefBase = 1.5;

  Character17Base.moveBase = 4;

  Character17Base.rangeBase = 1;

  Character17Base.hitRateBase = 97;

  Character17Base.dodgeRateBase = 3;

  Character17Base.itemMax = 10;

  Character17Base.expRate = 2.2;

  Character17Base.textDeath = "安斎都";

  Character17Base.abilityName = "なし";

  Character17Base.abilityDesc = "なし";

  function Character17Base(params) {
    Character17Base.__super__.constructor.call(this, params);
  }

  return Character17Base;

})(CharacterBase);

Character18Base = (function(superClass) {
  extend(Character18Base, superClass);

  Character18Base.characterId = 18;

  Character18Base.characterName = "イヴ・サンタクロース";

  Character18Base.defaultJoin = true;

  Character18Base.images = ["./img/character/18/1.png", "./img/character/18/2.png"];

  Character18Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character18Base.attackBase = 12;

  Character18Base.hpBase = 14;

  Character18Base.pDefBase = 1.4;

  Character18Base.mDefBase = 1.8;

  Character18Base.moveBase = 5;

  Character18Base.rangeBase = 2;

  Character18Base.hitRateBase = 95;

  Character18Base.dodgeRateBase = 4;

  Character18Base.itemMax = 20;

  Character18Base.expRate = 2.2;

  Character18Base.textDeath = "イヴ・サンタクロース";

  Character18Base.abilityName = "プレゼント";

  Character18Base.abilityDesc = "プレゼントに与えるダメージが2倍になる";

  function Character18Base(params) {
    Character18Base.__super__.constructor.call(this, params);
  }

  return Character18Base;

})(CharacterBase);

Character19Base = (function(superClass) {
  extend(Character19Base, superClass);

  Character19Base.characterId = 19;

  Character19Base.characterName = "五十嵐響子";

  Character19Base.defaultJoin = true;

  Character19Base.images = ["./img/character/19/1.png", "./img/character/19/2.png"];

  Character19Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character19Base.attackBase = 12;

  Character19Base.hpBase = 17;

  Character19Base.pDefBase = 1.6;

  Character19Base.mDefBase = 1.6;

  Character19Base.moveBase = 4;

  Character19Base.rangeBase = 1;

  Character19Base.hitRateBase = 97;

  Character19Base.dodgeRateBase = 3;

  Character19Base.itemMax = 10;

  Character19Base.expRate = 2.2;

  Character19Base.textDeath = "五十嵐響子";

  Character19Base.abilityName = "なし";

  Character19Base.abilityDesc = "ターン終了時、周囲の味方のHPを回復することがある";

  function Character19Base(params) {
    Character19Base.__super__.constructor.call(this, params);
  }

  return Character19Base;

})(CharacterBase);

Character20Base = (function(superClass) {
  extend(Character20Base, superClass);

  Character20Base.characterId = 20;

  Character20Base.characterName = "池袋晶葉";

  Character20Base.defaultJoin = true;

  Character20Base.images = ["./img/character/20/1.png", "./img/character/20/2.png"];

  Character20Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character20Base.attackBase = 14;

  Character20Base.hpBase = 13;

  Character20Base.pDefBase = 1.8;

  Character20Base.mDefBase = 1.2;

  Character20Base.moveBase = 4;

  Character20Base.rangeBase = 2;

  Character20Base.hitRateBase = 95;

  Character20Base.dodgeRateBase = 2;

  Character20Base.itemMax = 12;

  Character20Base.expRate = 2.2;

  Character20Base.textDeath = "池袋晶葉";

  Character20Base.abilityName = "大丈夫博士";

  Character20Base.abilityDesc = "ターン開始時、周囲にいる味方一人の攻撃、物防、魔防を30%上げるか下げるかすることがある";

  function Character20Base(params) {
    Character20Base.__super__.constructor.call(this, params);
  }

  return Character20Base;

})(CharacterBase);

Character21Base = (function(superClass) {
  extend(Character21Base, superClass);

  Character21Base.characterId = 21;

  Character21Base.characterName = "伊集院惠";

  Character21Base.defaultJoin = true;

  Character21Base.images = ["./img/character/21/1.png", "./img/character/21/2.png"];

  Character21Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character21Base.attackBase = 13;

  Character21Base.hpBase = 17;

  Character21Base.pDefBase = 1.5;

  Character21Base.mDefBase = 1.5;

  Character21Base.moveBase = 4;

  Character21Base.rangeBase = 1;

  Character21Base.hitRateBase = 97;

  Character21Base.dodgeRateBase = 3;

  Character21Base.itemMax = 10;

  Character21Base.expRate = 2.2;

  Character21Base.textDeath = "伊集院惠";

  Character21Base.abilityName = "なし";

  Character21Base.abilityDesc = "なし";

  function Character21Base(params) {
    Character21Base.__super__.constructor.call(this, params);
  }

  return Character21Base;

})(CharacterBase);

Character22Base = (function(superClass) {
  extend(Character22Base, superClass);

  Character22Base.characterId = 22;

  Character22Base.characterName = "一ノ瀬志希";

  Character22Base.defaultJoin = true;

  Character22Base.images = ["./img/character/22/1.png", "./img/character/22/2.png"];

  Character22Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character22Base.attackBase = 15;

  Character22Base.hpBase = 17;

  Character22Base.pDefBase = 1.5;

  Character22Base.mDefBase = 1.8;

  Character22Base.moveBase = 5;

  Character22Base.rangeBase = 2;

  Character22Base.hitRateBase = 95;

  Character22Base.dodgeRateBase = 4;

  Character22Base.itemMax = 10;

  Character22Base.expRate = 2.2;

  Character22Base.textDeath = "一ノ瀬志希";

  Character22Base.abilityName = "失踪";

  Character22Base.abilityDesc = "味方ターン終了時に、ランダムなマスに移動することがある";

  function Character22Base(params) {
    Character22Base.__super__.constructor.call(this, params);
  }

  return Character22Base;

})(CharacterBase);

Character23Base = (function(superClass) {
  extend(Character23Base, superClass);

  Character23Base.characterId = 23;

  Character23Base.characterName = "市原仁奈";

  Character23Base.defaultJoin = true;

  Character23Base.images = ["./img/character/23/1.png", "./img/character/23/2.png"];

  Character23Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character23Base.attackBase = 11;

  Character23Base.hpBase = 13;

  Character23Base.pDefBase = 1.4;

  Character23Base.mDefBase = 1.4;

  Character23Base.moveBase = 4;

  Character23Base.rangeBase = 1;

  Character23Base.hitRateBase = 95;

  Character23Base.dodgeRateBase = 5;

  Character23Base.itemMax = 10;

  Character23Base.expRate = 2.2;

  Character23Base.textDeath = "市原仁奈";

  Character23Base.abilityName = "誰かのきもちになるですよ";

  Character23Base.abilityDesc = "敵ターン終了時に、ランダムなステータスがフィールド内の誰かの値に変わる";

  function Character23Base(params) {
    Character23Base.__super__.constructor.call(this, params);
  }

  return Character23Base;

})(CharacterBase);

Character24Base = (function(superClass) {
  extend(Character24Base, superClass);

  Character24Base.characterId = 24;

  Character24Base.characterName = "今井加奈";

  Character24Base.defaultJoin = true;

  Character24Base.images = ["./img/character/24/1.png", "./img/character/24/2.png"];

  Character24Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character24Base.attackBase = 13;

  Character24Base.hpBase = 15;

  Character24Base.pDefBase = 1.5;

  Character24Base.mDefBase = 1.5;

  Character24Base.moveBase = 4;

  Character24Base.rangeBase = 1;

  Character24Base.hitRateBase = 97;

  Character24Base.dodgeRateBase = 3;

  Character24Base.itemMax = 10;

  Character24Base.expRate = 2.2;

  Character24Base.textDeath = "今井加奈";

  Character24Base.abilityName = "なし";

  Character24Base.abilityDesc = "なし";

  function Character24Base(params) {
    Character24Base.__super__.constructor.call(this, params);
  }

  return Character24Base;

})(CharacterBase);

Character25Base = (function(superClass) {
  extend(Character25Base, superClass);

  Character25Base.characterId = 25;

  Character25Base.characterName = "井村雪菜";

  Character25Base.defaultJoin = true;

  Character25Base.images = ["./img/character/25/1.png", "./img/character/25/2.png"];

  Character25Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character25Base.attackBase = 13;

  Character25Base.hpBase = 17;

  Character25Base.pDefBase = 1.5;

  Character25Base.mDefBase = 1.5;

  Character25Base.moveBase = 4;

  Character25Base.rangeBase = 1;

  Character25Base.hitRateBase = 97;

  Character25Base.dodgeRateBase = 3;

  Character25Base.itemMax = 10;

  Character25Base.expRate = 2.2;

  Character25Base.textDeath = "井村雪菜";

  Character25Base.abilityName = "なし";

  Character25Base.abilityDesc = "なし";

  function Character25Base(params) {
    Character25Base.__super__.constructor.call(this, params);
  }

  return Character25Base;

})(CharacterBase);

Character26Base = (function(superClass) {
  extend(Character26Base, superClass);

  Character26Base.characterId = 26;

  Character26Base.characterName = "上田鈴帆";

  Character26Base.defaultJoin = true;

  Character26Base.images = ["./img/character/26/1.png", "./img/character/26/2.png"];

  Character26Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character26Base.attackBase = 12;

  Character26Base.hpBase = 15;

  Character26Base.pDefBase = 3.5;

  Character26Base.mDefBase = 3.5;

  Character26Base.moveBase = 4;

  Character26Base.rangeBase = 1;

  Character26Base.hitRateBase = 97;

  Character26Base.dodgeRateBase = 3;

  Character26Base.itemMax = 15;

  Character26Base.expRate = 2.3;

  Character26Base.textDeath = "上田鈴帆";

  Character26Base.abilityName = "なし";

  Character26Base.abilityDesc = "なし";

  function Character26Base(params) {
    Character26Base.__super__.constructor.call(this, params);
  }

  return Character26Base;

})(CharacterBase);

Character27Base = (function(superClass) {
  extend(Character27Base, superClass);

  Character27Base.characterId = 27;

  Character27Base.characterName = "氏家むつみ";

  Character27Base.defaultJoin = true;

  Character27Base.images = ["./img/character/27/1.png", "./img/character/27/2.png"];

  Character27Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character27Base.attackBase = 13;

  Character27Base.hpBase = 17;

  Character27Base.pDefBase = 1.5;

  Character27Base.mDefBase = 1.5;

  Character27Base.moveBase = 4;

  Character27Base.rangeBase = 1;

  Character27Base.hitRateBase = 97;

  Character27Base.dodgeRateBase = 3;

  Character27Base.itemMax = 10;

  Character27Base.expRate = 2.2;

  Character27Base.textDeath = "氏家むつみ";

  Character27Base.abilityName = "なし";

  Character27Base.abilityDesc = "なし";

  function Character27Base(params) {
    Character27Base.__super__.constructor.call(this, params);
  }

  return Character27Base;

})(CharacterBase);

Character28Base = (function(superClass) {
  extend(Character28Base, superClass);

  Character28Base.characterId = 28;

  Character28Base.characterName = "梅木音葉";

  Character28Base.defaultJoin = true;

  Character28Base.images = ["./img/character/28/1.png", "./img/character/28/2.png"];

  Character28Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character28Base.attackBase = 13;

  Character28Base.hpBase = 17;

  Character28Base.pDefBase = 1.5;

  Character28Base.mDefBase = 1.5;

  Character28Base.moveBase = 4;

  Character28Base.rangeBase = 1;

  Character28Base.hitRateBase = 97;

  Character28Base.dodgeRateBase = 3;

  Character28Base.itemMax = 10;

  Character28Base.expRate = 2.2;

  Character28Base.textDeath = "梅木音葉";

  Character28Base.abilityName = "なし";

  Character28Base.abilityDesc = "なし";

  function Character28Base(params) {
    Character28Base.__super__.constructor.call(this, params);
  }

  return Character28Base;

})(CharacterBase);

Character29Base = (function(superClass) {
  extend(Character29Base, superClass);

  Character29Base.characterId = 29;

  Character29Base.characterName = "江上椿";

  Character29Base.defaultJoin = true;

  Character29Base.images = ["./img/character/29/1.png", "./img/character/29/2.png"];

  Character29Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character29Base.attackBase = 13;

  Character29Base.hpBase = 17;

  Character29Base.pDefBase = 1.5;

  Character29Base.mDefBase = 1.5;

  Character29Base.moveBase = 4;

  Character29Base.rangeBase = 1;

  Character29Base.hitRateBase = 97;

  Character29Base.dodgeRateBase = 3;

  Character29Base.itemMax = 10;

  Character29Base.expRate = 2.2;

  Character29Base.textDeath = "江上椿";

  Character29Base.abilityName = "なし";

  Character29Base.abilityDesc = "なし";

  function Character29Base(params) {
    Character29Base.__super__.constructor.call(this, params);
  }

  return Character29Base;

})(CharacterBase);

Character30Base = (function(superClass) {
  extend(Character30Base, superClass);

  Character30Base.characterId = 30;

  Character30Base.characterName = "衛藤美紗希";

  Character30Base.defaultJoin = true;

  Character30Base.images = ["./img/character/30/1.png", "./img/character/30/2.png"];

  Character30Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character30Base.attackBase = 13;

  Character30Base.hpBase = 17;

  Character30Base.pDefBase = 1.5;

  Character30Base.mDefBase = 1.5;

  Character30Base.moveBase = 4;

  Character30Base.rangeBase = 1;

  Character30Base.hitRateBase = 97;

  Character30Base.dodgeRateBase = 3;

  Character30Base.itemMax = 10;

  Character30Base.expRate = 2.2;

  Character30Base.textDeath = "衛藤美紗希";

  Character30Base.abilityName = "なし";

  Character30Base.abilityDesc = "なし";

  function Character30Base(params) {
    Character30Base.__super__.constructor.call(this, params);
  }

  return Character30Base;

})(CharacterBase);

Character31Base = (function(superClass) {
  extend(Character31Base, superClass);

  Character31Base.characterId = 31;

  Character31Base.characterName = "海老原菜帆";

  Character31Base.defaultJoin = true;

  Character31Base.images = ["./img/character/31/1.png", "./img/character/31/2.png"];

  Character31Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character31Base.attackBase = 13;

  Character31Base.hpBase = 17;

  Character31Base.pDefBase = 1.5;

  Character31Base.mDefBase = 1.5;

  Character31Base.moveBase = 4;

  Character31Base.rangeBase = 1;

  Character31Base.hitRateBase = 97;

  Character31Base.dodgeRateBase = 3;

  Character31Base.itemMax = 10;

  Character31Base.expRate = 2.2;

  Character31Base.textDeath = "海老原菜帆";

  Character31Base.abilityName = "なし";

  Character31Base.abilityDesc = "なし";

  function Character31Base(params) {
    Character31Base.__super__.constructor.call(this, params);
  }

  return Character31Base;

})(CharacterBase);

Character32Base = (function(superClass) {
  extend(Character32Base, superClass);

  Character32Base.characterId = 32;

  Character32Base.characterName = "及川雫";

  Character32Base.defaultJoin = true;

  Character32Base.images = ["./img/character/32/1.png", "./img/character/32/2.png"];

  Character32Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character32Base.attackBase = 13;

  Character32Base.hpBase = 20;

  Character32Base.pDefBase = 1.7;

  Character32Base.mDefBase = 1.5;

  Character32Base.moveBase = 3;

  Character32Base.rangeBase = 1;

  Character32Base.hitRateBase = 97;

  Character32Base.dodgeRateBase = 2;

  Character32Base.itemMax = 14;

  Character32Base.expRate = 2.3;

  Character32Base.textDeath = "及川雫";

  Character32Base.abilityName = "なし";

  Character32Base.abilityDesc = "なし";

  function Character32Base(params) {
    Character32Base.__super__.constructor.call(this, params);
  }

  return Character32Base;

})(CharacterBase);

Character33Base = (function(superClass) {
  extend(Character33Base, superClass);

  Character33Base.characterId = 33;

  Character33Base.characterName = "大石泉";

  Character33Base.defaultJoin = true;

  Character33Base.images = ["./img/character/33/1.png", "./img/character/33/2.png"];

  Character33Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character33Base.attackBase = 13;

  Character33Base.hpBase = 17;

  Character33Base.pDefBase = 1.5;

  Character33Base.mDefBase = 1.5;

  Character33Base.moveBase = 4;

  Character33Base.rangeBase = 1;

  Character33Base.hitRateBase = 97;

  Character33Base.dodgeRateBase = 3;

  Character33Base.itemMax = 10;

  Character33Base.expRate = 2.2;

  Character33Base.textDeath = "大石泉";

  Character33Base.abilityName = "なし";

  Character33Base.abilityDesc = "なし";

  function Character33Base(params) {
    Character33Base.__super__.constructor.call(this, params);
  }

  return Character33Base;

})(CharacterBase);

Character34Base = (function(superClass) {
  extend(Character34Base, superClass);

  Character34Base.characterId = 34;

  Character34Base.characterName = "太田優";

  Character34Base.defaultJoin = true;

  Character34Base.images = ["./img/character/34/1.png", "./img/character/34/2.png"];

  Character34Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character34Base.attackBase = 13;

  Character34Base.hpBase = 17;

  Character34Base.pDefBase = 1.5;

  Character34Base.mDefBase = 1.5;

  Character34Base.moveBase = 4;

  Character34Base.rangeBase = 1;

  Character34Base.hitRateBase = 97;

  Character34Base.dodgeRateBase = 3;

  Character34Base.itemMax = 10;

  Character34Base.expRate = 2.2;

  Character34Base.textDeath = "太田優";

  Character34Base.abilityName = "なし";

  Character34Base.abilityDesc = "なし";

  function Character34Base(params) {
    Character34Base.__super__.constructor.call(this, params);
  }

  return Character34Base;

})(CharacterBase);

Character35Base = (function(superClass) {
  extend(Character35Base, superClass);

  Character35Base.characterId = 35;

  Character35Base.characterName = "大槻唯";

  Character35Base.defaultJoin = true;

  Character35Base.images = ["./img/character/35/1.png", "./img/character/35/2.png"];

  Character35Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character35Base.attackBase = 14;

  Character35Base.hpBase = 17;

  Character35Base.pDefBase = 1.5;

  Character35Base.mDefBase = 1.5;

  Character35Base.moveBase = 4;

  Character35Base.rangeBase = 1;

  Character35Base.hitRateBase = 95;

  Character35Base.dodgeRateBase = 3;

  Character35Base.itemMax = 10;

  Character35Base.expRate = 2.0;

  Character35Base.textDeath = "大槻唯";

  Character35Base.abilityName = "なし";

  Character35Base.abilityDesc = "なし";

  function Character35Base(params) {
    Character35Base.__super__.constructor.call(this, params);
  }

  return Character35Base;

})(CharacterBase);

Character36Base = (function(superClass) {
  extend(Character36Base, superClass);

  Character36Base.characterId = 36;

  Character36Base.characterName = "大西由里子";

  Character36Base.defaultJoin = true;

  Character36Base.images = ["./img/character/36/1.png", "./img/character/36/2.png"];

  Character36Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character36Base.attackBase = 13;

  Character36Base.hpBase = 17;

  Character36Base.pDefBase = 1.5;

  Character36Base.mDefBase = 1.5;

  Character36Base.moveBase = 4;

  Character36Base.rangeBase = 1;

  Character36Base.hitRateBase = 97;

  Character36Base.dodgeRateBase = 3;

  Character36Base.itemMax = 10;

  Character36Base.expRate = 2.2;

  Character36Base.textDeath = "大西由里子";

  Character36Base.abilityName = "なし";

  Character36Base.abilityDesc = "なし";

  function Character36Base(params) {
    Character36Base.__super__.constructor.call(this, params);
  }

  return Character36Base;

})(CharacterBase);

Character37Base = (function(superClass) {
  extend(Character37Base, superClass);

  Character37Base.characterId = 37;

  Character37Base.characterName = "大沼くるみ";

  Character37Base.defaultJoin = true;

  Character37Base.images = ["./img/character/37/1.png", "./img/character/37/2.png"];

  Character37Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character37Base.attackBase = 13;

  Character37Base.hpBase = 17;

  Character37Base.pDefBase = 1.5;

  Character37Base.mDefBase = 1.5;

  Character37Base.moveBase = 4;

  Character37Base.rangeBase = 1;

  Character37Base.hitRateBase = 97;

  Character37Base.dodgeRateBase = 3;

  Character37Base.itemMax = 10;

  Character37Base.expRate = 2.2;

  Character37Base.textDeath = "大沼くるみ";

  Character37Base.abilityName = "なし";

  Character37Base.abilityDesc = "なし";

  function Character37Base(params) {
    Character37Base.__super__.constructor.call(this, params);
  }

  return Character37Base;

})(CharacterBase);

Character38Base = (function(superClass) {
  extend(Character38Base, superClass);

  Character38Base.characterId = 38;

  Character38Base.characterName = "大原みちる";

  Character38Base.defaultJoin = true;

  Character38Base.images = ["./img/character/38/1.png", "./img/character/38/2.png"];

  Character38Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character38Base.attackBase = 13;

  Character38Base.hpBase = 17;

  Character38Base.pDefBase = 1.5;

  Character38Base.mDefBase = 1.5;

  Character38Base.moveBase = 4;

  Character38Base.rangeBase = 1;

  Character38Base.hitRateBase = 97;

  Character38Base.dodgeRateBase = 3;

  Character38Base.itemMax = 10;

  Character38Base.expRate = 2.2;

  Character38Base.textDeath = "大原みちる";

  Character38Base.abilityName = "なし";

  Character38Base.abilityDesc = "なし";

  function Character38Base(params) {
    Character38Base.__super__.constructor.call(this, params);
  }

  return Character38Base;

})(CharacterBase);

Character39Base = (function(superClass) {
  extend(Character39Base, superClass);

  Character39Base.characterId = 39;

  Character39Base.characterName = "岡崎泰葉";

  Character39Base.defaultJoin = true;

  Character39Base.images = ["./img/character/39/1.png", "./img/character/39/2.png"];

  Character39Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character39Base.attackBase = 13;

  Character39Base.hpBase = 17;

  Character39Base.pDefBase = 1.5;

  Character39Base.mDefBase = 1.5;

  Character39Base.moveBase = 4;

  Character39Base.rangeBase = 1;

  Character39Base.hitRateBase = 97;

  Character39Base.dodgeRateBase = 3;

  Character39Base.itemMax = 10;

  Character39Base.expRate = 2.2;

  Character39Base.textDeath = "岡崎泰葉";

  Character39Base.abilityName = "なし";

  Character39Base.abilityDesc = "なし";

  function Character39Base(params) {
    Character39Base.__super__.constructor.call(this, params);
  }

  return Character39Base;

})(CharacterBase);

Character40Base = (function(superClass) {
  extend(Character40Base, superClass);

  Character40Base.characterId = 40;

  Character40Base.characterName = "緒方智絵里";

  Character40Base.defaultJoin = true;

  Character40Base.images = ["./img/character/40/1.png", "./img/character/40/2.png"];

  Character40Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character40Base.attackBase = 11;

  Character40Base.hpBase = 15;

  Character40Base.pDefBase = 1.5;

  Character40Base.mDefBase = 1.6;

  Character40Base.moveBase = 4;

  Character40Base.rangeBase = 1;

  Character40Base.hitRateBase = 97;

  Character40Base.dodgeRateBase = 3;

  Character40Base.itemMax = 12;

  Character40Base.expRate = 2.2;

  Character40Base.textDeath = "緒方智絵里";

  Character40Base.abilityName = "なし";

  Character40Base.abilityDesc = "なし";

  function Character40Base(params) {
    Character40Base.__super__.constructor.call(this, params);
  }

  return Character40Base;

})(CharacterBase);

Character41Base = (function(superClass) {
  extend(Character41Base, superClass);

  Character41Base.characterId = 41;

  Character41Base.characterName = "奥山沙織";

  Character41Base.defaultJoin = true;

  Character41Base.images = ["./img/character/41/1.png", "./img/character/41/2.png"];

  Character41Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character41Base.attackBase = 13;

  Character41Base.hpBase = 17;

  Character41Base.pDefBase = 1.5;

  Character41Base.mDefBase = 1.5;

  Character41Base.moveBase = 4;

  Character41Base.rangeBase = 1;

  Character41Base.hitRateBase = 97;

  Character41Base.dodgeRateBase = 3;

  Character41Base.itemMax = 10;

  Character41Base.expRate = 2.2;

  Character41Base.textDeath = "奥山沙織";

  Character41Base.abilityName = "なし";

  Character41Base.abilityDesc = "なし";

  function Character41Base(params) {
    Character41Base.__super__.constructor.call(this, params);
  }

  return Character41Base;

})(CharacterBase);

Character42Base = (function(superClass) {
  extend(Character42Base, superClass);

  Character42Base.characterId = 42;

  Character42Base.characterName = "乙倉悠貴";

  Character42Base.defaultJoin = true;

  Character42Base.images = ["./img/character/42/1.png", "./img/character/42/2.png"];

  Character42Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character42Base.attackBase = 13;

  Character42Base.hpBase = 17;

  Character42Base.pDefBase = 1.5;

  Character42Base.mDefBase = 1.5;

  Character42Base.moveBase = 4;

  Character42Base.rangeBase = 1;

  Character42Base.hitRateBase = 97;

  Character42Base.dodgeRateBase = 3;

  Character42Base.itemMax = 10;

  Character42Base.expRate = 2.2;

  Character42Base.textDeath = "乙倉悠貴";

  Character42Base.abilityName = "なし";

  Character42Base.abilityDesc = "なし";

  function Character42Base(params) {
    Character42Base.__super__.constructor.call(this, params);
  }

  return Character42Base;

})(CharacterBase);

Character43Base = (function(superClass) {
  extend(Character43Base, superClass);

  Character43Base.characterId = 43;

  Character43Base.characterName = "片桐早苗";

  Character43Base.defaultJoin = true;

  Character43Base.images = ["./img/character/43/1.png", "./img/character/43/2.png"];

  Character43Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character43Base.attackBase = 14;

  Character43Base.hpBase = 18;

  Character43Base.pDefBase = 1.7;

  Character43Base.mDefBase = 1.4;

  Character43Base.moveBase = 4;

  Character43Base.rangeBase = 3;

  Character43Base.hitRateBase = 95;

  Character43Base.dodgeRateBase = 2;

  Character43Base.itemMax = 12;

  Character43Base.expRate = 2.2;

  Character43Base.textDeath = "片桐早苗";

  Character43Base.abilityName = "取り締まり";

  Character43Base.abilityDesc = "攻撃した敵の移動力を1下げる";

  function Character43Base(params) {
    Character43Base.__super__.constructor.call(this, params);
  }

  return Character43Base;

})(CharacterBase);

Character44Base = (function(superClass) {
  extend(Character44Base, superClass);

  Character44Base.characterId = 44;

  Character44Base.characterName = "上条春菜";

  Character44Base.defaultJoin = true;

  Character44Base.images = ["./img/character/44/1.png", "./img/character/44/2.png"];

  Character44Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character44Base.attackBase = 13;

  Character44Base.hpBase = 17;

  Character44Base.pDefBase = 1.5;

  Character44Base.mDefBase = 1.5;

  Character44Base.moveBase = 4;

  Character44Base.rangeBase = 1;

  Character44Base.hitRateBase = 97;

  Character44Base.dodgeRateBase = 3;

  Character44Base.itemMax = 10;

  Character44Base.expRate = 2.2;

  Character44Base.textDeath = "上条春菜";

  Character44Base.abilityName = "なし";

  Character44Base.abilityDesc = "なし";

  function Character44Base(params) {
    Character44Base.__super__.constructor.call(this, params);
  }

  return Character44Base;

})(CharacterBase);

Character45Base = (function(superClass) {
  extend(Character45Base, superClass);

  Character45Base.characterId = 45;

  Character45Base.characterName = "神谷奈緒";

  Character45Base.defaultJoin = true;

  Character45Base.images = ["./img/character/45/1.png", "./img/character/45/2.png"];

  Character45Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character45Base.attackBase = 13;

  Character45Base.hpBase = 17;

  Character45Base.pDefBase = 1.5;

  Character45Base.mDefBase = 1.5;

  Character45Base.moveBase = 4;

  Character45Base.rangeBase = 1;

  Character45Base.hitRateBase = 97;

  Character45Base.dodgeRateBase = 3;

  Character45Base.itemMax = 10;

  Character45Base.expRate = 1.8;

  Character45Base.textDeath = "神谷奈緒";

  Character45Base.abilityName = "なし";

  Character45Base.abilityDesc = "なし";

  function Character45Base(params) {
    Character45Base.__super__.constructor.call(this, params);
  }

  return Character45Base;

})(CharacterBase);

Character46Base = (function(superClass) {
  extend(Character46Base, superClass);

  Character46Base.characterId = 46;

  Character46Base.characterName = "川島瑞樹";

  Character46Base.defaultJoin = true;

  Character46Base.images = ["./img/character/46/1.png", "./img/character/46/2.png"];

  Character46Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character46Base.attackBase = 13;

  Character46Base.hpBase = 17;

  Character46Base.pDefBase = 1.5;

  Character46Base.mDefBase = 1.5;

  Character46Base.moveBase = 4;

  Character46Base.rangeBase = 1;

  Character46Base.hitRateBase = 97;

  Character46Base.dodgeRateBase = 3;

  Character46Base.itemMax = 12;

  Character46Base.expRate = 2.2;

  Character46Base.textDeath = "川島瑞樹";

  Character46Base.abilityName = "なし";

  Character46Base.abilityDesc = "なし";

  function Character46Base(params) {
    Character46Base.__super__.constructor.call(this, params);
  }

  return Character46Base;

})(CharacterBase);

Character47Base = (function(superClass) {
  extend(Character47Base, superClass);

  Character47Base.characterId = 47;

  Character47Base.characterName = "神崎蘭子";

  Character47Base.defaultJoin = true;

  Character47Base.images = ["./img/character/47/1.png", "./img/character/47/2.png"];

  Character47Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character47Base.attackBase = 13;

  Character47Base.hpBase = 14;

  Character47Base.pDefBase = 1.3;

  Character47Base.mDefBase = 3;

  Character47Base.moveBase = 4;

  Character47Base.rangeBase = 3;

  Character47Base.hitRateBase = 92;

  Character47Base.dodgeRateBase = 3;

  Character47Base.itemMax = 10;

  Character47Base.expRate = 2.0;

  Character47Base.textDeath = "神崎蘭子";

  Character47Base.abilityName = "黒魔術";

  Character47Base.abilityDesc = "攻撃した敵を一撃で倒すことがある";

  function Character47Base(params) {
    Character47Base.__super__.constructor.call(this, params);
  }

  return Character47Base;

})(CharacterBase);

Character48Base = (function(superClass) {
  extend(Character48Base, superClass);

  Character48Base.characterId = 48;

  Character48Base.characterName = "岸部彩華";

  Character48Base.defaultJoin = true;

  Character48Base.images = ["./img/character/48/1.png", "./img/character/48/2.png"];

  Character48Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character48Base.attackBase = 13;

  Character48Base.hpBase = 17;

  Character48Base.pDefBase = 1.5;

  Character48Base.mDefBase = 1.5;

  Character48Base.moveBase = 4;

  Character48Base.rangeBase = 1;

  Character48Base.hitRateBase = 97;

  Character48Base.dodgeRateBase = 3;

  Character48Base.itemMax = 10;

  Character48Base.expRate = 2.2;

  Character48Base.textDeath = "岸部彩華";

  Character48Base.abilityName = "なし";

  Character48Base.abilityDesc = "なし";

  function Character48Base(params) {
    Character48Base.__super__.constructor.call(this, params);
  }

  return Character48Base;

})(CharacterBase);

Character49Base = (function(superClass) {
  extend(Character49Base, superClass);

  Character49Base.characterId = 49;

  Character49Base.characterName = "北川真尋";

  Character49Base.defaultJoin = true;

  Character49Base.images = ["./img/character/49/1.png", "./img/character/49/2.png"];

  Character49Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character49Base.attackBase = 13;

  Character49Base.hpBase = 17;

  Character49Base.pDefBase = 1.5;

  Character49Base.mDefBase = 1.5;

  Character49Base.moveBase = 4;

  Character49Base.rangeBase = 1;

  Character49Base.hitRateBase = 97;

  Character49Base.dodgeRateBase = 3;

  Character49Base.itemMax = 10;

  Character49Base.expRate = 2.2;

  Character49Base.textDeath = "北川真尋";

  Character49Base.abilityName = "なし";

  Character49Base.abilityDesc = "なし";

  function Character49Base(params) {
    Character49Base.__super__.constructor.call(this, params);
  }

  return Character49Base;

})(CharacterBase);

Character50Base = (function(superClass) {
  extend(Character50Base, superClass);

  Character50Base.characterId = 50;

  Character50Base.characterName = "喜多日菜子";

  Character50Base.defaultJoin = true;

  Character50Base.images = ["./img/character/50/1.png", "./img/character/50/2.png"];

  Character50Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character50Base.attackBase = 13;

  Character50Base.hpBase = 17;

  Character50Base.pDefBase = 1.5;

  Character50Base.mDefBase = 1.5;

  Character50Base.moveBase = 4;

  Character50Base.rangeBase = 1;

  Character50Base.hitRateBase = 97;

  Character50Base.dodgeRateBase = 3;

  Character50Base.itemMax = 10;

  Character50Base.expRate = 2.2;

  Character50Base.textDeath = "喜多日菜子";

  Character50Base.abilityName = "なし";

  Character50Base.abilityDesc = "なし";

  function Character50Base(params) {
    Character50Base.__super__.constructor.call(this, params);
  }

  return Character50Base;

})(CharacterBase);

Character51Base = (function(superClass) {
  extend(Character51Base, superClass);

  Character51Base.characterId = 51;

  Character51Base.characterName = "喜多見柚";

  Character51Base.defaultJoin = true;

  Character51Base.images = ["./img/character/51/1.png", "./img/character/51/2.png"];

  Character51Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character51Base.attackBase = 13;

  Character51Base.hpBase = 17;

  Character51Base.pDefBase = 1.5;

  Character51Base.mDefBase = 1.5;

  Character51Base.moveBase = 4;

  Character51Base.rangeBase = 1;

  Character51Base.hitRateBase = 97;

  Character51Base.dodgeRateBase = 3;

  Character51Base.itemMax = 10;

  Character51Base.expRate = 2.2;

  Character51Base.textDeath = "喜多見柚";

  Character51Base.abilityName = "なし";

  Character51Base.abilityDesc = "なし";

  function Character51Base(params) {
    Character51Base.__super__.constructor.call(this, params);
  }

  return Character51Base;

})(CharacterBase);

Character52Base = (function(superClass) {
  extend(Character52Base, superClass);

  Character52Base.characterId = 52;

  Character52Base.characterName = "木場真奈美";

  Character52Base.defaultJoin = true;

  Character52Base.images = ["./img/character/52/1.png", "./img/character/52/2.png"];

  Character52Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character52Base.attackBase = 15;

  Character52Base.hpBase = 18;

  Character52Base.pDefBase = 1.7;

  Character52Base.mDefBase = 1.4;

  Character52Base.moveBase = 4;

  Character52Base.rangeBase = 1;

  Character52Base.hitRateBase = 99;

  Character52Base.dodgeRateBase = 5;

  Character52Base.itemMax = 12;

  Character52Base.expRate = 2.2;

  Character52Base.textDeath = "木場真奈美";

  Character52Base.abilityName = "なし";

  Character52Base.abilityDesc = "なし";

  function Character52Base(params) {
    Character52Base.__super__.constructor.call(this, params);
  }

  return Character52Base;

})(CharacterBase);

Character53Base = (function(superClass) {
  extend(Character53Base, superClass);

  Character53Base.characterId = 53;

  Character53Base.characterName = "木村夏樹";

  Character53Base.defaultJoin = true;

  Character53Base.images = ["./img/character/53/1.png", "./img/character/53/2.png"];

  Character53Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character53Base.attackBase = 15;

  Character53Base.hpBase = 17;

  Character53Base.pDefBase = 1.6;

  Character53Base.mDefBase = 1.6;

  Character53Base.moveBase = 4;

  Character53Base.rangeBase = 1;

  Character53Base.hitRateBase = 97;

  Character53Base.dodgeRateBase = 3;

  Character53Base.itemMax = 10;

  Character53Base.expRate = 2.2;

  Character53Base.textDeath = "木村夏樹";

  Character53Base.abilityName = "なし";

  Character53Base.abilityDesc = "なし";

  function Character53Base(params) {
    Character53Base.__super__.constructor.call(this, params);
  }

  return Character53Base;

})(CharacterBase);

Character54Base = (function(superClass) {
  extend(Character54Base, superClass);

  Character54Base.characterId = 54;

  Character54Base.characterName = "キャシー・グラハム";

  Character54Base.defaultJoin = true;

  Character54Base.images = ["./img/character/54/1.png", "./img/character/54/2.png"];

  Character54Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character54Base.attackBase = 13;

  Character54Base.hpBase = 17;

  Character54Base.pDefBase = 1.5;

  Character54Base.mDefBase = 1.5;

  Character54Base.moveBase = 4;

  Character54Base.rangeBase = 1;

  Character54Base.hitRateBase = 97;

  Character54Base.dodgeRateBase = 3;

  Character54Base.itemMax = 10;

  Character54Base.expRate = 2.2;

  Character54Base.textDeath = "キャシー・グラハム";

  Character54Base.abilityName = "なし";

  Character54Base.abilityDesc = "なし";

  function Character54Base(params) {
    Character54Base.__super__.constructor.call(this, params);
  }

  return Character54Base;

})(CharacterBase);

Character55Base = (function(superClass) {
  extend(Character55Base, superClass);

  Character55Base.characterId = 55;

  Character55Base.characterName = "桐野アヤ";

  Character55Base.defaultJoin = true;

  Character55Base.images = ["./img/character/55/1.png", "./img/character/55/2.png"];

  Character55Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character55Base.attackBase = 13;

  Character55Base.hpBase = 17;

  Character55Base.pDefBase = 1.5;

  Character55Base.mDefBase = 1.5;

  Character55Base.moveBase = 4;

  Character55Base.rangeBase = 1;

  Character55Base.hitRateBase = 97;

  Character55Base.dodgeRateBase = 3;

  Character55Base.itemMax = 10;

  Character55Base.expRate = 2.2;

  Character55Base.textDeath = "桐野アヤ";

  Character55Base.abilityName = "なし";

  Character55Base.abilityDesc = "なし";

  function Character55Base(params) {
    Character55Base.__super__.constructor.call(this, params);
  }

  return Character55Base;

})(CharacterBase);

Character56Base = (function(superClass) {
  extend(Character56Base, superClass);

  Character56Base.characterId = 56;

  Character56Base.characterName = "桐生つかさ";

  Character56Base.defaultJoin = true;

  Character56Base.images = ["./img/character/56/1.png", "./img/character/56/2.png"];

  Character56Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character56Base.attackBase = 13;

  Character56Base.hpBase = 17;

  Character56Base.pDefBase = 1.5;

  Character56Base.mDefBase = 1.5;

  Character56Base.moveBase = 4;

  Character56Base.rangeBase = 1;

  Character56Base.hitRateBase = 97;

  Character56Base.dodgeRateBase = 3;

  Character56Base.itemMax = 10;

  Character56Base.expRate = 2.2;

  Character56Base.textDeath = "桐生つかさ";

  Character56Base.abilityName = "なし";

  Character56Base.abilityDesc = "なし";

  function Character56Base(params) {
    Character56Base.__super__.constructor.call(this, params);
  }

  return Character56Base;

})(CharacterBase);

Character57Base = (function(superClass) {
  extend(Character57Base, superClass);

  Character57Base.characterId = 57;

  Character57Base.characterName = "日下部若葉";

  Character57Base.defaultJoin = true;

  Character57Base.images = ["./img/character/57/1.png", "./img/character/57/2.png"];

  Character57Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character57Base.attackBase = 13;

  Character57Base.hpBase = 17;

  Character57Base.pDefBase = 1.5;

  Character57Base.mDefBase = 1.5;

  Character57Base.moveBase = 4;

  Character57Base.rangeBase = 1;

  Character57Base.hitRateBase = 97;

  Character57Base.dodgeRateBase = 3;

  Character57Base.itemMax = 10;

  Character57Base.expRate = 2.2;

  Character57Base.textDeath = "日下部若葉";

  Character57Base.abilityName = "なし";

  Character57Base.abilityDesc = "なし";

  function Character57Base(params) {
    Character57Base.__super__.constructor.call(this, params);
  }

  return Character57Base;

})(CharacterBase);

Character58Base = (function(superClass) {
  extend(Character58Base, superClass);

  Character58Base.characterId = 58;

  Character58Base.characterName = "工藤忍";

  Character58Base.defaultJoin = true;

  Character58Base.images = ["./img/character/58/1.png", "./img/character/58/2.png"];

  Character58Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character58Base.attackBase = 13;

  Character58Base.hpBase = 17;

  Character58Base.pDefBase = 1.5;

  Character58Base.mDefBase = 1.5;

  Character58Base.moveBase = 4;

  Character58Base.rangeBase = 1;

  Character58Base.hitRateBase = 97;

  Character58Base.dodgeRateBase = 3;

  Character58Base.itemMax = 10;

  Character58Base.expRate = 2.2;

  Character58Base.textDeath = "工藤忍";

  Character58Base.abilityName = "なし";

  Character58Base.abilityDesc = "なし";

  function Character58Base(params) {
    Character58Base.__super__.constructor.call(this, params);
  }

  return Character58Base;

})(CharacterBase);

Character59Base = (function(superClass) {
  extend(Character59Base, superClass);

  Character59Base.characterId = 59;

  Character59Base.characterName = "クラリス";

  Character59Base.defaultJoin = true;

  Character59Base.images = ["./img/character/59/1.png", "./img/character/59/2.png"];

  Character59Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character59Base.attackBase = 13;

  Character59Base.hpBase = 17;

  Character59Base.pDefBase = 1.5;

  Character59Base.mDefBase = 1.5;

  Character59Base.moveBase = 4;

  Character59Base.rangeBase = 1;

  Character59Base.hitRateBase = 97;

  Character59Base.dodgeRateBase = 3;

  Character59Base.itemMax = 10;

  Character59Base.expRate = 2.2;

  Character59Base.textDeath = "クラリス";

  Character59Base.abilityName = "なし";

  Character59Base.abilityDesc = "なし";

  function Character59Base(params) {
    Character59Base.__super__.constructor.call(this, params);
  }

  return Character59Base;

})(CharacterBase);

Character60Base = (function(superClass) {
  extend(Character60Base, superClass);

  Character60Base.characterId = 60;

  Character60Base.characterName = "栗原ネネ";

  Character60Base.defaultJoin = true;

  Character60Base.images = ["./img/character/60/1.png", "./img/character/60/2.png"];

  Character60Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character60Base.attackBase = 13;

  Character60Base.hpBase = 17;

  Character60Base.pDefBase = 1.5;

  Character60Base.mDefBase = 1.5;

  Character60Base.moveBase = 4;

  Character60Base.rangeBase = 1;

  Character60Base.hitRateBase = 97;

  Character60Base.dodgeRateBase = 3;

  Character60Base.itemMax = 10;

  Character60Base.expRate = 2.2;

  Character60Base.textDeath = "栗原ネネ";

  Character60Base.abilityName = "なし";

  Character60Base.abilityDesc = "なし";

  function Character60Base(params) {
    Character60Base.__super__.constructor.call(this, params);
  }

  return Character60Base;

})(CharacterBase);

Character61Base = (function(superClass) {
  extend(Character61Base, superClass);

  Character61Base.characterId = 61;

  Character61Base.characterName = "黒川千秋";

  Character61Base.defaultJoin = true;

  Character61Base.images = ["./img/character/61/1.png", "./img/character/61/2.png"];

  Character61Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character61Base.attackBase = 13;

  Character61Base.hpBase = 17;

  Character61Base.pDefBase = 1.5;

  Character61Base.mDefBase = 1.5;

  Character61Base.moveBase = 4;

  Character61Base.rangeBase = 1;

  Character61Base.hitRateBase = 97;

  Character61Base.dodgeRateBase = 3;

  Character61Base.itemMax = 10;

  Character61Base.expRate = 2.2;

  Character61Base.textDeath = "黒川千秋";

  Character61Base.abilityName = "なし";

  Character61Base.abilityDesc = "なし";

  function Character61Base(params) {
    Character61Base.__super__.constructor.call(this, params);
  }

  return Character61Base;

})(CharacterBase);

Character62Base = (function(superClass) {
  extend(Character62Base, superClass);

  Character62Base.characterId = 62;

  Character62Base.characterName = "ケイト";

  Character62Base.defaultJoin = true;

  Character62Base.images = ["./img/character/62/1.png", "./img/character/62/2.png"];

  Character62Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character62Base.attackBase = 13;

  Character62Base.hpBase = 17;

  Character62Base.pDefBase = 1.5;

  Character62Base.mDefBase = 1.5;

  Character62Base.moveBase = 4;

  Character62Base.rangeBase = 1;

  Character62Base.hitRateBase = 97;

  Character62Base.dodgeRateBase = 3;

  Character62Base.itemMax = 10;

  Character62Base.expRate = 2.2;

  Character62Base.textDeath = "ケイト";

  Character62Base.abilityName = "なし";

  Character62Base.abilityDesc = "なし";

  function Character62Base(params) {
    Character62Base.__super__.constructor.call(this, params);
  }

  return Character62Base;

})(CharacterBase);

Character63Base = (function(superClass) {
  extend(Character63Base, superClass);

  Character63Base.characterId = 63;

  Character63Base.characterName = "古賀小春";

  Character63Base.defaultJoin = true;

  Character63Base.images = ["./img/character/63/1.png", "./img/character/63/2.png"];

  Character63Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character63Base.attackBase = 13;

  Character63Base.hpBase = 17;

  Character63Base.pDefBase = 1.5;

  Character63Base.mDefBase = 1.5;

  Character63Base.moveBase = 4;

  Character63Base.rangeBase = 1;

  Character63Base.hitRateBase = 97;

  Character63Base.dodgeRateBase = 3;

  Character63Base.itemMax = 10;

  Character63Base.expRate = 2.2;

  Character63Base.textDeath = "古賀小春";

  Character63Base.abilityName = "なし";

  Character63Base.abilityDesc = "なし";

  function Character63Base(params) {
    Character63Base.__super__.constructor.call(this, params);
  }

  return Character63Base;

})(CharacterBase);

Character64Base = (function(superClass) {
  extend(Character64Base, superClass);

  Character64Base.characterId = 64;

  Character64Base.characterName = "輿水幸子";

  Character64Base.defaultJoin = true;

  Character64Base.images = ["./img/character/64/1.png", "./img/character/64/2.png"];

  Character64Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character64Base.attackBase = 13;

  Character64Base.hpBase = 22;

  Character64Base.pDefBase = 1.2;

  Character64Base.mDefBase = 1.5;

  Character64Base.moveBase = 4;

  Character64Base.rangeBase = 1;

  Character64Base.hitRateBase = 97;

  Character64Base.dodgeRateBase = 1;

  Character64Base.itemMax = 10;

  Character64Base.expRate = 2.2;

  Character64Base.textDeath = "輿水幸子";

  Character64Base.abilityName = "なし";

  Character64Base.abilityDesc = "なし";

  function Character64Base(params) {
    Character64Base.__super__.constructor.call(this, params);
  }

  return Character64Base;

})(CharacterBase);

Character65Base = (function(superClass) {
  extend(Character65Base, superClass);

  Character65Base.characterId = 65;

  Character65Base.characterName = "小関麗奈";

  Character65Base.defaultJoin = true;

  Character65Base.images = ["./img/character/65/1.png", "./img/character/65/2.png"];

  Character65Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character65Base.attackBase = 13;

  Character65Base.hpBase = 17;

  Character65Base.pDefBase = 1.5;

  Character65Base.mDefBase = 1.5;

  Character65Base.moveBase = 4;

  Character65Base.rangeBase = 1;

  Character65Base.hitRateBase = 97;

  Character65Base.dodgeRateBase = 3;

  Character65Base.itemMax = 10;

  Character65Base.expRate = 2.2;

  Character65Base.textDeath = "小関麗奈";

  Character65Base.abilityName = "いたずら";

  Character65Base.abilityDesc = "味方ターン開始時に、10%の確率で周囲4マスのどこかに岩を置く";

  function Character65Base(params) {
    Character65Base.__super__.constructor.call(this, params);
  }

  return Character65Base;

})(CharacterBase);

Character66Base = (function(superClass) {
  extend(Character66Base, superClass);

  Character66Base.characterId = 66;

  Character66Base.characterName = "小早川紗枝";

  Character66Base.defaultJoin = true;

  Character66Base.images = ["./img/character/66/1.png", "./img/character/66/2.png"];

  Character66Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character66Base.attackBase = 13;

  Character66Base.hpBase = 17;

  Character66Base.pDefBase = 1.5;

  Character66Base.mDefBase = 1.5;

  Character66Base.moveBase = 4;

  Character66Base.rangeBase = 1;

  Character66Base.hitRateBase = 97;

  Character66Base.dodgeRateBase = 3;

  Character66Base.itemMax = 10;

  Character66Base.expRate = 2.2;

  Character66Base.textDeath = "小早川紗枝";

  Character66Base.abilityName = "なし";

  Character66Base.abilityDesc = "なし";

  function Character66Base(params) {
    Character66Base.__super__.constructor.call(this, params);
  }

  return Character66Base;

})(CharacterBase);

Character67Base = (function(superClass) {
  extend(Character67Base, superClass);

  Character67Base.characterId = 67;

  Character67Base.characterName = "秋月律子";

  Character67Base.defaultJoin = false;

  Character67Base.images = [];

  Character67Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character67Base.attackBase = 13;

  Character67Base.hpBase = 17;

  Character67Base.pDefBase = 1.5;

  Character67Base.mDefBase = 1.5;

  Character67Base.moveBase = 4;

  Character67Base.rangeBase = 1;

  Character67Base.hitRateBase = 97;

  Character67Base.dodgeRateBase = 3;

  Character67Base.itemMax = 10;

  Character67Base.expRate = 2.2;

  Character67Base.textDeath = "秋月律子";

  Character67Base.abilityName = "なし";

  Character67Base.abilityDesc = "なし";

  function Character67Base(params) {
    Character67Base.__super__.constructor.call(this, params);
  }

  return Character67Base;

})(CharacterBase);

Character68Base = (function(superClass) {
  extend(Character68Base, superClass);

  Character68Base.characterId = 68;

  Character68Base.characterName = "秋月涼";

  Character68Base.defaultJoin = false;

  Character68Base.images = [];

  Character68Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character68Base.attackBase = 13;

  Character68Base.hpBase = 17;

  Character68Base.pDefBase = 1.5;

  Character68Base.mDefBase = 1.5;

  Character68Base.moveBase = 4;

  Character68Base.rangeBase = 1;

  Character68Base.hitRateBase = 97;

  Character68Base.dodgeRateBase = 3;

  Character68Base.itemMax = 10;

  Character68Base.expRate = 2.2;

  Character68Base.textDeath = "秋月涼";

  Character68Base.abilityName = "なし";

  Character68Base.abilityDesc = "なし";

  function Character68Base(params) {
    Character68Base.__super__.constructor.call(this, params);
  }

  return Character68Base;

})(CharacterBase);

Character69Base = (function(superClass) {
  extend(Character69Base, superClass);

  Character69Base.characterId = 69;

  Character69Base.characterName = "天海春香";

  Character69Base.defaultJoin = false;

  Character69Base.images = [];

  Character69Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character69Base.attackBase = 13;

  Character69Base.hpBase = 17;

  Character69Base.pDefBase = 1.5;

  Character69Base.mDefBase = 1.5;

  Character69Base.moveBase = 4;

  Character69Base.rangeBase = 1;

  Character69Base.hitRateBase = 97;

  Character69Base.dodgeRateBase = 3;

  Character69Base.itemMax = 10;

  Character69Base.expRate = 2.2;

  Character69Base.textDeath = "天海春香";

  Character69Base.abilityName = "なし";

  Character69Base.abilityDesc = "なし";

  function Character69Base(params) {
    Character69Base.__super__.constructor.call(this, params);
  }

  return Character69Base;

})(CharacterBase);

Character70Base = (function(superClass) {
  extend(Character70Base, superClass);

  Character70Base.characterId = 70;

  Character70Base.characterName = "我那覇響";

  Character70Base.defaultJoin = false;

  Character70Base.images = [];

  Character70Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character70Base.attackBase = 13;

  Character70Base.hpBase = 17;

  Character70Base.pDefBase = 1.5;

  Character70Base.mDefBase = 1.5;

  Character70Base.moveBase = 4;

  Character70Base.rangeBase = 1;

  Character70Base.hitRateBase = 97;

  Character70Base.dodgeRateBase = 3;

  Character70Base.itemMax = 10;

  Character70Base.expRate = 2.2;

  Character70Base.textDeath = "我那覇響";

  Character70Base.abilityName = "なし";

  Character70Base.abilityDesc = "なし";

  function Character70Base(params) {
    Character70Base.__super__.constructor.call(this, params);
  }

  return Character70Base;

})(CharacterBase);

Character71Base = (function(superClass) {
  extend(Character71Base, superClass);

  Character71Base.characterId = 71;

  Character71Base.characterName = "菊地真";

  Character71Base.defaultJoin = false;

  Character71Base.images = [];

  Character71Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character71Base.attackBase = 19;

  Character71Base.hpBase = 19;

  Character71Base.pDefBase = 1.5;

  Character71Base.mDefBase = 1.5;

  Character71Base.moveBase = 4;

  Character71Base.rangeBase = 1;

  Character71Base.hitRateBase = 97;

  Character71Base.dodgeRateBase = 3;

  Character71Base.itemMax = 10;

  Character71Base.expRate = 2.2;

  Character71Base.textDeath = "菊地真";

  Character71Base.abilityName = "なし";

  Character71Base.abilityDesc = "なし";

  function Character71Base(params) {
    Character71Base.__super__.constructor.call(this, params);
  }

  return Character71Base;

})(CharacterBase);

Character72Base = (function(superClass) {
  extend(Character72Base, superClass);

  Character72Base.characterId = 72;

  Character72Base.characterName = "如月千早";

  Character72Base.defaultJoin = false;

  Character72Base.images = [];

  Character72Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character72Base.attackBase = 18;

  Character72Base.hpBase = 16;

  Character72Base.pDefBase = 1.8;

  Character72Base.mDefBase = 1.4;

  Character72Base.moveBase = 4;

  Character72Base.rangeBase = 1;

  Character72Base.hitRateBase = 97;

  Character72Base.dodgeRateBase = 3;

  Character72Base.itemMax = 10;

  Character72Base.expRate = 2.2;

  Character72Base.textDeath = "如月千早";

  Character72Base.abilityName = "なし";

  Character72Base.abilityDesc = "なし";

  function Character72Base(params) {
    Character72Base.__super__.constructor.call(this, params);
  }

  return Character72Base;

})(CharacterBase);

Character73Base = (function(superClass) {
  extend(Character73Base, superClass);

  Character73Base.characterId = 73;

  Character73Base.characterName = "小日向美穂";

  Character73Base.defaultJoin = false;

  Character73Base.images = [];

  Character73Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character73Base.attackBase = 13;

  Character73Base.hpBase = 17;

  Character73Base.pDefBase = 1.5;

  Character73Base.mDefBase = 1.5;

  Character73Base.moveBase = 4;

  Character73Base.rangeBase = 1;

  Character73Base.hitRateBase = 97;

  Character73Base.dodgeRateBase = 3;

  Character73Base.itemMax = 8;

  Character73Base.expRate = 2.0;

  Character73Base.textDeath = "小日向美穂";

  Character73Base.abilityName = "なし";

  Character73Base.abilityDesc = "なし";

  function Character73Base(params) {
    Character73Base.__super__.constructor.call(this, params);
  }

  return Character73Base;

})(CharacterBase);

Character74Base = (function(superClass) {
  extend(Character74Base, superClass);

  Character74Base.characterId = 74;

  Character74Base.characterName = "小松伊吹";

  Character74Base.defaultJoin = false;

  Character74Base.images = [];

  Character74Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character74Base.attackBase = 13;

  Character74Base.hpBase = 17;

  Character74Base.pDefBase = 1.5;

  Character74Base.mDefBase = 1.5;

  Character74Base.moveBase = 4;

  Character74Base.rangeBase = 1;

  Character74Base.hitRateBase = 97;

  Character74Base.dodgeRateBase = 3;

  Character74Base.itemMax = 10;

  Character74Base.expRate = 2.2;

  Character74Base.textDeath = "小松伊吹";

  Character74Base.abilityName = "なし";

  Character74Base.abilityDesc = "なし";

  function Character74Base(params) {
    Character74Base.__super__.constructor.call(this, params);
  }

  return Character74Base;

})(CharacterBase);

Character75Base = (function(superClass) {
  extend(Character75Base, superClass);

  Character75Base.characterId = 75;

  Character75Base.characterName = "小室千奈美";

  Character75Base.defaultJoin = false;

  Character75Base.images = [];

  Character75Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character75Base.attackBase = 13;

  Character75Base.hpBase = 17;

  Character75Base.pDefBase = 1.5;

  Character75Base.mDefBase = 1.5;

  Character75Base.moveBase = 4;

  Character75Base.rangeBase = 1;

  Character75Base.hitRateBase = 97;

  Character75Base.dodgeRateBase = 3;

  Character75Base.itemMax = 10;

  Character75Base.expRate = 2.2;

  Character75Base.textDeath = "小室千奈美";

  Character75Base.abilityName = "なし";

  Character75Base.abilityDesc = "なし";

  function Character75Base(params) {
    Character75Base.__super__.constructor.call(this, params);
  }

  return Character75Base;

})(CharacterBase);

Character76Base = (function(superClass) {
  extend(Character76Base, superClass);

  Character76Base.characterId = 76;

  Character76Base.characterName = "西園寺琴歌";

  Character76Base.defaultJoin = false;

  Character76Base.images = [];

  Character76Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character76Base.attackBase = 11;

  Character76Base.hpBase = 19;

  Character76Base.pDefBase = 1.6;

  Character76Base.mDefBase = 1.6;

  Character76Base.moveBase = 3;

  Character76Base.rangeBase = 1;

  Character76Base.hitRateBase = 95;

  Character76Base.dodgeRateBase = 2;

  Character76Base.itemMax = 20;

  Character76Base.expRate = 2.2;

  Character76Base.textDeath = "西園寺琴歌";

  Character76Base.abilityName = "なし";

  Character76Base.abilityDesc = "なし";

  function Character76Base(params) {
    Character76Base.__super__.constructor.call(this, params);
  }

  return Character76Base;

})(CharacterBase);

Character77Base = (function(superClass) {
  extend(Character77Base, superClass);

  Character77Base.characterId = 77;

  Character77Base.characterName = "財前時子";

  Character77Base.defaultJoin = false;

  Character77Base.images = [];

  Character77Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character77Base.attackBase = 21;

  Character77Base.hpBase = 18;

  Character77Base.pDefBase = 1.7;

  Character77Base.mDefBase = 1.4;

  Character77Base.moveBase = 4;

  Character77Base.rangeBase = 2;

  Character77Base.hitRateBase = 97;

  Character77Base.dodgeRateBase = 2;

  Character77Base.itemMax = 6;

  Character77Base.expRate = 2.2;

  Character77Base.textDeath = "財前時子";

  Character77Base.abilityName = "ムチ";

  Character77Base.abilityDesc = "後ろにいる敵にもダメージを与えることがある";

  function Character77Base(params) {
    Character77Base.__super__.constructor.call(this, params);
  }

  return Character77Base;

})(CharacterBase);

Character78Base = (function(superClass) {
  extend(Character78Base, superClass);

  Character78Base.characterId = 78;

  Character78Base.characterName = "斉藤洋子";

  Character78Base.defaultJoin = false;

  Character78Base.images = [];

  Character78Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character78Base.attackBase = 13;

  Character78Base.hpBase = 17;

  Character78Base.pDefBase = 1.5;

  Character78Base.mDefBase = 1.5;

  Character78Base.moveBase = 4;

  Character78Base.rangeBase = 1;

  Character78Base.hitRateBase = 97;

  Character78Base.dodgeRateBase = 3;

  Character78Base.itemMax = 10;

  Character78Base.expRate = 2.2;

  Character78Base.textDeath = "斉藤洋子";

  Character78Base.abilityName = "なし";

  Character78Base.abilityDesc = "なし";

  function Character78Base(params) {
    Character78Base.__super__.constructor.call(this, params);
  }

  return Character78Base;

})(CharacterBase);

Character79Base = (function(superClass) {
  extend(Character79Base, superClass);

  Character79Base.characterId = 79;

  Character79Base.characterName = "冴島清美";

  Character79Base.defaultJoin = false;

  Character79Base.images = [];

  Character79Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character79Base.attackBase = 13;

  Character79Base.hpBase = 17;

  Character79Base.pDefBase = 1.5;

  Character79Base.mDefBase = 1.5;

  Character79Base.moveBase = 4;

  Character79Base.rangeBase = 1;

  Character79Base.hitRateBase = 97;

  Character79Base.dodgeRateBase = 3;

  Character79Base.itemMax = 10;

  Character79Base.expRate = 2.2;

  Character79Base.textDeath = "冴島清美";

  Character79Base.abilityName = "なし";

  Character79Base.abilityDesc = "なし";

  function Character79Base(params) {
    Character79Base.__super__.constructor.call(this, params);
  }

  return Character79Base;

})(CharacterBase);

Character80Base = (function(superClass) {
  extend(Character80Base, superClass);

  Character80Base.characterId = 80;

  Character80Base.characterName = "榊原里美";

  Character80Base.defaultJoin = false;

  Character80Base.images = [];

  Character80Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character80Base.attackBase = 13;

  Character80Base.hpBase = 17;

  Character80Base.pDefBase = 1.5;

  Character80Base.mDefBase = 1.5;

  Character80Base.moveBase = 4;

  Character80Base.rangeBase = 1;

  Character80Base.hitRateBase = 97;

  Character80Base.dodgeRateBase = 3;

  Character80Base.itemMax = 10;

  Character80Base.expRate = 2.2;

  Character80Base.textDeath = "榊原里美";

  Character80Base.abilityName = "なし";

  Character80Base.abilityDesc = "なし";

  function Character80Base(params) {
    Character80Base.__super__.constructor.call(this, params);
  }

  return Character80Base;

})(CharacterBase);

Character81Base = (function(superClass) {
  extend(Character81Base, superClass);

  Character81Base.characterId = 81;

  Character81Base.characterName = "鷺沢文香";

  Character81Base.defaultJoin = false;

  Character81Base.images = [];

  Character81Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character81Base.attackBase = 10;

  Character81Base.hpBase = 14;

  Character81Base.pDefBase = 1;

  Character81Base.mDefBase = 1;

  Character81Base.moveBase = 2;

  Character81Base.rangeBase = 2;

  Character81Base.hitRateBase = 90;

  Character81Base.dodgeRateBase = 1;

  Character81Base.itemMax = 20;

  Character81Base.expRate = 2.2;

  Character81Base.textDeath = "鷺沢文香";

  Character81Base.abilityName = "なし";

  Character81Base.abilityDesc = "装備したアイテムの効果が倍になる";

  function Character81Base(params) {
    Character81Base.__super__.constructor.call(this, params);
  }

  return Character81Base;

})(CharacterBase);

Character82Base = (function(superClass) {
  extend(Character82Base, superClass);

  Character82Base.characterId = 82;

  Character82Base.characterName = "佐久間まゆ";

  Character82Base.defaultJoin = false;

  Character82Base.images = [];

  Character82Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character82Base.attackBase = 15;

  Character82Base.hpBase = 18;

  Character82Base.pDefBase = 1.5;

  Character82Base.mDefBase = 1.5;

  Character82Base.moveBase = 4;

  Character82Base.rangeBase = 2;

  Character82Base.hitRateBase = 97;

  Character82Base.dodgeRateBase = 2;

  Character82Base.itemMax = 10;

  Character82Base.expRate = 2.2;

  Character82Base.textDeath = "佐久間まゆ";

  Character82Base.abilityName = "道連れ";

  Character82Base.abilityDesc = "敵に倒された時、その敵を消し去ることがある";

  function Character82Base(params) {
    Character82Base.__super__.constructor.call(this, params);
  }

  return Character82Base;

})(CharacterBase);

Character83Base = (function(superClass) {
  extend(Character83Base, superClass);

  Character83Base.characterId = 83;

  Character83Base.characterName = "櫻井桃華";

  Character83Base.defaultJoin = false;

  Character83Base.images = [];

  Character83Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character83Base.attackBase = 13;

  Character83Base.hpBase = 15;

  Character83Base.pDefBase = 1.3;

  Character83Base.mDefBase = 2.5;

  Character83Base.moveBase = 4;

  Character83Base.rangeBase = 1;

  Character83Base.hitRateBase = 97;

  Character83Base.dodgeRateBase = 3;

  Character83Base.itemMax = 10;

  Character83Base.expRate = 2.2;

  Character83Base.textDeath = "櫻井桃華";

  Character83Base.abilityName = "なし";

  Character83Base.abilityDesc = "なし";

  function Character83Base(params) {
    Character83Base.__super__.constructor.call(this, params);
  }

  return Character83Base;

})(CharacterBase);

Character84Base = (function(superClass) {
  extend(Character84Base, superClass);

  Character84Base.characterId = 84;

  Character84Base.characterName = "佐々木千枝";

  Character84Base.defaultJoin = false;

  Character84Base.images = [];

  Character84Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character84Base.attackBase = 13;

  Character84Base.hpBase = 17;

  Character84Base.pDefBase = 1.5;

  Character84Base.mDefBase = 1.5;

  Character84Base.moveBase = 4;

  Character84Base.rangeBase = 1;

  Character84Base.hitRateBase = 97;

  Character84Base.dodgeRateBase = 3;

  Character84Base.itemMax = 10;

  Character84Base.expRate = 2.2;

  Character84Base.textDeath = "佐々木千枝";

  Character84Base.abilityName = "なし";

  Character84Base.abilityDesc = "なし";

  function Character84Base(params) {
    Character84Base.__super__.constructor.call(this, params);
  }

  return Character84Base;

})(CharacterBase);

Character85Base = (function(superClass) {
  extend(Character85Base, superClass);

  Character85Base.characterId = 85;

  Character85Base.characterName = "佐城雪美";

  Character85Base.defaultJoin = false;

  Character85Base.images = [];

  Character85Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character85Base.attackBase = 13;

  Character85Base.hpBase = 17;

  Character85Base.pDefBase = 1.5;

  Character85Base.mDefBase = 1.5;

  Character85Base.moveBase = 4;

  Character85Base.rangeBase = 1;

  Character85Base.hitRateBase = 97;

  Character85Base.dodgeRateBase = 3;

  Character85Base.itemMax = 10;

  Character85Base.expRate = 2.2;

  Character85Base.textDeath = "佐城雪美";

  Character85Base.abilityName = "なし";

  Character85Base.abilityDesc = "なし";

  function Character85Base(params) {
    Character85Base.__super__.constructor.call(this, params);
  }

  return Character85Base;

})(CharacterBase);

Character86Base = (function(superClass) {
  extend(Character86Base, superClass);

  Character86Base.characterId = 86;

  Character86Base.characterName = "佐藤心";

  Character86Base.defaultJoin = false;

  Character86Base.images = [];

  Character86Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character86Base.attackBase = 13;

  Character86Base.hpBase = 15;

  Character86Base.pDefBase = 1.5;

  Character86Base.mDefBase = 2;

  Character86Base.moveBase = 3;

  Character86Base.rangeBase = 2;

  Character86Base.hitRateBase = 97;

  Character86Base.dodgeRateBase = 3;

  Character86Base.itemMax = 10;

  Character86Base.expRate = 2.2;

  Character86Base.textDeath = "佐藤心";

  Character86Base.abilityName = "なし";

  Character86Base.abilityDesc = "なし";

  function Character86Base(params) {
    Character86Base.__super__.constructor.call(this, params);
  }

  return Character86Base;

})(CharacterBase);

Character87Base = (function(superClass) {
  extend(Character87Base, superClass);

  Character87Base.characterId = 87;

  Character87Base.characterName = "沢田麻理菜";

  Character87Base.defaultJoin = false;

  Character87Base.images = [];

  Character87Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character87Base.attackBase = 13;

  Character87Base.hpBase = 17;

  Character87Base.pDefBase = 1.5;

  Character87Base.mDefBase = 1.5;

  Character87Base.moveBase = 4;

  Character87Base.rangeBase = 1;

  Character87Base.hitRateBase = 97;

  Character87Base.dodgeRateBase = 3;

  Character87Base.itemMax = 10;

  Character87Base.expRate = 2.2;

  Character87Base.textDeath = "沢田麻理菜";

  Character87Base.abilityName = "なし";

  Character87Base.abilityDesc = "なし";

  function Character87Base(params) {
    Character87Base.__super__.constructor.call(this, params);
  }

  return Character87Base;

})(CharacterBase);

Character88Base = (function(superClass) {
  extend(Character88Base, superClass);

  Character88Base.characterId = 88;

  Character88Base.characterName = "椎名法子";

  Character88Base.defaultJoin = false;

  Character88Base.images = [];

  Character88Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character88Base.attackBase = 12;

  Character88Base.hpBase = 17;

  Character88Base.pDefBase = 1.4;

  Character88Base.mDefBase = 1.4;

  Character88Base.moveBase = 4;

  Character88Base.rangeBase = 1;

  Character88Base.hitRateBase = 95;

  Character88Base.dodgeRateBase = 3;

  Character88Base.itemMax = 10;

  Character88Base.expRate = 2.2;

  Character88Base.textDeath = "椎名法子";

  Character88Base.abilityName = "ドーナツ配布";

  Character88Base.abilityDesc = "周囲8マスの味方のHPを10%回復することがある";

  function Character88Base(params) {
    Character88Base.__super__.constructor.call(this, params);
  }

  return Character88Base;

})(CharacterBase);

Character89Base = (function(superClass) {
  extend(Character89Base, superClass);

  Character89Base.characterId = 89;

  Character89Base.characterName = "塩見周子";

  Character89Base.defaultJoin = false;

  Character89Base.images = [];

  Character89Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character89Base.attackBase = 12;

  Character89Base.hpBase = 16;

  Character89Base.pDefBase = 1.4;

  Character89Base.mDefBase = 1.6;

  Character89Base.moveBase = 4;

  Character89Base.rangeBase = 2;

  Character89Base.hitRateBase = 97;

  Character89Base.dodgeRateBase = 3;

  Character89Base.itemMax = 12;

  Character89Base.expRate = 2.3;

  Character89Base.textDeath = "塩見周子";

  Character89Base.abilityName = "気まぐれ";

  Character89Base.abilityDesc = "ターン開始時、HPが10%回復するか、5%のダメージを受ける";

  function Character89Base(params) {
    Character89Base.__super__.constructor.call(this, params);
  }

  return Character89Base;

})(CharacterBase);

Character90Base = (function(superClass) {
  extend(Character90Base, superClass);

  Character90Base.characterId = 90;

  Character90Base.characterName = "四条貴音";

  Character90Base.defaultJoin = false;

  Character90Base.images = [];

  Character90Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character90Base.attackBase = 13;

  Character90Base.hpBase = 17;

  Character90Base.pDefBase = 1.5;

  Character90Base.mDefBase = 1.5;

  Character90Base.moveBase = 4;

  Character90Base.rangeBase = 1;

  Character90Base.hitRateBase = 97;

  Character90Base.dodgeRateBase = 3;

  Character90Base.itemMax = 10;

  Character90Base.expRate = 2.2;

  Character90Base.textDeath = "四条貴音";

  Character90Base.abilityName = "なし";

  Character90Base.abilityDesc = "なし";

  function Character90Base(params) {
    Character90Base.__super__.constructor.call(this, params);
  }

  return Character90Base;

})(CharacterBase);

Character91Base = (function(superClass) {
  extend(Character91Base, superClass);

  Character91Base.characterId = 91;

  Character91Base.characterName = "篠原礼";

  Character91Base.defaultJoin = false;

  Character91Base.images = [];

  Character91Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character91Base.attackBase = 13;

  Character91Base.hpBase = 17;

  Character91Base.pDefBase = 1.5;

  Character91Base.mDefBase = 1.5;

  Character91Base.moveBase = 4;

  Character91Base.rangeBase = 1;

  Character91Base.hitRateBase = 97;

  Character91Base.dodgeRateBase = 3;

  Character91Base.itemMax = 10;

  Character91Base.expRate = 2.2;

  Character91Base.textDeath = "篠原礼";

  Character91Base.abilityName = "なし";

  Character91Base.abilityDesc = "なし";

  function Character91Base(params) {
    Character91Base.__super__.constructor.call(this, params);
  }

  return Character91Base;

})(CharacterBase);

Character92Base = (function(superClass) {
  extend(Character92Base, superClass);

  Character92Base.characterId = 92;

  Character92Base.characterName = "首藤葵";

  Character92Base.defaultJoin = false;

  Character92Base.images = [];

  Character92Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character92Base.attackBase = 13;

  Character92Base.hpBase = 17;

  Character92Base.pDefBase = 1.5;

  Character92Base.mDefBase = 1.5;

  Character92Base.moveBase = 4;

  Character92Base.rangeBase = 1;

  Character92Base.hitRateBase = 97;

  Character92Base.dodgeRateBase = 3;

  Character92Base.itemMax = 10;

  Character92Base.expRate = 2.2;

  Character92Base.textDeath = "首藤葵";

  Character92Base.abilityName = "なし";

  Character92Base.abilityDesc = "なし";

  function Character92Base(params) {
    Character92Base.__super__.constructor.call(this, params);
  }

  return Character92Base;

})(CharacterBase);

Character93Base = (function(superClass) {
  extend(Character93Base, superClass);

  Character93Base.characterId = 93;

  Character93Base.characterName = "城ヶ崎美嘉";

  Character93Base.defaultJoin = false;

  Character93Base.images = [];

  Character93Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character93Base.attackBase = 14;

  Character93Base.hpBase = 18;

  Character93Base.pDefBase = 1;

  Character93Base.mDefBase = 2;

  Character93Base.moveBase = 4;

  Character93Base.rangeBase = 1;

  Character93Base.hitRateBase = 97;

  Character93Base.dodgeRateBase = 3;

  Character93Base.itemMax = 12;

  Character93Base.expRate = 2.2;

  Character93Base.textDeath = "城ヶ崎美嘉";

  Character93Base.abilityName = "姉妹";

  Character93Base.abilityDesc = "城ヶ崎莉嘉が出撃している間、物防が2倍になり、移動、射程が1上がる";

  function Character93Base(params) {
    Character93Base.__super__.constructor.call(this, params);
  }

  return Character93Base;

})(CharacterBase);

Character94Base = (function(superClass) {
  extend(Character94Base, superClass);

  Character94Base.characterId = 94;

  Character94Base.characterName = "城ヶ崎莉嘉";

  Character94Base.defaultJoin = false;

  Character94Base.images = [];

  Character94Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character94Base.attackBase = 14;

  Character94Base.hpBase = 16;

  Character94Base.pDefBase = 2;

  Character94Base.mDefBase = 1;

  Character94Base.moveBase = 4;

  Character94Base.rangeBase = 1;

  Character94Base.hitRateBase = 96;

  Character94Base.dodgeRateBase = 4;

  Character94Base.itemMax = 10;

  Character94Base.expRate = 2.2;

  Character94Base.textDeath = "城ヶ崎莉嘉";

  Character94Base.abilityName = "姉妹";

  Character94Base.abilityDesc = "城ヶ崎美嘉が出撃している間、魔防が2倍になり、移動、射程が1上がる";

  function Character94Base(params) {
    Character94Base.__super__.constructor.call(this, params);
  }

  return Character94Base;

})(CharacterBase);

Character95Base = (function(superClass) {
  extend(Character95Base, superClass);

  Character95Base.characterId = 95;

  Character95Base.characterName = "白菊ほたる";

  Character95Base.defaultJoin = false;

  Character95Base.images = [];

  Character95Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character95Base.attackBase = 13;

  Character95Base.hpBase = 17;

  Character95Base.pDefBase = 1.5;

  Character95Base.mDefBase = 1.5;

  Character95Base.moveBase = 4;

  Character95Base.rangeBase = 1;

  Character95Base.hitRateBase = 97;

  Character95Base.dodgeRateBase = 3;

  Character95Base.itemMax = 10;

  Character95Base.expRate = 2.2;

  Character95Base.textDeath = "白菊ほたる";

  Character95Base.abilityName = "なし";

  Character95Base.abilityDesc = "なし";

  function Character95Base(params) {
    Character95Base.__super__.constructor.call(this, params);
  }

  return Character95Base;

})(CharacterBase);

Character96Base = (function(superClass) {
  extend(Character96Base, superClass);

  Character96Base.characterId = 96;

  Character96Base.characterName = "白坂小梅";

  Character96Base.defaultJoin = false;

  Character96Base.images = [];

  Character96Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character96Base.attackBase = 13;

  Character96Base.hpBase = 17;

  Character96Base.pDefBase = 1.5;

  Character96Base.mDefBase = 1.5;

  Character96Base.moveBase = 4;

  Character96Base.rangeBase = 1;

  Character96Base.hitRateBase = 97;

  Character96Base.dodgeRateBase = 3;

  Character96Base.itemMax = 10;

  Character96Base.expRate = 2.2;

  Character96Base.textDeath = "白坂小梅";

  Character96Base.abilityName = "なし";

  Character96Base.abilityDesc = "なし";

  function Character96Base(params) {
    Character96Base.__super__.constructor.call(this, params);
  }

  return Character96Base;

})(CharacterBase);

Character97Base = (function(superClass) {
  extend(Character97Base, superClass);

  Character97Base.characterId = 97;

  Character97Base.characterName = "杉坂海";

  Character97Base.defaultJoin = false;

  Character97Base.images = [];

  Character97Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character97Base.attackBase = 13;

  Character97Base.hpBase = 17;

  Character97Base.pDefBase = 1.5;

  Character97Base.mDefBase = 1.5;

  Character97Base.moveBase = 4;

  Character97Base.rangeBase = 1;

  Character97Base.hitRateBase = 97;

  Character97Base.dodgeRateBase = 3;

  Character97Base.itemMax = 10;

  Character97Base.expRate = 2.2;

  Character97Base.textDeath = "杉坂海";

  Character97Base.abilityName = "なし";

  Character97Base.abilityDesc = "なし";

  function Character97Base(params) {
    Character97Base.__super__.constructor.call(this, params);
  }

  return Character97Base;

})(CharacterBase);

Character98Base = (function(superClass) {
  extend(Character98Base, superClass);

  Character98Base.characterId = 98;

  Character98Base.characterName = "涼宮星花";

  Character98Base.defaultJoin = false;

  Character98Base.images = [];

  Character98Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character98Base.attackBase = 13;

  Character98Base.hpBase = 17;

  Character98Base.pDefBase = 1.5;

  Character98Base.mDefBase = 1.5;

  Character98Base.moveBase = 4;

  Character98Base.rangeBase = 1;

  Character98Base.hitRateBase = 97;

  Character98Base.dodgeRateBase = 3;

  Character98Base.itemMax = 10;

  Character98Base.expRate = 2.2;

  Character98Base.textDeath = "涼宮星花";

  Character98Base.abilityName = "なし";

  Character98Base.abilityDesc = "なし";

  function Character98Base(params) {
    Character98Base.__super__.constructor.call(this, params);
  }

  return Character98Base;

})(CharacterBase);

Character99Base = (function(superClass) {
  extend(Character99Base, superClass);

  Character99Base.characterId = 99;

  Character99Base.characterName = "関裕美";

  Character99Base.defaultJoin = false;

  Character99Base.images = [];

  Character99Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character99Base.attackBase = 13;

  Character99Base.hpBase = 17;

  Character99Base.pDefBase = 1.5;

  Character99Base.mDefBase = 1.5;

  Character99Base.moveBase = 4;

  Character99Base.rangeBase = 1;

  Character99Base.hitRateBase = 97;

  Character99Base.dodgeRateBase = 3;

  Character99Base.itemMax = 10;

  Character99Base.expRate = 2.2;

  Character99Base.textDeath = "関裕美";

  Character99Base.abilityName = "なし";

  Character99Base.abilityDesc = "なし";

  function Character99Base(params) {
    Character99Base.__super__.constructor.call(this, params);
  }

  return Character99Base;

})(CharacterBase);

Character100Base = (function(superClass) {
  extend(Character100Base, superClass);

  Character100Base.characterId = 100;

  Character100Base.characterName = "瀬名詩織";

  Character100Base.defaultJoin = false;

  Character100Base.images = [];

  Character100Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character100Base.attackBase = 13;

  Character100Base.hpBase = 17;

  Character100Base.pDefBase = 1.5;

  Character100Base.mDefBase = 1.5;

  Character100Base.moveBase = 4;

  Character100Base.rangeBase = 1;

  Character100Base.hitRateBase = 97;

  Character100Base.dodgeRateBase = 3;

  Character100Base.itemMax = 10;

  Character100Base.expRate = 2.2;

  Character100Base.textDeath = "瀬名詩織";

  Character100Base.abilityName = "なし";

  Character100Base.abilityDesc = "なし";

  function Character100Base(params) {
    Character100Base.__super__.constructor.call(this, params);
  }

  return Character100Base;

})(CharacterBase);

Character101Base = (function(superClass) {
  extend(Character101Base, superClass);

  Character101Base.characterId = 101;

  Character101Base.characterName = "仙崎恵磨";

  Character101Base.defaultJoin = false;

  Character101Base.images = [];

  Character101Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character101Base.attackBase = 13;

  Character101Base.hpBase = 17;

  Character101Base.pDefBase = 1.5;

  Character101Base.mDefBase = 1.5;

  Character101Base.moveBase = 4;

  Character101Base.rangeBase = 1;

  Character101Base.hitRateBase = 97;

  Character101Base.dodgeRateBase = 3;

  Character101Base.itemMax = 10;

  Character101Base.expRate = 2.2;

  Character101Base.textDeath = "仙崎恵磨";

  Character101Base.abilityName = "なし";

  Character101Base.abilityDesc = "なし";

  function Character101Base(params) {
    Character101Base.__super__.constructor.call(this, params);
  }

  return Character101Base;

})(CharacterBase);

Character102Base = (function(superClass) {
  extend(Character102Base, superClass);

  Character102Base.characterId = 102;

  Character102Base.characterName = "相馬夏美";

  Character102Base.defaultJoin = false;

  Character102Base.images = [];

  Character102Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character102Base.attackBase = 13;

  Character102Base.hpBase = 17;

  Character102Base.pDefBase = 1.5;

  Character102Base.mDefBase = 1.5;

  Character102Base.moveBase = 4;

  Character102Base.rangeBase = 1;

  Character102Base.hitRateBase = 97;

  Character102Base.dodgeRateBase = 3;

  Character102Base.itemMax = 10;

  Character102Base.expRate = 2.2;

  Character102Base.textDeath = "相馬夏美";

  Character102Base.abilityName = "なし";

  Character102Base.abilityDesc = "なし";

  function Character102Base(params) {
    Character102Base.__super__.constructor.call(this, params);
  }

  return Character102Base;

})(CharacterBase);

Character103Base = (function(superClass) {
  extend(Character103Base, superClass);

  Character103Base.characterId = 103;

  Character103Base.characterName = "高垣楓";

  Character103Base.defaultJoin = false;

  Character103Base.images = [];

  Character103Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character103Base.attackBase = 13;

  Character103Base.hpBase = 16;

  Character103Base.pDefBase = 1.5;

  Character103Base.mDefBase = 2;

  Character103Base.moveBase = 4;

  Character103Base.rangeBase = 1;

  Character103Base.hitRateBase = 97;

  Character103Base.dodgeRateBase = 3;

  Character103Base.itemMax = 10;

  Character103Base.expRate = 2.2;

  Character103Base.textDeath = "高垣楓";

  Character103Base.abilityName = "ダジャレおばさん";

  Character103Base.abilityDesc = "なし";

  function Character103Base(params) {
    Character103Base.__super__.constructor.call(this, params);
  }

  return Character103Base;

})(CharacterBase);

Character104Base = (function(superClass) {
  extend(Character104Base, superClass);

  Character104Base.characterId = 104;

  Character104Base.characterName = "高槻やよい";

  Character104Base.defaultJoin = false;

  Character104Base.images = [];

  Character104Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character104Base.attackBase = 13;

  Character104Base.hpBase = 17;

  Character104Base.pDefBase = 1.5;

  Character104Base.mDefBase = 1.5;

  Character104Base.moveBase = 4;

  Character104Base.rangeBase = 1;

  Character104Base.hitRateBase = 97;

  Character104Base.dodgeRateBase = 3;

  Character104Base.itemMax = 10;

  Character104Base.expRate = 2.2;

  Character104Base.textDeath = "高槻やよい";

  Character104Base.abilityName = "なし";

  Character104Base.abilityDesc = "なし";

  function Character104Base(params) {
    Character104Base.__super__.constructor.call(this, params);
  }

  return Character104Base;

})(CharacterBase);

Character105Base = (function(superClass) {
  extend(Character105Base, superClass);

  Character105Base.characterId = 105;

  Character105Base.characterName = "高橋礼子";

  Character105Base.defaultJoin = false;

  Character105Base.images = [];

  Character105Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character105Base.attackBase = 13;

  Character105Base.hpBase = 17;

  Character105Base.pDefBase = 1.5;

  Character105Base.mDefBase = 1.5;

  Character105Base.moveBase = 4;

  Character105Base.rangeBase = 1;

  Character105Base.hitRateBase = 97;

  Character105Base.dodgeRateBase = 3;

  Character105Base.itemMax = 10;

  Character105Base.expRate = 2.2;

  Character105Base.textDeath = "高橋礼子";

  Character105Base.abilityName = "なし";

  Character105Base.abilityDesc = "なし";

  function Character105Base(params) {
    Character105Base.__super__.constructor.call(this, params);
  }

  return Character105Base;

})(CharacterBase);

Character106Base = (function(superClass) {
  extend(Character106Base, superClass);

  Character106Base.characterId = 106;

  Character106Base.characterName = "鷹富士茄子";

  Character106Base.defaultJoin = false;

  Character106Base.images = [];

  Character106Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character106Base.attackBase = 10;

  Character106Base.hpBase = 15;

  Character106Base.pDefBase = 1.5;

  Character106Base.mDefBase = 1.7;

  Character106Base.moveBase = 3;

  Character106Base.rangeBase = 1;

  Character106Base.hitRateBase = 90;

  Character106Base.dodgeRateBase = 15;

  Character106Base.itemMax = 12;

  Character106Base.expRate = 2.2;

  Character106Base.textDeath = "鷹富士茄子";

  Character106Base.abilityName = "幸運";

  Character106Base.abilityDesc = "攻撃したプレゼントのランクが1上がる";

  function Character106Base(params) {
    Character106Base.__super__.constructor.call(this, params);
  }

  return Character106Base;

})(CharacterBase);

Character107Base = (function(superClass) {
  extend(Character107Base, superClass);

  Character107Base.characterId = 107;

  Character107Base.characterName = "高峯のあ";

  Character107Base.defaultJoin = false;

  Character107Base.images = [];

  Character107Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character107Base.attackBase = 13;

  Character107Base.hpBase = 17;

  Character107Base.pDefBase = 1.7;

  Character107Base.mDefBase = 2;

  Character107Base.moveBase = 4;

  Character107Base.rangeBase = 1;

  Character107Base.hitRateBase = 98;

  Character107Base.dodgeRateBase = 4;

  Character107Base.itemMax = 10;

  Character107Base.expRate = 2.2;

  Character107Base.textDeath = "高峯のあ";

  Character107Base.abilityName = "なし";

  Character107Base.abilityDesc = "なし";

  function Character107Base(params) {
    Character107Base.__super__.constructor.call(this, params);
  }

  return Character107Base;

})(CharacterBase);

Character108Base = (function(superClass) {
  extend(Character108Base, superClass);

  Character108Base.characterId = 108;

  Character108Base.characterName = "高森藍子";

  Character108Base.defaultJoin = false;

  Character108Base.images = [];

  Character108Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character108Base.attackBase = 10;

  Character108Base.hpBase = 18;

  Character108Base.pDefBase = 1.7;

  Character108Base.mDefBase = 1.7;

  Character108Base.moveBase = 3;

  Character108Base.rangeBase = 2;

  Character108Base.hitRateBase = 97;

  Character108Base.dodgeRateBase = 1;

  Character108Base.itemMax = 10;

  Character108Base.expRate = 2.2;

  Character108Base.textDeath = "高森藍子";

  Character108Base.abilityName = "ゆるふわ時間";

  Character108Base.abilityDesc = "攻撃した相手を行動終了にすることがある";

  function Character108Base(params) {
    Character108Base.__super__.constructor.call(this, params);
  }

  return Character108Base;

})(CharacterBase);

Character109Base = (function(superClass) {
  extend(Character109Base, superClass);

  Character109Base.characterId = 109;

  Character109Base.characterName = "多田李衣菜";

  Character109Base.defaultJoin = false;

  Character109Base.images = [];

  Character109Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character109Base.attackBase = 13;

  Character109Base.hpBase = 17;

  Character109Base.pDefBase = 1.5;

  Character109Base.mDefBase = 1.5;

  Character109Base.moveBase = 4;

  Character109Base.rangeBase = 1;

  Character109Base.hitRateBase = 97;

  Character109Base.dodgeRateBase = 3;

  Character109Base.itemMax = 10;

  Character109Base.expRate = 2.2;

  Character109Base.textDeath = "多田李衣菜";

  Character109Base.abilityName = "なし";

  Character109Base.abilityDesc = "なし";

  function Character109Base(params) {
    Character109Base.__super__.constructor.call(this, params);
  }

  return Character109Base;

})(CharacterBase);

Character110Base = (function(superClass) {
  extend(Character110Base, superClass);

  Character110Base.characterId = 110;

  Character110Base.characterName = "橘ありす";

  Character110Base.defaultJoin = false;

  Character110Base.images = [];

  Character110Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character110Base.attackBase = 13;

  Character110Base.hpBase = 13;

  Character110Base.pDefBase = 1.4;

  Character110Base.mDefBase = 1.5;

  Character110Base.moveBase = 3;

  Character110Base.rangeBase = 2;

  Character110Base.hitRateBase = 96;

  Character110Base.dodgeRateBase = 3;

  Character110Base.itemMax = 10;

  Character110Base.expRate = 2.2;

  Character110Base.textDeath = "橘ありす";

  Character110Base.abilityName = "なし";

  Character110Base.abilityDesc = "なし";

  function Character110Base(params) {
    Character110Base.__super__.constructor.call(this, params);
  }

  return Character110Base;

})(CharacterBase);

Character111Base = (function(superClass) {
  extend(Character111Base, superClass);

  Character111Base.characterId = 111;

  Character111Base.characterName = "月宮雅";

  Character111Base.defaultJoin = false;

  Character111Base.images = [];

  Character111Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character111Base.attackBase = 13;

  Character111Base.hpBase = 17;

  Character111Base.pDefBase = 1.5;

  Character111Base.mDefBase = 1.5;

  Character111Base.moveBase = 4;

  Character111Base.rangeBase = 1;

  Character111Base.hitRateBase = 97;

  Character111Base.dodgeRateBase = 3;

  Character111Base.itemMax = 10;

  Character111Base.expRate = 2.2;

  Character111Base.textDeath = "月宮雅";

  Character111Base.abilityName = "なし";

  Character111Base.abilityDesc = "なし";

  function Character111Base(params) {
    Character111Base.__super__.constructor.call(this, params);
  }

  return Character111Base;

})(CharacterBase);

Character112Base = (function(superClass) {
  extend(Character112Base, superClass);

  Character112Base.characterId = 112;

  Character112Base.characterName = "土屋亜子";

  Character112Base.defaultJoin = false;

  Character112Base.images = [];

  Character112Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character112Base.attackBase = 13;

  Character112Base.hpBase = 17;

  Character112Base.pDefBase = 1.5;

  Character112Base.mDefBase = 1.5;

  Character112Base.moveBase = 4;

  Character112Base.rangeBase = 1;

  Character112Base.hitRateBase = 97;

  Character112Base.dodgeRateBase = 3;

  Character112Base.itemMax = 10;

  Character112Base.expRate = 2.2;

  Character112Base.textDeath = "土屋亜子";

  Character112Base.abilityName = "なし";

  Character112Base.abilityDesc = "なし";

  function Character112Base(params) {
    Character112Base.__super__.constructor.call(this, params);
  }

  return Character112Base;

})(CharacterBase);

Character113Base = (function(superClass) {
  extend(Character113Base, superClass);

  Character113Base.characterId = 113;

  Character113Base.characterName = "東郷あい";

  Character113Base.defaultJoin = false;

  Character113Base.images = [];

  Character113Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character113Base.attackBase = 13;

  Character113Base.hpBase = 17;

  Character113Base.pDefBase = 1.5;

  Character113Base.mDefBase = 1.5;

  Character113Base.moveBase = 4;

  Character113Base.rangeBase = 1;

  Character113Base.hitRateBase = 97;

  Character113Base.dodgeRateBase = 3;

  Character113Base.itemMax = 10;

  Character113Base.expRate = 2.2;

  Character113Base.textDeath = "東郷あい";

  Character113Base.abilityName = "なし";

  Character113Base.abilityDesc = "なし";

  function Character113Base(params) {
    Character113Base.__super__.constructor.call(this, params);
  }

  return Character113Base;

})(CharacterBase);

Character114Base = (function(superClass) {
  extend(Character114Base, superClass);

  Character114Base.characterId = 114;

  Character114Base.characterName = "道明寺歌鈴";

  Character114Base.defaultJoin = false;

  Character114Base.images = [];

  Character114Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character114Base.attackBase = 13;

  Character114Base.hpBase = 18;

  Character114Base.pDefBase = 1.5;

  Character114Base.mDefBase = 2;

  Character114Base.moveBase = 6;

  Character114Base.rangeBase = 2;

  Character114Base.hitRateBase = 93;

  Character114Base.dodgeRateBase = 1;

  Character114Base.itemMax = 10;

  Character114Base.expRate = 2.2;

  Character114Base.textDeath = "道明寺歌鈴";

  Character114Base.abilityName = "ドジ";

  Character114Base.abilityDesc = "移動時、途中で止まることがある";

  function Character114Base(params) {
    Character114Base.__super__.constructor.call(this, params);
  }

  return Character114Base;

})(CharacterBase);

Character115Base = (function(superClass) {
  extend(Character115Base, superClass);

  Character115Base.characterId = 115;

  Character115Base.characterName = "十時愛梨";

  Character115Base.defaultJoin = false;

  Character115Base.images = [];

  Character115Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character115Base.attackBase = 14;

  Character115Base.hpBase = 22;

  Character115Base.pDefBase = 1.8;

  Character115Base.mDefBase = 1.8;

  Character115Base.moveBase = 4;

  Character115Base.rangeBase = 1;

  Character115Base.hitRateBase = 97;

  Character115Base.dodgeRateBase = 3;

  Character115Base.itemMax = 10;

  Character115Base.expRate = 2.2;

  Character115Base.textDeath = "十時愛梨";

  Character115Base.abilityName = "すぐ脱ぐ";

  Character115Base.abilityDesc = "ターン開始時、物防と魔防が10%下がることがある";

  function Character115Base(params) {
    Character115Base.__super__.constructor.call(this, params);
  }

  return Character115Base;

})(CharacterBase);

Character116Base = (function(superClass) {
  extend(Character116Base, superClass);

  Character116Base.characterId = 116;

  Character116Base.characterName = "トレーナー";

  Character116Base.defaultJoin = false;

  Character116Base.images = [];

  Character116Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character116Base.attackBase = 13;

  Character116Base.hpBase = 17;

  Character116Base.pDefBase = 1.5;

  Character116Base.mDefBase = 1.5;

  Character116Base.moveBase = 4;

  Character116Base.rangeBase = 1;

  Character116Base.hitRateBase = 97;

  Character116Base.dodgeRateBase = 3;

  Character116Base.itemMax = 10;

  Character116Base.expRate = 2.2;

  Character116Base.textDeath = "トレーナー";

  Character116Base.abilityName = "なし";

  Character116Base.abilityDesc = "なし";

  function Character116Base(params) {
    Character116Base.__super__.constructor.call(this, params);
  }

  return Character116Base;

})(CharacterBase);

Character117Base = (function(superClass) {
  extend(Character117Base, superClass);

  Character117Base.characterId = 117;

  Character117Base.characterName = "長富蓮実";

  Character117Base.defaultJoin = false;

  Character117Base.images = [];

  Character117Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character117Base.attackBase = 13;

  Character117Base.hpBase = 17;

  Character117Base.pDefBase = 1.5;

  Character117Base.mDefBase = 1.5;

  Character117Base.moveBase = 4;

  Character117Base.rangeBase = 1;

  Character117Base.hitRateBase = 97;

  Character117Base.dodgeRateBase = 3;

  Character117Base.itemMax = 10;

  Character117Base.expRate = 2.2;

  Character117Base.textDeath = "長富蓮実";

  Character117Base.abilityName = "なし";

  Character117Base.abilityDesc = "なし";

  function Character117Base(params) {
    Character117Base.__super__.constructor.call(this, params);
  }

  return Character117Base;

})(CharacterBase);

Character118Base = (function(superClass) {
  extend(Character118Base, superClass);

  Character118Base.characterId = 118;

  Character118Base.characterName = "中野有香";

  Character118Base.defaultJoin = false;

  Character118Base.images = [];

  Character118Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character118Base.attackBase = 18;

  Character118Base.hpBase = 19;

  Character118Base.pDefBase = 2;

  Character118Base.mDefBase = 1;

  Character118Base.moveBase = 4;

  Character118Base.rangeBase = 1;

  Character118Base.hitRateBase = 99;

  Character118Base.dodgeRateBase = 5;

  Character118Base.itemMax = 8;

  Character118Base.expRate = 2.2;

  Character118Base.textDeath = "中野有香";

  Character118Base.abilityName = "会心の一撃";

  Character118Base.abilityDesc = "攻撃時、敵の防御力を無視することがある";

  function Character118Base(params) {
    Character118Base.__super__.constructor.call(this, params);
  }

  return Character118Base;

})(CharacterBase);

Character119Base = (function(superClass) {
  extend(Character119Base, superClass);

  Character119Base.characterId = 119;

  Character119Base.characterName = "ナターリア";

  Character119Base.defaultJoin = false;

  Character119Base.images = [];

  Character119Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character119Base.attackBase = 13;

  Character119Base.hpBase = 17;

  Character119Base.pDefBase = 1.5;

  Character119Base.mDefBase = 1.5;

  Character119Base.moveBase = 4;

  Character119Base.rangeBase = 1;

  Character119Base.hitRateBase = 97;

  Character119Base.dodgeRateBase = 3;

  Character119Base.itemMax = 10;

  Character119Base.expRate = 2.2;

  Character119Base.textDeath = "ナターリア";

  Character119Base.abilityName = "なし";

  Character119Base.abilityDesc = "なし";

  function Character119Base(params) {
    Character119Base.__super__.constructor.call(this, params);
  }

  return Character119Base;

})(CharacterBase);

Character120Base = (function(superClass) {
  extend(Character120Base, superClass);

  Character120Base.characterId = 120;

  Character120Base.characterName = "並木芽衣子";

  Character120Base.defaultJoin = false;

  Character120Base.images = [];

  Character120Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character120Base.attackBase = 13;

  Character120Base.hpBase = 17;

  Character120Base.pDefBase = 1.5;

  Character120Base.mDefBase = 1.5;

  Character120Base.moveBase = 4;

  Character120Base.rangeBase = 1;

  Character120Base.hitRateBase = 97;

  Character120Base.dodgeRateBase = 3;

  Character120Base.itemMax = 10;

  Character120Base.expRate = 2.2;

  Character120Base.textDeath = "並木芽衣子";

  Character120Base.abilityName = "なし";

  Character120Base.abilityDesc = "なし";

  function Character120Base(params) {
    Character120Base.__super__.constructor.call(this, params);
  }

  return Character120Base;

})(CharacterBase);

Character121Base = (function(superClass) {
  extend(Character121Base, superClass);

  Character121Base.characterId = 121;

  Character121Base.characterName = "成宮由愛";

  Character121Base.defaultJoin = false;

  Character121Base.images = [];

  Character121Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character121Base.attackBase = 13;

  Character121Base.hpBase = 17;

  Character121Base.pDefBase = 1.5;

  Character121Base.mDefBase = 1.5;

  Character121Base.moveBase = 4;

  Character121Base.rangeBase = 1;

  Character121Base.hitRateBase = 97;

  Character121Base.dodgeRateBase = 3;

  Character121Base.itemMax = 10;

  Character121Base.expRate = 2.2;

  Character121Base.textDeath = "成宮由愛";

  Character121Base.abilityName = "なし";

  Character121Base.abilityDesc = "なし";

  function Character121Base(params) {
    Character121Base.__super__.constructor.call(this, params);
  }

  return Character121Base;

})(CharacterBase);

Character122Base = (function(superClass) {
  extend(Character122Base, superClass);

  Character122Base.characterId = 122;

  Character122Base.characterName = "南条光";

  Character122Base.defaultJoin = false;

  Character122Base.images = [];

  Character122Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character122Base.attackBase = 13;

  Character122Base.hpBase = 17;

  Character122Base.pDefBase = 1.5;

  Character122Base.mDefBase = 1.5;

  Character122Base.moveBase = 4;

  Character122Base.rangeBase = 1;

  Character122Base.hitRateBase = 97;

  Character122Base.dodgeRateBase = 3;

  Character122Base.itemMax = 10;

  Character122Base.expRate = 2.2;

  Character122Base.textDeath = "南条光";

  Character122Base.abilityName = "なし";

  Character122Base.abilityDesc = "なし";

  function Character122Base(params) {
    Character122Base.__super__.constructor.call(this, params);
  }

  return Character122Base;

})(CharacterBase);

Character123Base = (function(superClass) {
  extend(Character123Base, superClass);

  Character123Base.characterId = 123;

  Character123Base.characterName = "難波笑美";

  Character123Base.defaultJoin = false;

  Character123Base.images = [];

  Character123Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character123Base.attackBase = 15;

  Character123Base.hpBase = 17;

  Character123Base.pDefBase = 1.6;

  Character123Base.mDefBase = 1.5;

  Character123Base.moveBase = 4;

  Character123Base.rangeBase = 1;

  Character123Base.hitRateBase = 97;

  Character123Base.dodgeRateBase = 3;

  Character123Base.itemMax = 10;

  Character123Base.expRate = 2.2;

  Character123Base.textDeath = "難波笑美";

  Character123Base.abilityName = "なし";

  Character123Base.abilityDesc = "なし";

  function Character123Base(params) {
    Character123Base.__super__.constructor.call(this, params);
  }

  return Character123Base;

})(CharacterBase);

Character124Base = (function(superClass) {
  extend(Character124Base, superClass);

  Character124Base.characterId = 124;

  Character124Base.characterName = "西川保奈美";

  Character124Base.defaultJoin = false;

  Character124Base.images = [];

  Character124Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character124Base.attackBase = 13;

  Character124Base.hpBase = 17;

  Character124Base.pDefBase = 1.5;

  Character124Base.mDefBase = 1.5;

  Character124Base.moveBase = 4;

  Character124Base.rangeBase = 1;

  Character124Base.hitRateBase = 97;

  Character124Base.dodgeRateBase = 3;

  Character124Base.itemMax = 10;

  Character124Base.expRate = 2.2;

  Character124Base.textDeath = "西川保奈美";

  Character124Base.abilityName = "なし";

  Character124Base.abilityDesc = "なし";

  function Character124Base(params) {
    Character124Base.__super__.constructor.call(this, params);
  }

  return Character124Base;

})(CharacterBase);

Character125Base = (function(superClass) {
  extend(Character125Base, superClass);

  Character125Base.characterId = 125;

  Character125Base.characterName = "西島櫂";

  Character125Base.defaultJoin = false;

  Character125Base.images = [];

  Character125Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character125Base.attackBase = 13;

  Character125Base.hpBase = 17;

  Character125Base.pDefBase = 1.5;

  Character125Base.mDefBase = 1.5;

  Character125Base.moveBase = 4;

  Character125Base.rangeBase = 1;

  Character125Base.hitRateBase = 97;

  Character125Base.dodgeRateBase = 3;

  Character125Base.itemMax = 10;

  Character125Base.expRate = 2.2;

  Character125Base.textDeath = "西島櫂";

  Character125Base.abilityName = "なし";

  Character125Base.abilityDesc = "なし";

  function Character125Base(params) {
    Character125Base.__super__.constructor.call(this, params);
  }

  return Character125Base;

})(CharacterBase);

Character126Base = (function(superClass) {
  extend(Character126Base, superClass);

  Character126Base.characterId = 126;

  Character126Base.characterName = "新田美波";

  Character126Base.defaultJoin = false;

  Character126Base.images = [];

  Character126Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character126Base.attackBase = 14;

  Character126Base.hpBase = 18;

  Character126Base.pDefBase = 1.6;

  Character126Base.mDefBase = 1.6;

  Character126Base.moveBase = 5;

  Character126Base.rangeBase = 2;

  Character126Base.hitRateBase = 98;

  Character126Base.dodgeRateBase = 4;

  Character126Base.itemMax = 10;

  Character126Base.expRate = 2.2;

  Character126Base.textDeath = "新田美波";

  Character126Base.abilityName = "万能";

  Character126Base.abilityDesc = "ターン終了時、ランダムなステータスが10%上昇する（フィールドから出ると戻る）";

  function Character126Base(params) {
    Character126Base.__super__.constructor.call(this, params);
  }

  return Character126Base;

})(CharacterBase);

Character127Base = (function(superClass) {
  extend(Character127Base, superClass);

  Character127Base.characterId = 127;

  Character127Base.characterName = "二宮飛鳥";

  Character127Base.defaultJoin = false;

  Character127Base.images = [];

  Character127Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character127Base.attackBase = 15;

  Character127Base.hpBase = 16;

  Character127Base.pDefBase = 1.4;

  Character127Base.mDefBase = 1.6;

  Character127Base.moveBase = 4;

  Character127Base.rangeBase = 1;

  Character127Base.hitRateBase = 97;

  Character127Base.dodgeRateBase = 4;

  Character127Base.itemMax = 10;

  Character127Base.expRate = 2.2;

  Character127Base.textDeath = "二宮飛鳥";

  Character127Base.abilityName = "孤高";

  Character127Base.abilityDesc = "ターン開始時、周りにユニットがいなければ、そのターン、全ステータスが10%上がる";

  function Character127Base(params) {
    Character127Base.__super__.constructor.call(this, params);
  }

  return Character127Base;

})(CharacterBase);

Character128Base = (function(superClass) {
  extend(Character128Base, superClass);

  Character128Base.characterId = 128;

  Character128Base.characterName = "丹羽仁美";

  Character128Base.defaultJoin = false;

  Character128Base.images = [];

  Character128Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character128Base.attackBase = 13;

  Character128Base.hpBase = 17;

  Character128Base.pDefBase = 1.5;

  Character128Base.mDefBase = 1.5;

  Character128Base.moveBase = 4;

  Character128Base.rangeBase = 1;

  Character128Base.hitRateBase = 97;

  Character128Base.dodgeRateBase = 3;

  Character128Base.itemMax = 10;

  Character128Base.expRate = 2.2;

  Character128Base.textDeath = "丹羽仁美";

  Character128Base.abilityName = "なし";

  Character128Base.abilityDesc = "なし";

  function Character128Base(params) {
    Character128Base.__super__.constructor.call(this, params);
  }

  return Character128Base;

})(CharacterBase);

Character129Base = (function(superClass) {
  extend(Character129Base, superClass);

  Character129Base.characterId = 129;

  Character129Base.characterName = "野々村そら";

  Character129Base.defaultJoin = false;

  Character129Base.images = [];

  Character129Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character129Base.attackBase = 13;

  Character129Base.hpBase = 17;

  Character129Base.pDefBase = 1.5;

  Character129Base.mDefBase = 1.5;

  Character129Base.moveBase = 4;

  Character129Base.rangeBase = 1;

  Character129Base.hitRateBase = 97;

  Character129Base.dodgeRateBase = 3;

  Character129Base.itemMax = 10;

  Character129Base.expRate = 2.2;

  Character129Base.textDeath = "野々村そら";

  Character129Base.abilityName = "なし";

  Character129Base.abilityDesc = "なし";

  function Character129Base(params) {
    Character129Base.__super__.constructor.call(this, params);
  }

  return Character129Base;

})(CharacterBase);

Character130Base = (function(superClass) {
  extend(Character130Base, superClass);

  Character130Base.characterId = 130;

  Character130Base.characterName = "萩原雪歩";

  Character130Base.defaultJoin = false;

  Character130Base.images = [];

  Character130Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character130Base.attackBase = 13;

  Character130Base.hpBase = 17;

  Character130Base.pDefBase = 1.5;

  Character130Base.mDefBase = 1.5;

  Character130Base.moveBase = 4;

  Character130Base.rangeBase = 1;

  Character130Base.hitRateBase = 97;

  Character130Base.dodgeRateBase = 3;

  Character130Base.itemMax = 10;

  Character130Base.expRate = 2.2;

  Character130Base.textDeath = "萩原雪歩";

  Character130Base.abilityName = "なし";

  Character130Base.abilityDesc = "なし";

  function Character130Base(params) {
    Character130Base.__super__.constructor.call(this, params);
  }

  return Character130Base;

})(CharacterBase);

Character131Base = (function(superClass) {
  extend(Character131Base, superClass);

  Character131Base.characterId = 131;

  Character131Base.characterName = "服部瞳子";

  Character131Base.defaultJoin = false;

  Character131Base.images = [];

  Character131Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character131Base.attackBase = 13;

  Character131Base.hpBase = 17;

  Character131Base.pDefBase = 1.5;

  Character131Base.mDefBase = 1.5;

  Character131Base.moveBase = 4;

  Character131Base.rangeBase = 1;

  Character131Base.hitRateBase = 97;

  Character131Base.dodgeRateBase = 3;

  Character131Base.itemMax = 10;

  Character131Base.expRate = 2.2;

  Character131Base.textDeath = "服部瞳子";

  Character131Base.abilityName = "なし";

  Character131Base.abilityDesc = "なし";

  function Character131Base(params) {
    Character131Base.__super__.constructor.call(this, params);
  }

  return Character131Base;

})(CharacterBase);

Character132Base = (function(superClass) {
  extend(Character132Base, superClass);

  Character132Base.characterId = 132;

  Character132Base.characterName = "浜川愛結奈";

  Character132Base.defaultJoin = false;

  Character132Base.images = [];

  Character132Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character132Base.attackBase = 13;

  Character132Base.hpBase = 17;

  Character132Base.pDefBase = 1.5;

  Character132Base.mDefBase = 1.5;

  Character132Base.moveBase = 4;

  Character132Base.rangeBase = 1;

  Character132Base.hitRateBase = 97;

  Character132Base.dodgeRateBase = 3;

  Character132Base.itemMax = 10;

  Character132Base.expRate = 2.2;

  Character132Base.textDeath = "浜川愛結奈";

  Character132Base.abilityName = "なし";

  Character132Base.abilityDesc = "なし";

  function Character132Base(params) {
    Character132Base.__super__.constructor.call(this, params);
  }

  return Character132Base;

})(CharacterBase);

Character133Base = (function(superClass) {
  extend(Character133Base, superClass);

  Character133Base.characterId = 133;

  Character133Base.characterName = "浜口あやめ";

  Character133Base.defaultJoin = false;

  Character133Base.images = [];

  Character133Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character133Base.attackBase = 15;

  Character133Base.hpBase = 11;

  Character133Base.pDefBase = 0.8;

  Character133Base.mDefBase = 0.8;

  Character133Base.moveBase = 6;

  Character133Base.rangeBase = 1;

  Character133Base.hitRateBase = 99;

  Character133Base.dodgeRateBase = 35;

  Character133Base.itemMax = 10;

  Character133Base.expRate = 2.2;

  Character133Base.textDeath = "浜口あやめ";

  Character133Base.abilityName = "忍法変わり身の術";

  Character133Base.abilityDesc = "回避時に、味方と入れ替わることがある";

  function Character133Base(params) {
    Character133Base.__super__.constructor.call(this, params);
  }

  return Character133Base;

})(CharacterBase);

Character134Base = (function(superClass) {
  extend(Character134Base, superClass);

  Character134Base.characterId = 134;

  Character134Base.characterName = "早坂美玲";

  Character134Base.defaultJoin = false;

  Character134Base.images = [];

  Character134Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character134Base.attackBase = 13;

  Character134Base.hpBase = 17;

  Character134Base.pDefBase = 1.5;

  Character134Base.mDefBase = 1.5;

  Character134Base.moveBase = 4;

  Character134Base.rangeBase = 1;

  Character134Base.hitRateBase = 97;

  Character134Base.dodgeRateBase = 3;

  Character134Base.itemMax = 10;

  Character134Base.expRate = 2.2;

  Character134Base.textDeath = "早坂美玲";

  Character134Base.abilityName = "なし";

  Character134Base.abilityDesc = "なし";

  function Character134Base(params) {
    Character134Base.__super__.constructor.call(this, params);
  }

  return Character134Base;

})(CharacterBase);

Character135Base = (function(superClass) {
  extend(Character135Base, superClass);

  Character135Base.characterId = 135;

  Character135Base.characterName = "速水奏";

  Character135Base.defaultJoin = false;

  Character135Base.images = [];

  Character135Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character135Base.attackBase = 13;

  Character135Base.hpBase = 17;

  Character135Base.pDefBase = 1.5;

  Character135Base.mDefBase = 1.5;

  Character135Base.moveBase = 4;

  Character135Base.rangeBase = 1;

  Character135Base.hitRateBase = 97;

  Character135Base.dodgeRateBase = 3;

  Character135Base.itemMax = 10;

  Character135Base.expRate = 2.2;

  Character135Base.textDeath = "速水奏";

  Character135Base.abilityName = "なし";

  Character135Base.abilityDesc = "なし";

  function Character135Base(params) {
    Character135Base.__super__.constructor.call(this, params);
  }

  return Character135Base;

})(CharacterBase);

Character136Base = (function(superClass) {
  extend(Character136Base, superClass);

  Character136Base.characterId = 136;

  Character136Base.characterName = "原田美世";

  Character136Base.defaultJoin = false;

  Character136Base.images = [];

  Character136Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character136Base.attackBase = 13;

  Character136Base.hpBase = 17;

  Character136Base.pDefBase = 1.5;

  Character136Base.mDefBase = 1.5;

  Character136Base.moveBase = 4;

  Character136Base.rangeBase = 1;

  Character136Base.hitRateBase = 97;

  Character136Base.dodgeRateBase = 3;

  Character136Base.itemMax = 10;

  Character136Base.expRate = 2.2;

  Character136Base.textDeath = "原田美世";

  Character136Base.abilityName = "なし";

  Character136Base.abilityDesc = "なし";

  function Character136Base(params) {
    Character136Base.__super__.constructor.call(this, params);
  }

  return Character136Base;

})(CharacterBase);

Character137Base = (function(superClass) {
  extend(Character137Base, superClass);

  Character137Base.characterId = 137;

  Character137Base.characterName = "柊志乃";

  Character137Base.defaultJoin = false;

  Character137Base.images = [];

  Character137Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character137Base.attackBase = 13;

  Character137Base.hpBase = 17;

  Character137Base.pDefBase = 1.5;

  Character137Base.mDefBase = 1.5;

  Character137Base.moveBase = 4;

  Character137Base.rangeBase = 1;

  Character137Base.hitRateBase = 97;

  Character137Base.dodgeRateBase = 3;

  Character137Base.itemMax = 10;

  Character137Base.expRate = 2.2;

  Character137Base.textDeath = "柊志乃";

  Character137Base.abilityName = "なし";

  Character137Base.abilityDesc = "なし";

  function Character137Base(params) {
    Character137Base.__super__.constructor.call(this, params);
  }

  return Character137Base;

})(CharacterBase);

Character138Base = (function(superClass) {
  extend(Character138Base, superClass);

  Character138Base.characterId = 138;

  Character138Base.characterName = "日高愛";

  Character138Base.defaultJoin = false;

  Character138Base.images = [];

  Character138Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character138Base.attackBase = 13;

  Character138Base.hpBase = 17;

  Character138Base.pDefBase = 1.5;

  Character138Base.mDefBase = 1.5;

  Character138Base.moveBase = 4;

  Character138Base.rangeBase = 1;

  Character138Base.hitRateBase = 97;

  Character138Base.dodgeRateBase = 3;

  Character138Base.itemMax = 10;

  Character138Base.expRate = 2.2;

  Character138Base.textDeath = "日高愛";

  Character138Base.abilityName = "なし";

  Character138Base.abilityDesc = "なし";

  function Character138Base(params) {
    Character138Base.__super__.constructor.call(this, params);
  }

  return Character138Base;

})(CharacterBase);

Character139Base = (function(superClass) {
  extend(Character139Base, superClass);

  Character139Base.characterId = 139;

  Character139Base.characterName = "日野茜";

  Character139Base.defaultJoin = false;

  Character139Base.images = [];

  Character139Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character139Base.attackBase = 15;

  Character139Base.hpBase = 18;

  Character139Base.pDefBase = 2.5;

  Character139Base.mDefBase = 1;

  Character139Base.moveBase = 5;

  Character139Base.rangeBase = 1;

  Character139Base.hitRateBase = 97;

  Character139Base.dodgeRateBase = 5;

  Character139Base.itemMax = 10;

  Character139Base.expRate = 2.2;

  Character139Base.textDeath = "日野茜";

  Character139Base.abilityName = "全力疾走";

  Character139Base.abilityDesc = "移動後に攻撃をせずに行動終了した時、20%の確率でもう一度行動できる";

  function Character139Base(params) {
    Character139Base.__super__.constructor.call(this, params);
  }

  return Character139Base;

})(CharacterBase);

Character140Base = (function(superClass) {
  extend(Character140Base, superClass);

  Character140Base.characterId = 140;

  Character140Base.characterName = "姫川友紀";

  Character140Base.defaultJoin = false;

  Character140Base.images = [];

  Character140Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character140Base.attackBase = 15;

  Character140Base.hpBase = 16;

  Character140Base.pDefBase = 1.6;

  Character140Base.mDefBase = 1.4;

  Character140Base.moveBase = 4;

  Character140Base.rangeBase = 3;

  Character140Base.hitRateBase = 98;

  Character140Base.dodgeRateBase = 2;

  Character140Base.itemMax = 8;

  Character140Base.expRate = 2.2;

  Character140Base.textDeath = "姫川友紀";

  Character140Base.abilityName = "かっとばせー";

  Character140Base.abilityDesc = "ターン開始時、隣接している味方をランダムなマスに飛ばすことがある";

  function Character140Base(params) {
    Character140Base.__super__.constructor.call(this, params);
  }

  return Character140Base;

})(CharacterBase);

Character141Base = (function(superClass) {
  extend(Character141Base, superClass);

  Character141Base.characterId = 141;

  Character141Base.characterName = "兵藤レナ";

  Character141Base.defaultJoin = false;

  Character141Base.images = [];

  Character141Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character141Base.attackBase = 13;

  Character141Base.hpBase = 17;

  Character141Base.pDefBase = 1.5;

  Character141Base.mDefBase = 1.5;

  Character141Base.moveBase = 4;

  Character141Base.rangeBase = 1;

  Character141Base.hitRateBase = 97;

  Character141Base.dodgeRateBase = 3;

  Character141Base.itemMax = 10;

  Character141Base.expRate = 2.2;

  Character141Base.textDeath = "兵藤レナ";

  Character141Base.abilityName = "なし";

  Character141Base.abilityDesc = "なし";

  function Character141Base(params) {
    Character141Base.__super__.constructor.call(this, params);
  }

  return Character141Base;

})(CharacterBase);

Character142Base = (function(superClass) {
  extend(Character142Base, superClass);

  Character142Base.characterId = 142;

  Character142Base.characterName = "福山舞";

  Character142Base.defaultJoin = false;

  Character142Base.images = [];

  Character142Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character142Base.attackBase = 13;

  Character142Base.hpBase = 17;

  Character142Base.pDefBase = 1.5;

  Character142Base.mDefBase = 1.5;

  Character142Base.moveBase = 4;

  Character142Base.rangeBase = 1;

  Character142Base.hitRateBase = 97;

  Character142Base.dodgeRateBase = 3;

  Character142Base.itemMax = 10;

  Character142Base.expRate = 2.2;

  Character142Base.textDeath = "福山舞";

  Character142Base.abilityName = "なし";

  Character142Base.abilityDesc = "なし";

  function Character142Base(params) {
    Character142Base.__super__.constructor.call(this, params);
  }

  return Character142Base;

})(CharacterBase);

Character143Base = (function(superClass) {
  extend(Character143Base, superClass);

  Character143Base.characterId = 143;

  Character143Base.characterName = "藤居朋";

  Character143Base.defaultJoin = false;

  Character143Base.images = [];

  Character143Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character143Base.attackBase = 13;

  Character143Base.hpBase = 17;

  Character143Base.pDefBase = 1.5;

  Character143Base.mDefBase = 1.5;

  Character143Base.moveBase = 4;

  Character143Base.rangeBase = 1;

  Character143Base.hitRateBase = 97;

  Character143Base.dodgeRateBase = 3;

  Character143Base.itemMax = 10;

  Character143Base.expRate = 2.2;

  Character143Base.textDeath = "藤居朋";

  Character143Base.abilityName = "なし";

  Character143Base.abilityDesc = "なし";

  function Character143Base(params) {
    Character143Base.__super__.constructor.call(this, params);
  }

  return Character143Base;

})(CharacterBase);

Character144Base = (function(superClass) {
  extend(Character144Base, superClass);

  Character144Base.characterId = 144;

  Character144Base.characterName = "藤本里奈";

  Character144Base.defaultJoin = false;

  Character144Base.images = [];

  Character144Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character144Base.attackBase = 13;

  Character144Base.hpBase = 19;

  Character144Base.pDefBase = 1.5;

  Character144Base.mDefBase = 1.5;

  Character144Base.moveBase = 4;

  Character144Base.rangeBase = 1;

  Character144Base.hitRateBase = 97;

  Character144Base.dodgeRateBase = 3;

  Character144Base.itemMax = 10;

  Character144Base.expRate = 2.2;

  Character144Base.textDeath = "藤本里奈";

  Character144Base.abilityName = "なし";

  Character144Base.abilityDesc = "なし";

  function Character144Base(params) {
    Character144Base.__super__.constructor.call(this, params);
  }

  return Character144Base;

})(CharacterBase);

Character145Base = (function(superClass) {
  extend(Character145Base, superClass);

  Character145Base.characterId = 145;

  Character145Base.characterName = "藤原肇";

  Character145Base.defaultJoin = false;

  Character145Base.images = [];

  Character145Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character145Base.attackBase = 13;

  Character145Base.hpBase = 17;

  Character145Base.pDefBase = 1.5;

  Character145Base.mDefBase = 1.5;

  Character145Base.moveBase = 4;

  Character145Base.rangeBase = 1;

  Character145Base.hitRateBase = 97;

  Character145Base.dodgeRateBase = 3;

  Character145Base.itemMax = 10;

  Character145Base.expRate = 2.2;

  Character145Base.textDeath = "藤原肇";

  Character145Base.abilityName = "なし";

  Character145Base.abilityDesc = "なし";

  function Character145Base(params) {
    Character145Base.__super__.constructor.call(this, params);
  }

  return Character145Base;

})(CharacterBase);

Character146Base = (function(superClass) {
  extend(Character146Base, superClass);

  Character146Base.characterId = 146;

  Character146Base.characterName = "双葉杏";

  Character146Base.defaultJoin = false;

  Character146Base.images = [];

  Character146Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character146Base.attackBase = 0;

  Character146Base.hpBase = 18;

  Character146Base.pDefBase = 2.5;

  Character146Base.mDefBase = 2.5;

  Character146Base.moveBase = 0;

  Character146Base.rangeBase = 0;

  Character146Base.hitRateBase = 0;

  Character146Base.dodgeRateBase = 0;

  Character146Base.itemMax = 10;

  Character146Base.expRate = 2.2;

  Character146Base.textDeath = "双葉杏";

  Character146Base.abilityName = "印税";

  Character146Base.abilityDesc = "ターン終了時に出撃していると、階層✕3の経験値を得る";

  function Character146Base(params) {
    Character146Base.__super__.constructor.call(this, params);
  }

  return Character146Base;

})(CharacterBase);

Character147Base = (function(superClass) {
  extend(Character147Base, superClass);

  Character147Base.characterId = 147;

  Character147Base.characterName = "双海亜美";

  Character147Base.defaultJoin = false;

  Character147Base.images = [];

  Character147Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character147Base.attackBase = 13;

  Character147Base.hpBase = 17;

  Character147Base.pDefBase = 1.5;

  Character147Base.mDefBase = 1.5;

  Character147Base.moveBase = 4;

  Character147Base.rangeBase = 1;

  Character147Base.hitRateBase = 97;

  Character147Base.dodgeRateBase = 3;

  Character147Base.itemMax = 10;

  Character147Base.expRate = 2.2;

  Character147Base.textDeath = "双海亜美";

  Character147Base.abilityName = "なし";

  Character147Base.abilityDesc = "なし";

  function Character147Base(params) {
    Character147Base.__super__.constructor.call(this, params);
  }

  return Character147Base;

})(CharacterBase);

Character148Base = (function(superClass) {
  extend(Character148Base, superClass);

  Character148Base.characterId = 148;

  Character148Base.characterName = "双海真美";

  Character148Base.defaultJoin = false;

  Character148Base.images = [];

  Character148Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character148Base.attackBase = 13;

  Character148Base.hpBase = 17;

  Character148Base.pDefBase = 1.5;

  Character148Base.mDefBase = 1.5;

  Character148Base.moveBase = 4;

  Character148Base.rangeBase = 1;

  Character148Base.hitRateBase = 97;

  Character148Base.dodgeRateBase = 3;

  Character148Base.itemMax = 10;

  Character148Base.expRate = 2.2;

  Character148Base.textDeath = "双海真美";

  Character148Base.abilityName = "なし";

  Character148Base.abilityDesc = "なし";

  function Character148Base(params) {
    Character148Base.__super__.constructor.call(this, params);
  }

  return Character148Base;

})(CharacterBase);

Character149Base = (function(superClass) {
  extend(Character149Base, superClass);

  Character149Base.characterId = 149;

  Character149Base.characterName = "古澤頼子";

  Character149Base.defaultJoin = false;

  Character149Base.images = [];

  Character149Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character149Base.attackBase = 13;

  Character149Base.hpBase = 17;

  Character149Base.pDefBase = 1.5;

  Character149Base.mDefBase = 1.5;

  Character149Base.moveBase = 4;

  Character149Base.rangeBase = 1;

  Character149Base.hitRateBase = 97;

  Character149Base.dodgeRateBase = 3;

  Character149Base.itemMax = 10;

  Character149Base.expRate = 2.2;

  Character149Base.textDeath = "古澤頼子";

  Character149Base.abilityName = "なし";

  Character149Base.abilityDesc = "なし";

  function Character149Base(params) {
    Character149Base.__super__.constructor.call(this, params);
  }

  return Character149Base;

})(CharacterBase);

Character150Base = (function(superClass) {
  extend(Character150Base, superClass);

  Character150Base.characterId = 150;

  Character150Base.characterName = "ベテラントレーナー";

  Character150Base.defaultJoin = false;

  Character150Base.images = [];

  Character150Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character150Base.attackBase = 13;

  Character150Base.hpBase = 17;

  Character150Base.pDefBase = 1.5;

  Character150Base.mDefBase = 1.5;

  Character150Base.moveBase = 4;

  Character150Base.rangeBase = 1;

  Character150Base.hitRateBase = 97;

  Character150Base.dodgeRateBase = 3;

  Character150Base.itemMax = 10;

  Character150Base.expRate = 2.2;

  Character150Base.textDeath = "ベテラントレーナー";

  Character150Base.abilityName = "なし";

  Character150Base.abilityDesc = "なし";

  function Character150Base(params) {
    Character150Base.__super__.constructor.call(this, params);
  }

  return Character150Base;

})(CharacterBase);

Character151Base = (function(superClass) {
  extend(Character151Base, superClass);

  Character151Base.characterId = 151;

  Character151Base.characterName = "ヘレン";

  Character151Base.defaultJoin = false;

  Character151Base.images = [];

  Character151Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character151Base.attackBase = 0;

  Character151Base.hpBase = 30;

  Character151Base.pDefBase = 1.5;

  Character151Base.mDefBase = 1.5;

  Character151Base.moveBase = 4;

  Character151Base.rangeBase = 0;

  Character151Base.hitRateBase = 0;

  Character151Base.dodgeRateBase = 0;

  Character151Base.itemMax = 20;

  Character151Base.expRate = 2.2;

  Character151Base.textDeath = "ヘレン";

  Character151Base.abilityName = "世界のヘレン";

  Character151Base.abilityDesc = "ターン開始時、HPが全回復することがある";

  function Character151Base(params) {
    Character151Base.__super__.constructor.call(this, params);
  }

  return Character151Base;

})(CharacterBase);

Character152Base = (function(superClass) {
  extend(Character152Base, superClass);

  Character152Base.characterId = 152;

  Character152Base.characterName = "北条加蓮";

  Character152Base.defaultJoin = false;

  Character152Base.images = [];

  Character152Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character152Base.attackBase = 15;

  Character152Base.hpBase = 11;

  Character152Base.pDefBase = 1.5;

  Character152Base.mDefBase = 2.3;

  Character152Base.moveBase = 3;

  Character152Base.rangeBase = 2;

  Character152Base.hitRateBase = 95;

  Character152Base.dodgeRateBase = 3;

  Character152Base.itemMax = 10;

  Character152Base.expRate = 1.8;

  Character152Base.textDeath = "北条加蓮";

  Character152Base.abilityName = "なし";

  Character152Base.abilityDesc = "";

  function Character152Base(params) {
    Character152Base.__super__.constructor.call(this, params);
  }

  return Character152Base;

})(CharacterBase);

Character153Base = (function(superClass) {
  extend(Character153Base, superClass);

  Character153Base.characterId = 153;

  Character153Base.characterName = "星井美希";

  Character153Base.defaultJoin = false;

  Character153Base.images = [];

  Character153Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character153Base.attackBase = 13;

  Character153Base.hpBase = 17;

  Character153Base.pDefBase = 1.5;

  Character153Base.mDefBase = 1.5;

  Character153Base.moveBase = 4;

  Character153Base.rangeBase = 1;

  Character153Base.hitRateBase = 97;

  Character153Base.dodgeRateBase = 3;

  Character153Base.itemMax = 10;

  Character153Base.expRate = 2.2;

  Character153Base.textDeath = "星井美希";

  Character153Base.abilityName = "なし";

  Character153Base.abilityDesc = "なし";

  function Character153Base(params) {
    Character153Base.__super__.constructor.call(this, params);
  }

  return Character153Base;

})(CharacterBase);

Character154Base = (function(superClass) {
  extend(Character154Base, superClass);

  Character154Base.characterId = 154;

  Character154Base.characterName = "星輝子";

  Character154Base.defaultJoin = false;

  Character154Base.images = [];

  Character154Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character154Base.attackBase = 13;

  Character154Base.hpBase = 17;

  Character154Base.pDefBase = 1.5;

  Character154Base.mDefBase = 1.5;

  Character154Base.moveBase = 4;

  Character154Base.rangeBase = 1;

  Character154Base.hitRateBase = 97;

  Character154Base.dodgeRateBase = 3;

  Character154Base.itemMax = 10;

  Character154Base.expRate = 2.2;

  Character154Base.textDeath = "星輝子";

  Character154Base.abilityName = "インキャ";

  Character154Base.abilityDesc = "上か下の壁際で行動終了した時、再行動することがある";

  function Character154Base(params) {
    Character154Base.__super__.constructor.call(this, params);
  }

  return Character154Base;

})(CharacterBase);

Character155Base = (function(superClass) {
  extend(Character155Base, superClass);

  Character155Base.characterId = 155;

  Character155Base.characterName = "堀裕子";

  Character155Base.defaultJoin = false;

  Character155Base.images = [];

  Character155Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character155Base.attackBase = 13;

  Character155Base.hpBase = 17;

  Character155Base.pDefBase = 1.5;

  Character155Base.mDefBase = 1.5;

  Character155Base.moveBase = 4;

  Character155Base.rangeBase = 1;

  Character155Base.hitRateBase = 97;

  Character155Base.dodgeRateBase = 3;

  Character155Base.itemMax = 10;

  Character155Base.expRate = 2.2;

  Character155Base.textDeath = "堀裕子";

  Character155Base.abilityName = "なし";

  Character155Base.abilityDesc = "なし";

  function Character155Base(params) {
    Character155Base.__super__.constructor.call(this, params);
  }

  return Character155Base;

})(CharacterBase);

Character156Base = (function(superClass) {
  extend(Character156Base, superClass);

  Character156Base.characterId = 156;

  Character156Base.characterName = "前川みく";

  Character156Base.defaultJoin = false;

  Character156Base.images = [];

  Character156Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character156Base.attackBase = 13;

  Character156Base.hpBase = 16;

  Character156Base.pDefBase = 1.3;

  Character156Base.mDefBase = 1.3;

  Character156Base.moveBase = 5;

  Character156Base.rangeBase = 1;

  Character156Base.hitRateBase = 97;

  Character156Base.dodgeRateBase = 8;

  Character156Base.itemMax = 10;

  Character156Base.expRate = 2.0;

  Character156Base.textDeath = "前川みく";

  Character156Base.abilityName = "なし";

  Character156Base.abilityDesc = "味方が敵からの攻撃を回避した時に、その敵に反撃する";

  function Character156Base(params) {
    Character156Base.__super__.constructor.call(this, params);
  }

  return Character156Base;

})(CharacterBase);

Character157Base = (function(superClass) {
  extend(Character157Base, superClass);

  Character157Base.characterId = 157;

  Character157Base.characterName = "槙原志保";

  Character157Base.defaultJoin = false;

  Character157Base.images = [];

  Character157Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character157Base.attackBase = 13;

  Character157Base.hpBase = 17;

  Character157Base.pDefBase = 1.5;

  Character157Base.mDefBase = 1.5;

  Character157Base.moveBase = 4;

  Character157Base.rangeBase = 1;

  Character157Base.hitRateBase = 97;

  Character157Base.dodgeRateBase = 3;

  Character157Base.itemMax = 10;

  Character157Base.expRate = 2.2;

  Character157Base.textDeath = "槙原志保";

  Character157Base.abilityName = "なし";

  Character157Base.abilityDesc = "なし";

  function Character157Base(params) {
    Character157Base.__super__.constructor.call(this, params);
  }

  return Character157Base;

})(CharacterBase);

Character158Base = (function(superClass) {
  extend(Character158Base, superClass);

  Character158Base.characterId = 158;

  Character158Base.characterName = "マスタートレーナー";

  Character158Base.defaultJoin = false;

  Character158Base.images = [];

  Character158Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character158Base.attackBase = 13;

  Character158Base.hpBase = 17;

  Character158Base.pDefBase = 1.5;

  Character158Base.mDefBase = 1.5;

  Character158Base.moveBase = 4;

  Character158Base.rangeBase = 1;

  Character158Base.hitRateBase = 97;

  Character158Base.dodgeRateBase = 3;

  Character158Base.itemMax = 10;

  Character158Base.expRate = 2.2;

  Character158Base.textDeath = "マスタートレーナー";

  Character158Base.abilityName = "なし";

  Character158Base.abilityDesc = "なし";

  function Character158Base(params) {
    Character158Base.__super__.constructor.call(this, params);
  }

  return Character158Base;

})(CharacterBase);

Character159Base = (function(superClass) {
  extend(Character159Base, superClass);

  Character159Base.characterId = 159;

  Character159Base.characterName = "松尾千鶴";

  Character159Base.defaultJoin = false;

  Character159Base.images = [];

  Character159Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character159Base.attackBase = 13;

  Character159Base.hpBase = 17;

  Character159Base.pDefBase = 1.5;

  Character159Base.mDefBase = 1.5;

  Character159Base.moveBase = 4;

  Character159Base.rangeBase = 1;

  Character159Base.hitRateBase = 97;

  Character159Base.dodgeRateBase = 3;

  Character159Base.itemMax = 10;

  Character159Base.expRate = 2.2;

  Character159Base.textDeath = "松尾千鶴";

  Character159Base.abilityName = "なし";

  Character159Base.abilityDesc = "なし";

  function Character159Base(params) {
    Character159Base.__super__.constructor.call(this, params);
  }

  return Character159Base;

})(CharacterBase);

Character160Base = (function(superClass) {
  extend(Character160Base, superClass);

  Character160Base.characterId = 160;

  Character160Base.characterName = "松永涼";

  Character160Base.defaultJoin = false;

  Character160Base.images = [];

  Character160Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character160Base.attackBase = 13;

  Character160Base.hpBase = 17;

  Character160Base.pDefBase = 1.5;

  Character160Base.mDefBase = 1.5;

  Character160Base.moveBase = 4;

  Character160Base.rangeBase = 1;

  Character160Base.hitRateBase = 97;

  Character160Base.dodgeRateBase = 3;

  Character160Base.itemMax = 10;

  Character160Base.expRate = 2.2;

  Character160Base.textDeath = "松永涼";

  Character160Base.abilityName = "なし";

  Character160Base.abilityDesc = "なし";

  function Character160Base(params) {
    Character160Base.__super__.constructor.call(this, params);
  }

  return Character160Base;

})(CharacterBase);

Character161Base = (function(superClass) {
  extend(Character161Base, superClass);

  Character161Base.characterId = 161;

  Character161Base.characterName = "松原早耶";

  Character161Base.defaultJoin = false;

  Character161Base.images = [];

  Character161Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character161Base.attackBase = 13;

  Character161Base.hpBase = 17;

  Character161Base.pDefBase = 1.5;

  Character161Base.mDefBase = 1.5;

  Character161Base.moveBase = 4;

  Character161Base.rangeBase = 1;

  Character161Base.hitRateBase = 97;

  Character161Base.dodgeRateBase = 3;

  Character161Base.itemMax = 10;

  Character161Base.expRate = 2.2;

  Character161Base.textDeath = "松原早耶";

  Character161Base.abilityName = "なし";

  Character161Base.abilityDesc = "なし";

  function Character161Base(params) {
    Character161Base.__super__.constructor.call(this, params);
  }

  return Character161Base;

})(CharacterBase);

Character162Base = (function(superClass) {
  extend(Character162Base, superClass);

  Character162Base.characterId = 162;

  Character162Base.characterName = "松本沙理奈";

  Character162Base.defaultJoin = false;

  Character162Base.images = [];

  Character162Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character162Base.attackBase = 13;

  Character162Base.hpBase = 17;

  Character162Base.pDefBase = 1.5;

  Character162Base.mDefBase = 1.5;

  Character162Base.moveBase = 4;

  Character162Base.rangeBase = 1;

  Character162Base.hitRateBase = 97;

  Character162Base.dodgeRateBase = 3;

  Character162Base.itemMax = 10;

  Character162Base.expRate = 2.2;

  Character162Base.textDeath = "松本沙理奈";

  Character162Base.abilityName = "なし";

  Character162Base.abilityDesc = "なし";

  function Character162Base(params) {
    Character162Base.__super__.constructor.call(this, params);
  }

  return Character162Base;

})(CharacterBase);

Character163Base = (function(superClass) {
  extend(Character163Base, superClass);

  Character163Base.characterId = 163;

  Character163Base.characterName = "松山久美子";

  Character163Base.defaultJoin = false;

  Character163Base.images = [];

  Character163Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character163Base.attackBase = 13;

  Character163Base.hpBase = 17;

  Character163Base.pDefBase = 1.5;

  Character163Base.mDefBase = 1.5;

  Character163Base.moveBase = 4;

  Character163Base.rangeBase = 1;

  Character163Base.hitRateBase = 97;

  Character163Base.dodgeRateBase = 3;

  Character163Base.itemMax = 10;

  Character163Base.expRate = 2.2;

  Character163Base.textDeath = "松山久美子";

  Character163Base.abilityName = "なし";

  Character163Base.abilityDesc = "なし";

  function Character163Base(params) {
    Character163Base.__super__.constructor.call(this, params);
  }

  return Character163Base;

})(CharacterBase);

Character164Base = (function(superClass) {
  extend(Character164Base, superClass);

  Character164Base.characterId = 164;

  Character164Base.characterName = "的場梨沙";

  Character164Base.defaultJoin = false;

  Character164Base.images = [];

  Character164Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character164Base.attackBase = 13;

  Character164Base.hpBase = 17;

  Character164Base.pDefBase = 1.5;

  Character164Base.mDefBase = 1.5;

  Character164Base.moveBase = 4;

  Character164Base.rangeBase = 1;

  Character164Base.hitRateBase = 97;

  Character164Base.dodgeRateBase = 3;

  Character164Base.itemMax = 10;

  Character164Base.expRate = 2.2;

  Character164Base.textDeath = "的場梨沙";

  Character164Base.abilityName = "なし";

  Character164Base.abilityDesc = "なし";

  function Character164Base(params) {
    Character164Base.__super__.constructor.call(this, params);
  }

  return Character164Base;

})(CharacterBase);

Character165Base = (function(superClass) {
  extend(Character165Base, superClass);

  Character165Base.characterId = 165;

  Character165Base.characterName = "間中美里";

  Character165Base.defaultJoin = false;

  Character165Base.images = [];

  Character165Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character165Base.attackBase = 13;

  Character165Base.hpBase = 17;

  Character165Base.pDefBase = 1.5;

  Character165Base.mDefBase = 1.5;

  Character165Base.moveBase = 4;

  Character165Base.rangeBase = 1;

  Character165Base.hitRateBase = 97;

  Character165Base.dodgeRateBase = 3;

  Character165Base.itemMax = 10;

  Character165Base.expRate = 2.2;

  Character165Base.textDeath = "間中美里";

  Character165Base.abilityName = "なし";

  Character165Base.abilityDesc = "なし";

  function Character165Base(params) {
    Character165Base.__super__.constructor.call(this, params);
  }

  return Character165Base;

})(CharacterBase);

Character166Base = (function(superClass) {
  extend(Character166Base, superClass);

  Character166Base.characterId = 166;

  Character166Base.characterName = "真鍋いつき";

  Character166Base.defaultJoin = false;

  Character166Base.images = [];

  Character166Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character166Base.attackBase = 13;

  Character166Base.hpBase = 17;

  Character166Base.pDefBase = 1.5;

  Character166Base.mDefBase = 1.5;

  Character166Base.moveBase = 4;

  Character166Base.rangeBase = 1;

  Character166Base.hitRateBase = 97;

  Character166Base.dodgeRateBase = 3;

  Character166Base.itemMax = 10;

  Character166Base.expRate = 2.2;

  Character166Base.textDeath = "真鍋いつき";

  Character166Base.abilityName = "なし";

  Character166Base.abilityDesc = "なし";

  function Character166Base(params) {
    Character166Base.__super__.constructor.call(this, params);
  }

  return Character166Base;

})(CharacterBase);

Character167Base = (function(superClass) {
  extend(Character167Base, superClass);

  Character167Base.characterId = 167;

  Character167Base.characterName = "三浦あずさ";

  Character167Base.defaultJoin = false;

  Character167Base.images = [];

  Character167Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character167Base.attackBase = 13;

  Character167Base.hpBase = 17;

  Character167Base.pDefBase = 1.5;

  Character167Base.mDefBase = 1.5;

  Character167Base.moveBase = 4;

  Character167Base.rangeBase = 1;

  Character167Base.hitRateBase = 97;

  Character167Base.dodgeRateBase = 3;

  Character167Base.itemMax = 10;

  Character167Base.expRate = 2.3;

  Character167Base.textDeath = "三浦あずさ";

  Character167Base.abilityName = "なし";

  Character167Base.abilityDesc = "なし";

  function Character167Base(params) {
    Character167Base.__super__.constructor.call(this, params);
  }

  return Character167Base;

})(CharacterBase);

Character168Base = (function(superClass) {
  extend(Character168Base, superClass);

  Character168Base.characterId = 168;

  Character168Base.characterName = "水木聖來";

  Character168Base.defaultJoin = false;

  Character168Base.images = [];

  Character168Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character168Base.attackBase = 13;

  Character168Base.hpBase = 17;

  Character168Base.pDefBase = 1.5;

  Character168Base.mDefBase = 1.5;

  Character168Base.moveBase = 4;

  Character168Base.rangeBase = 1;

  Character168Base.hitRateBase = 97;

  Character168Base.dodgeRateBase = 3;

  Character168Base.itemMax = 10;

  Character168Base.expRate = 2.2;

  Character168Base.textDeath = "水木聖來";

  Character168Base.abilityName = "なし";

  Character168Base.abilityDesc = "なし";

  function Character168Base(params) {
    Character168Base.__super__.constructor.call(this, params);
  }

  return Character168Base;

})(CharacterBase);

Character169Base = (function(superClass) {
  extend(Character169Base, superClass);

  Character169Base.characterId = 169;

  Character169Base.characterName = "水谷絵理";

  Character169Base.defaultJoin = false;

  Character169Base.images = [];

  Character169Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character169Base.attackBase = 13;

  Character169Base.hpBase = 17;

  Character169Base.pDefBase = 1.5;

  Character169Base.mDefBase = 1.5;

  Character169Base.moveBase = 4;

  Character169Base.rangeBase = 1;

  Character169Base.hitRateBase = 97;

  Character169Base.dodgeRateBase = 3;

  Character169Base.itemMax = 10;

  Character169Base.expRate = 2.2;

  Character169Base.textDeath = "水谷絵理";

  Character169Base.abilityName = "なし";

  Character169Base.abilityDesc = "なし";

  function Character169Base(params) {
    Character169Base.__super__.constructor.call(this, params);
  }

  return Character169Base;

})(CharacterBase);

Character170Base = (function(superClass) {
  extend(Character170Base, superClass);

  Character170Base.characterId = 170;

  Character170Base.characterName = "水野翠";

  Character170Base.defaultJoin = false;

  Character170Base.images = [];

  Character170Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character170Base.attackBase = 13;

  Character170Base.hpBase = 17;

  Character170Base.pDefBase = 1.5;

  Character170Base.mDefBase = 1.5;

  Character170Base.moveBase = 4;

  Character170Base.rangeBase = 1;

  Character170Base.hitRateBase = 97;

  Character170Base.dodgeRateBase = 3;

  Character170Base.itemMax = 10;

  Character170Base.expRate = 2.2;

  Character170Base.textDeath = "水野翠";

  Character170Base.abilityName = "なし";

  Character170Base.abilityDesc = "なし";

  function Character170Base(params) {
    Character170Base.__super__.constructor.call(this, params);
  }

  return Character170Base;

})(CharacterBase);

Character171Base = (function(superClass) {
  extend(Character171Base, superClass);

  Character171Base.characterId = 171;

  Character171Base.characterName = "水本ゆかり";

  Character171Base.defaultJoin = false;

  Character171Base.images = [];

  Character171Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character171Base.attackBase = 13;

  Character171Base.hpBase = 17;

  Character171Base.pDefBase = 1.5;

  Character171Base.mDefBase = 1.5;

  Character171Base.moveBase = 4;

  Character171Base.rangeBase = 1;

  Character171Base.hitRateBase = 97;

  Character171Base.dodgeRateBase = 3;

  Character171Base.itemMax = 10;

  Character171Base.expRate = 2.2;

  Character171Base.textDeath = "水本ゆかり";

  Character171Base.abilityName = "なし";

  Character171Base.abilityDesc = "なし";

  function Character171Base(params) {
    Character171Base.__super__.constructor.call(this, params);
  }

  return Character171Base;

})(CharacterBase);

Character172Base = (function(superClass) {
  extend(Character172Base, superClass);

  Character172Base.characterId = 172;

  Character172Base.characterName = "水瀬伊織";

  Character172Base.defaultJoin = false;

  Character172Base.images = [];

  Character172Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character172Base.attackBase = 13;

  Character172Base.hpBase = 17;

  Character172Base.pDefBase = 1.5;

  Character172Base.mDefBase = 1.5;

  Character172Base.moveBase = 4;

  Character172Base.rangeBase = 1;

  Character172Base.hitRateBase = 97;

  Character172Base.dodgeRateBase = 3;

  Character172Base.itemMax = 10;

  Character172Base.expRate = 2.2;

  Character172Base.textDeath = "水瀬伊織";

  Character172Base.abilityName = "なし";

  Character172Base.abilityDesc = "なし";

  function Character172Base(params) {
    Character172Base.__super__.constructor.call(this, params);
  }

  return Character172Base;

})(CharacterBase);

Character173Base = (function(superClass) {
  extend(Character173Base, superClass);

  Character173Base.characterId = 173;

  Character173Base.characterName = "三船美優";

  Character173Base.defaultJoin = false;

  Character173Base.images = [];

  Character173Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character173Base.attackBase = 13;

  Character173Base.hpBase = 17;

  Character173Base.pDefBase = 1.5;

  Character173Base.mDefBase = 1.5;

  Character173Base.moveBase = 4;

  Character173Base.rangeBase = 1;

  Character173Base.hitRateBase = 97;

  Character173Base.dodgeRateBase = 3;

  Character173Base.itemMax = 10;

  Character173Base.expRate = 2.2;

  Character173Base.textDeath = "三船美優";

  Character173Base.abilityName = "なし";

  Character173Base.abilityDesc = "なし";

  function Character173Base(params) {
    Character173Base.__super__.constructor.call(this, params);
  }

  return Character173Base;

})(CharacterBase);

Character174Base = (function(superClass) {
  extend(Character174Base, superClass);

  Character174Base.characterId = 174;

  Character174Base.characterName = "三村かな子";

  Character174Base.defaultJoin = false;

  Character174Base.images = [];

  Character174Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character174Base.attackBase = 10;

  Character174Base.hpBase = 24;

  Character174Base.pDefBase = 3.5;

  Character174Base.mDefBase = 2.5;

  Character174Base.moveBase = 3;

  Character174Base.rangeBase = 1;

  Character174Base.hitRateBase = 95;

  Character174Base.dodgeRateBase = 1;

  Character174Base.itemMax = 10;

  Character174Base.expRate = 2.2;

  Character174Base.textDeath = "三村かな子";

  Character174Base.abilityName = "なし";

  Character174Base.abilityDesc = "最大HPの50%以上のダメージを受けてHPが0になった時、一度だけHP1で耐える";

  function Character174Base(params) {
    Character174Base.__super__.constructor.call(this, params);
  }

  return Character174Base;

})(CharacterBase);

Character175Base = (function(superClass) {
  extend(Character175Base, superClass);

  Character175Base.characterId = 175;

  Character175Base.characterName = "宮本フレデリカ";

  Character175Base.defaultJoin = false;

  Character175Base.images = [];

  Character175Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character175Base.attackBase = 14;

  Character175Base.hpBase = 17;

  Character175Base.pDefBase = 1.5;

  Character175Base.mDefBase = 1.5;

  Character175Base.moveBase = 4;

  Character175Base.rangeBase = 1;

  Character175Base.hitRateBase = 97;

  Character175Base.dodgeRateBase = 5;

  Character175Base.itemMax = 10;

  Character175Base.expRate = 2.2;

  Character175Base.textDeath = "宮本フレデリカ";

  Character175Base.abilityName = "なし";

  Character175Base.abilityDesc = "ターン開始時、攻撃タイプがランダムに変化する";

  function Character175Base(params) {
    Character175Base.__super__.constructor.call(this, params);
  }

  return Character175Base;

})(CharacterBase);

Character176Base = (function(superClass) {
  extend(Character176Base, superClass);

  Character176Base.characterId = 176;

  Character176Base.characterName = "三好紗南";

  Character176Base.defaultJoin = false;

  Character176Base.images = [];

  Character176Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character176Base.attackBase = 13;

  Character176Base.hpBase = 17;

  Character176Base.pDefBase = 1.5;

  Character176Base.mDefBase = 1.5;

  Character176Base.moveBase = 4;

  Character176Base.rangeBase = 1;

  Character176Base.hitRateBase = 97;

  Character176Base.dodgeRateBase = 3;

  Character176Base.itemMax = 10;

  Character176Base.expRate = 2.2;

  Character176Base.textDeath = "三好紗南";

  Character176Base.abilityName = "なし";

  Character176Base.abilityDesc = "なし";

  function Character176Base(params) {
    Character176Base.__super__.constructor.call(this, params);
  }

  return Character176Base;

})(CharacterBase);

Character177Base = (function(superClass) {
  extend(Character177Base, superClass);

  Character177Base.characterId = 177;

  Character177Base.characterName = "向井拓海";

  Character177Base.defaultJoin = false;

  Character177Base.images = [];

  Character177Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character177Base.attackBase = 23;

  Character177Base.hpBase = 22;

  Character177Base.pDefBase = 1.5;

  Character177Base.mDefBase = 1.2;

  Character177Base.moveBase = 4;

  Character177Base.rangeBase = 1;

  Character177Base.hitRateBase = 93;

  Character177Base.dodgeRateBase = 2;

  Character177Base.itemMax = 10;

  Character177Base.expRate = 2.4;

  Character177Base.textDeath = "向井拓海";

  Character177Base.abilityName = "喧嘩上等";

  Character177Base.abilityDesc = "敵の攻撃を寄せつける";

  function Character177Base(params) {
    Character177Base.__super__.constructor.call(this, params);
  }

  return Character177Base;

})(CharacterBase);

Character178Base = (function(superClass) {
  extend(Character178Base, superClass);

  Character178Base.characterId = 178;

  Character178Base.characterName = "棟方愛海";

  Character178Base.defaultJoin = false;

  Character178Base.images = [];

  Character178Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character178Base.attackBase = 13;

  Character178Base.hpBase = 17;

  Character178Base.pDefBase = 1.5;

  Character178Base.mDefBase = 1.5;

  Character178Base.moveBase = 4;

  Character178Base.rangeBase = 1;

  Character178Base.hitRateBase = 97;

  Character178Base.dodgeRateBase = 3;

  Character178Base.itemMax = 10;

  Character178Base.expRate = 2.2;

  Character178Base.textDeath = "棟方愛海";

  Character178Base.abilityName = "なし";

  Character178Base.abilityDesc = "なし";

  function Character178Base(params) {
    Character178Base.__super__.constructor.call(this, params);
  }

  return Character178Base;

})(CharacterBase);

Character179Base = (function(superClass) {
  extend(Character179Base, superClass);

  Character179Base.characterId = 179;

  Character179Base.characterName = "村上巴";

  Character179Base.defaultJoin = false;

  Character179Base.images = [];

  Character179Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character179Base.attackBase = 17;

  Character179Base.hpBase = 16;

  Character179Base.pDefBase = 1.6;

  Character179Base.mDefBase = 1.2;

  Character179Base.moveBase = 4;

  Character179Base.rangeBase = 1;

  Character179Base.hitRateBase = 95;

  Character179Base.dodgeRateBase = 6;

  Character179Base.itemMax = 10;

  Character179Base.expRate = 2.2;

  Character179Base.textDeath = "村上巴";

  Character179Base.abilityName = "なし";

  Character179Base.abilityDesc = "自分よりレベルが高い相手に攻撃する時、攻撃が10%上がる";

  function Character179Base(params) {
    Character179Base.__super__.constructor.call(this, params);
  }

  return Character179Base;

})(CharacterBase);

Character180Base = (function(superClass) {
  extend(Character180Base, superClass);

  Character180Base.characterId = 180;

  Character180Base.characterName = "村松さくら";

  Character180Base.defaultJoin = false;

  Character180Base.images = [];

  Character180Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character180Base.attackBase = 13;

  Character180Base.hpBase = 17;

  Character180Base.pDefBase = 1.5;

  Character180Base.mDefBase = 1.5;

  Character180Base.moveBase = 4;

  Character180Base.rangeBase = 1;

  Character180Base.hitRateBase = 97;

  Character180Base.dodgeRateBase = 3;

  Character180Base.itemMax = 10;

  Character180Base.expRate = 2.2;

  Character180Base.textDeath = "村松さくら";

  Character180Base.abilityName = "なし";

  Character180Base.abilityDesc = "なし";

  function Character180Base(params) {
    Character180Base.__super__.constructor.call(this, params);
  }

  return Character180Base;

})(CharacterBase);

Character181Base = (function(superClass) {
  extend(Character181Base, superClass);

  Character181Base.characterId = 181;

  Character181Base.characterName = "メアリー・コクラン";

  Character181Base.defaultJoin = false;

  Character181Base.images = [];

  Character181Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character181Base.attackBase = 13;

  Character181Base.hpBase = 17;

  Character181Base.pDefBase = 1.5;

  Character181Base.mDefBase = 1.5;

  Character181Base.moveBase = 4;

  Character181Base.rangeBase = 1;

  Character181Base.hitRateBase = 97;

  Character181Base.dodgeRateBase = 3;

  Character181Base.itemMax = 10;

  Character181Base.expRate = 2.2;

  Character181Base.textDeath = "メアリー・コクラン";

  Character181Base.abilityName = "なし";

  Character181Base.abilityDesc = "なし";

  function Character181Base(params) {
    Character181Base.__super__.constructor.call(this, params);
  }

  return Character181Base;

})(CharacterBase);

Character182Base = (function(superClass) {
  extend(Character182Base, superClass);

  Character182Base.characterId = 182;

  Character182Base.characterName = "持田亜里沙";

  Character182Base.defaultJoin = false;

  Character182Base.images = [];

  Character182Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character182Base.attackBase = 11;

  Character182Base.hpBase = 19;

  Character182Base.pDefBase = 2;

  Character182Base.mDefBase = 2;

  Character182Base.moveBase = 4;

  Character182Base.rangeBase = 2;

  Character182Base.hitRateBase = 95;

  Character182Base.dodgeRateBase = 2;

  Character182Base.itemMax = 15;

  Character182Base.expRate = 2.2;

  Character182Base.textDeath = "持田亜里沙";

  Character182Base.abilityName = "なし";

  Character182Base.abilityDesc = "なし";

  function Character182Base(params) {
    Character182Base.__super__.constructor.call(this, params);
  }

  return Character182Base;

})(CharacterBase);

Character183Base = (function(superClass) {
  extend(Character183Base, superClass);

  Character183Base.characterId = 183;

  Character183Base.characterName = "望月聖";

  Character183Base.defaultJoin = false;

  Character183Base.images = [];

  Character183Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character183Base.attackBase = 13;

  Character183Base.hpBase = 17;

  Character183Base.pDefBase = 1.5;

  Character183Base.mDefBase = 1.5;

  Character183Base.moveBase = 4;

  Character183Base.rangeBase = 1;

  Character183Base.hitRateBase = 97;

  Character183Base.dodgeRateBase = 3;

  Character183Base.itemMax = 10;

  Character183Base.expRate = 2.2;

  Character183Base.textDeath = "望月聖";

  Character183Base.abilityName = "なし";

  Character183Base.abilityDesc = "なし";

  function Character183Base(params) {
    Character183Base.__super__.constructor.call(this, params);
  }

  return Character183Base;

})(CharacterBase);

Character184Base = (function(superClass) {
  extend(Character184Base, superClass);

  Character184Base.characterId = 184;

  Character184Base.characterName = "桃井あずき";

  Character184Base.defaultJoin = false;

  Character184Base.images = [];

  Character184Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character184Base.attackBase = 13;

  Character184Base.hpBase = 18;

  Character184Base.pDefBase = 1.2;

  Character184Base.mDefBase = 1.2;

  Character184Base.moveBase = 4;

  Character184Base.rangeBase = 1;

  Character184Base.hitRateBase = 97;

  Character184Base.dodgeRateBase = 3;

  Character184Base.itemMax = 10;

  Character184Base.expRate = 2.2;

  Character184Base.textDeath = "桃井あずき";

  Character184Base.abilityName = "呉服";

  Character184Base.abilityDesc = "ターン開始時、物防・魔防が10%上がる";

  function Character184Base(params) {
    Character184Base.__super__.constructor.call(this, params);
  }

  return Character184Base;

})(CharacterBase);

Character185Base = (function(superClass) {
  extend(Character185Base, superClass);

  Character185Base.characterId = 185;

  Character185Base.characterName = "森久保乃々";

  Character185Base.defaultJoin = false;

  Character185Base.images = [];

  Character185Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character185Base.attackBase = 9;

  Character185Base.hpBase = 16;

  Character185Base.pDefBase = 2.7;

  Character185Base.mDefBase = 2.7;

  Character185Base.moveBase = 3;

  Character185Base.rangeBase = 3;

  Character185Base.hitRateBase = 97;

  Character185Base.dodgeRateBase = 3;

  Character185Base.itemMax = 10;

  Character185Base.expRate = 2.2;

  Character185Base.textDeath = "森久保乃々";

  Character185Base.abilityName = "む～り～";

  Character185Base.abilityDesc = "敵ターン終了時、周りに3体以上のユニットがいる時、マップ左端のランダムなマスにワープする";

  function Character185Base(params) {
    Character185Base.__super__.constructor.call(this, params);
  }

  return Character185Base;

})(CharacterBase);

Character186Base = (function(superClass) {
  extend(Character186Base, superClass);

  Character186Base.characterId = 186;

  Character186Base.characterName = "諸星きらり";

  Character186Base.defaultJoin = false;

  Character186Base.images = [];

  Character186Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character186Base.attackBase = 18;

  Character186Base.hpBase = 22;

  Character186Base.pDefBase = 1.5;

  Character186Base.mDefBase = 2.3;

  Character186Base.moveBase = 4;

  Character186Base.rangeBase = 1;

  Character186Base.hitRateBase = 95;

  Character186Base.dodgeRateBase = 2;

  Character186Base.itemMax = 10;

  Character186Base.expRate = 2.2;

  Character186Base.textDeath = "諸星きらり";

  Character186Base.abilityName = "きらりん☆ストロング";

  Character186Base.abilityDesc = "最大HPの50%以上のダメージを受けてHPが0になった時、一度だけHP1で耐える。";

  function Character186Base(params) {
    Character186Base.__super__.constructor.call(this, params);
  }

  return Character186Base;

})(CharacterBase);

Character187Base = (function(superClass) {
  extend(Character187Base, superClass);

  Character187Base.characterId = 187;

  Character187Base.characterName = "楊菲菲";

  Character187Base.defaultJoin = false;

  Character187Base.images = [];

  Character187Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character187Base.attackBase = 16;

  Character187Base.hpBase = 10;

  Character187Base.pDefBase = 1.4;

  Character187Base.mDefBase = 1.4;

  Character187Base.moveBase = 5;

  Character187Base.rangeBase = 1;

  Character187Base.hitRateBase = 97;

  Character187Base.dodgeRateBase = 10;

  Character187Base.itemMax = 10;

  Character187Base.expRate = 2.2;

  Character187Base.textDeath = "楊菲菲";

  Character187Base.abilityName = "カンフー";

  Character187Base.abilityDesc = "最大HP以上のダメージを受ける時、10%の確率で回避する";

  function Character187Base(params) {
    Character187Base.__super__.constructor.call(this, params);
  }

  return Character187Base;

})(CharacterBase);

Character188Base = (function(superClass) {
  extend(Character188Base, superClass);

  Character188Base.characterId = 188;

  Character188Base.characterName = "八神マキノ";

  Character188Base.defaultJoin = false;

  Character188Base.images = [];

  Character188Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character188Base.attackBase = 13;

  Character188Base.hpBase = 17;

  Character188Base.pDefBase = 1.5;

  Character188Base.mDefBase = 1.5;

  Character188Base.moveBase = 4;

  Character188Base.rangeBase = 1;

  Character188Base.hitRateBase = 97;

  Character188Base.dodgeRateBase = 3;

  Character188Base.itemMax = 10;

  Character188Base.expRate = 2.2;

  Character188Base.textDeath = "八神マキノ";

  Character188Base.abilityName = "諜報";

  Character188Base.abilityDesc = "なし";

  function Character188Base(params) {
    Character188Base.__super__.constructor.call(this, params);
  }

  return Character188Base;

})(CharacterBase);

Character189Base = (function(superClass) {
  extend(Character189Base, superClass);

  Character189Base.characterId = 189;

  Character189Base.characterName = "矢口美羽";

  Character189Base.defaultJoin = false;

  Character189Base.images = [];

  Character189Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character189Base.attackBase = 13;

  Character189Base.hpBase = 17;

  Character189Base.pDefBase = 1.5;

  Character189Base.mDefBase = 1.5;

  Character189Base.moveBase = 4;

  Character189Base.rangeBase = 1;

  Character189Base.hitRateBase = 97;

  Character189Base.dodgeRateBase = 3;

  Character189Base.itemMax = 10;

  Character189Base.expRate = 2.2;

  Character189Base.textDeath = "矢口美羽";

  Character189Base.abilityName = "なし";

  Character189Base.abilityDesc = "なし";

  function Character189Base(params) {
    Character189Base.__super__.constructor.call(this, params);
  }

  return Character189Base;

})(CharacterBase);

Character190Base = (function(superClass) {
  extend(Character190Base, superClass);

  Character190Base.characterId = 190;

  Character190Base.characterName = "柳清良";

  Character190Base.defaultJoin = false;

  Character190Base.images = [];

  Character190Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character190Base.attackBase = 7;

  Character190Base.hpBase = 13;

  Character190Base.pDefBase = 0.9;

  Character190Base.mDefBase = 1.2;

  Character190Base.moveBase = 3;

  Character190Base.rangeBase = 1;

  Character190Base.hitRateBase = 92;

  Character190Base.dodgeRateBase = 1;

  Character190Base.itemMax = 12;

  Character190Base.expRate = 2.4;

  Character190Base.textDeath = "柳清良";

  Character190Base.abilityName = "看護";

  Character190Base.abilityDesc = "ターンごとの体力現象を半分にする";

  function Character190Base(params) {
    Character190Base.__super__.constructor.call(this, params);
  }

  return Character190Base;

})(CharacterBase);

Character191Base = (function(superClass) {
  extend(Character191Base, superClass);

  Character191Base.characterId = 191;

  Character191Base.characterName = "柳瀬美由紀";

  Character191Base.defaultJoin = false;

  Character191Base.images = [];

  Character191Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character191Base.attackBase = 13;

  Character191Base.hpBase = 17;

  Character191Base.pDefBase = 1.5;

  Character191Base.mDefBase = 1.5;

  Character191Base.moveBase = 4;

  Character191Base.rangeBase = 1;

  Character191Base.hitRateBase = 97;

  Character191Base.dodgeRateBase = 3;

  Character191Base.itemMax = 10;

  Character191Base.expRate = 2.2;

  Character191Base.textDeath = "柳瀬美由紀";

  Character191Base.abilityName = "なし";

  Character191Base.abilityDesc = "なし";

  function Character191Base(params) {
    Character191Base.__super__.constructor.call(this, params);
  }

  return Character191Base;

})(CharacterBase);

Character192Base = (function(superClass) {
  extend(Character192Base, superClass);

  Character192Base.characterId = 192;

  Character192Base.characterName = "大和亜季";

  Character192Base.defaultJoin = false;

  Character192Base.images = [];

  Character192Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character192Base.attackBase = 13;

  Character192Base.hpBase = 19;

  Character192Base.pDefBase = 1.5;

  Character192Base.mDefBase = 1;

  Character192Base.moveBase = 5;

  Character192Base.rangeBase = 6;

  Character192Base.hitRateBase = 70;

  Character192Base.dodgeRateBase = 5;

  Character192Base.itemMax = 15;

  Character192Base.expRate = 2.2;

  Character192Base.textDeath = "大和亜季";

  Character192Base.abilityName = "掃射";

  Character192Base.abilityDesc = "攻撃時、周囲8マスの味方、敵にも同じダメージを与えることがある";

  function Character192Base(params) {
    Character192Base.__super__.constructor.call(this, params);
  }

  return Character192Base;

})(CharacterBase);

Character193Base = (function(superClass) {
  extend(Character193Base, superClass);

  Character193Base.characterId = 193;

  Character193Base.characterName = "結城晴";

  Character193Base.defaultJoin = false;

  Character193Base.images = [];

  Character193Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character193Base.attackBase = 16;

  Character193Base.hpBase = 16;

  Character193Base.pDefBase = 1.4;

  Character193Base.mDefBase = 1.4;

  Character193Base.moveBase = 4;

  Character193Base.rangeBase = 1;

  Character193Base.hitRateBase = 97;

  Character193Base.dodgeRateBase = 5;

  Character193Base.itemMax = 8;

  Character193Base.expRate = 1.8;

  Character193Base.textDeath = "結城晴";

  Character193Base.abilityName = "なし";

  Character193Base.abilityDesc = "なし";

  function Character193Base(params) {
    Character193Base.__super__.constructor.call(this, params);
  }

  return Character193Base;

})(CharacterBase);

Character194Base = (function(superClass) {
  extend(Character194Base, superClass);

  Character194Base.characterId = 194;

  Character194Base.characterName = "遊佐こずえ";

  Character194Base.defaultJoin = false;

  Character194Base.images = [];

  Character194Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character194Base.attackBase = 10;

  Character194Base.hpBase = 13;

  Character194Base.pDefBase = 1;

  Character194Base.mDefBase = 3.5;

  Character194Base.moveBase = 3;

  Character194Base.rangeBase = 4;

  Character194Base.hitRateBase = 90;

  Character194Base.dodgeRateBase = 7;

  Character194Base.itemMax = 8;

  Character194Base.expRate = 2.0;

  Character194Base.textDeath = "遊佐こずえ";

  Character194Base.abilityName = "なし";

  Character194Base.abilityDesc = "なし";

  function Character194Base(params) {
    Character194Base.__super__.constructor.call(this, params);
  }

  return Character194Base;

})(CharacterBase);

Character195Base = (function(superClass) {
  extend(Character195Base, superClass);

  Character195Base.characterId = 195;

  Character195Base.characterName = "横山千佳";

  Character195Base.defaultJoin = false;

  Character195Base.images = [];

  Character195Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character195Base.attackBase = 14;

  Character195Base.hpBase = 13;

  Character195Base.pDefBase = 1;

  Character195Base.mDefBase = 4.5;

  Character195Base.moveBase = 4;

  Character195Base.rangeBase = 1;

  Character195Base.hitRateBase = 97;

  Character195Base.dodgeRateBase = 3;

  Character195Base.itemMax = 10;

  Character195Base.expRate = 1.8;

  Character195Base.textDeath = "横山千佳";

  Character195Base.abilityName = "なし";

  Character195Base.abilityDesc = "なし";

  function Character195Base(params) {
    Character195Base.__super__.constructor.call(this, params);
  }

  return Character195Base;

})(CharacterBase);

Character196Base = (function(superClass) {
  extend(Character196Base, superClass);

  Character196Base.characterId = 196;

  Character196Base.characterName = "吉岡沙紀";

  Character196Base.defaultJoin = false;

  Character196Base.images = [];

  Character196Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character196Base.attackBase = 13;

  Character196Base.hpBase = 17;

  Character196Base.pDefBase = 1.5;

  Character196Base.mDefBase = 1.5;

  Character196Base.moveBase = 4;

  Character196Base.rangeBase = 1;

  Character196Base.hitRateBase = 97;

  Character196Base.dodgeRateBase = 3;

  Character196Base.itemMax = 10;

  Character196Base.expRate = 2.2;

  Character196Base.textDeath = "吉岡沙紀";

  Character196Base.abilityName = "なし";

  Character196Base.abilityDesc = "なし";

  function Character196Base(params) {
    Character196Base.__super__.constructor.call(this, params);
  }

  return Character196Base;

})(CharacterBase);

Character197Base = (function(superClass) {
  extend(Character197Base, superClass);

  Character197Base.characterId = 197;

  Character197Base.characterName = "依田芳乃";

  Character197Base.defaultJoin = false;

  Character197Base.images = [];

  Character197Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character197Base.attackBase = 13;

  Character197Base.hpBase = 17;

  Character197Base.pDefBase = 1.5;

  Character197Base.mDefBase = 1.5;

  Character197Base.moveBase = 4;

  Character197Base.rangeBase = 1;

  Character197Base.hitRateBase = 97;

  Character197Base.dodgeRateBase = 3;

  Character197Base.itemMax = 10;

  Character197Base.expRate = 2.2;

  Character197Base.textDeath = "依田芳乃";

  Character197Base.abilityName = "なし";

  Character197Base.abilityDesc = "なし";

  function Character197Base(params) {
    Character197Base.__super__.constructor.call(this, params);
  }

  return Character197Base;

})(CharacterBase);

Character198Base = (function(superClass) {
  extend(Character198Base, superClass);

  Character198Base.characterId = 198;

  Character198Base.characterName = "ライラ";

  Character198Base.defaultJoin = false;

  Character198Base.images = [];

  Character198Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character198Base.attackBase = 13;

  Character198Base.hpBase = 12;

  Character198Base.pDefBase = 1.5;

  Character198Base.mDefBase = 1.5;

  Character198Base.moveBase = 4;

  Character198Base.rangeBase = 1;

  Character198Base.hitRateBase = 97;

  Character198Base.dodgeRateBase = 3;

  Character198Base.itemMax = 10;

  Character198Base.expRate = 2.2;

  Character198Base.textDeath = "ライラ";

  Character198Base.abilityName = "なし";

  Character198Base.abilityDesc = "なし";

  function Character198Base(params) {
    Character198Base.__super__.constructor.call(this, params);
  }

  return Character198Base;

})(CharacterBase);

Character199Base = (function(superClass) {
  extend(Character199Base, superClass);

  Character199Base.characterId = 199;

  Character199Base.characterName = "龍崎薫";

  Character199Base.defaultJoin = false;

  Character199Base.images = [];

  Character199Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character199Base.attackBase = 13;

  Character199Base.hpBase = 17;

  Character199Base.pDefBase = 1.5;

  Character199Base.mDefBase = 1.5;

  Character199Base.moveBase = 4;

  Character199Base.rangeBase = 1;

  Character199Base.hitRateBase = 97;

  Character199Base.dodgeRateBase = 3;

  Character199Base.itemMax = 10;

  Character199Base.expRate = 1.8;

  Character199Base.textDeath = "龍崎薫";

  Character199Base.abilityName = "なし";

  Character199Base.abilityDesc = "なし";

  function Character199Base(params) {
    Character199Base.__super__.constructor.call(this, params);
  }

  return Character199Base;

})(CharacterBase);

Character200Base = (function(superClass) {
  extend(Character200Base, superClass);

  Character200Base.characterId = 200;

  Character200Base.characterName = "ルーキートレーナー";

  Character200Base.defaultJoin = false;

  Character200Base.images = [];

  Character200Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character200Base.attackBase = 13;

  Character200Base.hpBase = 17;

  Character200Base.pDefBase = 1.5;

  Character200Base.mDefBase = 1.5;

  Character200Base.moveBase = 4;

  Character200Base.rangeBase = 1;

  Character200Base.hitRateBase = 97;

  Character200Base.dodgeRateBase = 3;

  Character200Base.itemMax = 10;

  Character200Base.expRate = 2.2;

  Character200Base.textDeath = "ルーキートレーナー";

  Character200Base.abilityName = "なし";

  Character200Base.abilityDesc = "なし";

  function Character200Base(params) {
    Character200Base.__super__.constructor.call(this, params);
  }

  return Character200Base;

})(CharacterBase);

Character201Base = (function(superClass) {
  extend(Character201Base, superClass);

  Character201Base.characterId = 201;

  Character201Base.characterName = "若林智香";

  Character201Base.defaultJoin = false;

  Character201Base.images = [];

  Character201Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character201Base.attackBase = 13;

  Character201Base.hpBase = 17;

  Character201Base.pDefBase = 1.5;

  Character201Base.mDefBase = 1.5;

  Character201Base.moveBase = 4;

  Character201Base.rangeBase = 1;

  Character201Base.hitRateBase = 97;

  Character201Base.dodgeRateBase = 3;

  Character201Base.itemMax = 10;

  Character201Base.expRate = 2.2;

  Character201Base.textDeath = "若林智香";

  Character201Base.abilityName = "なし";

  Character201Base.abilityDesc = "なし";

  function Character201Base(params) {
    Character201Base.__super__.constructor.call(this, params);
  }

  return Character201Base;

})(CharacterBase);

Character202Base = (function(superClass) {
  extend(Character202Base, superClass);

  Character202Base.characterId = 202;

  Character202Base.characterName = "脇山珠美";

  Character202Base.defaultJoin = false;

  Character202Base.images = [];

  Character202Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character202Base.attackBase = 18;

  Character202Base.hpBase = 12;

  Character202Base.pDefBase = 3.5;

  Character202Base.mDefBase = 1;

  Character202Base.moveBase = 4;

  Character202Base.rangeBase = 1;

  Character202Base.hitRateBase = 99;

  Character202Base.dodgeRateBase = 8;

  Character202Base.itemMax = 10;

  Character202Base.expRate = 2.0;

  Character202Base.textDeath = "脇山珠美";

  Character202Base.abilityName = "剣道";

  Character202Base.abilityDesc = "敵の攻撃を回避した時、反撃する";

  function Character202Base(params) {
    Character202Base.__super__.constructor.call(this, params);
  }

  return Character202Base;

})(CharacterBase);

Character203Base = (function(superClass) {
  extend(Character203Base, superClass);

  Character203Base.characterId = 203;

  Character203Base.characterName = "和久井留美";

  Character203Base.defaultJoin = false;

  Character203Base.images = [];

  Character203Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character203Base.attackBase = 13;

  Character203Base.hpBase = 17;

  Character203Base.pDefBase = 1.5;

  Character203Base.mDefBase = 1.5;

  Character203Base.moveBase = 4;

  Character203Base.rangeBase = 1;

  Character203Base.hitRateBase = 97;

  Character203Base.dodgeRateBase = 3;

  Character203Base.itemMax = 10;

  Character203Base.expRate = 2.6;

  Character203Base.textDeath = "和久井留美";

  Character203Base.abilityName = "なし";

  Character203Base.abilityDesc = "なし";

  function Character203Base(params) {
    Character203Base.__super__.constructor.call(this, params);
  }

  return Character203Base;

})(CharacterBase);

Character204Base = (function(superClass) {
  extend(Character204Base, superClass);

  Character204Base.characterId = 204;

  Character204Base.characterName = "千川ちひろ";

  Character204Base.defaultJoin = false;

  Character204Base.images = [];

  Character204Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Character204Base.attackBase = 0;

  Character204Base.hpBase = 14;

  Character204Base.pDefBase = 0.5;

  Character204Base.mDefBase = 0.5;

  Character204Base.moveBase = 1;

  Character204Base.rangeBase = 0;

  Character204Base.hitRateBase = 0;

  Character204Base.dodgeRateBase = 1;

  Character204Base.itemMax = 15;

  Character204Base.expRate = 3.2;

  Character204Base.textDeath = "千川ちひろ";

  Character204Base.abilityName = "マネジメント";

  Character204Base.abilityDesc = "出撃中に得るジュエルが2倍になる";

  function Character204Base(params) {
    Character204Base.__super__.constructor.call(this, params);
  }

  return Character204Base;

})(CharacterBase);

Character1 = (function(superClass) {
  extend(Character1, superClass);

  function Character1(params) {
    Character1.__super__.constructor.call(this, params);
  }

  return Character1;

})(Character1Base);

Character10 = (function(superClass) {
  extend(Character10, superClass);

  function Character10(params) {
    Character10.__super__.constructor.call(this, params);
  }

  return Character10;

})(Character10Base);

Character100 = (function(superClass) {
  extend(Character100, superClass);

  function Character100(params) {
    Character100.__super__.constructor.call(this, params);
  }

  return Character100;

})(Character100Base);

Character101 = (function(superClass) {
  extend(Character101, superClass);

  function Character101(params) {
    Character101.__super__.constructor.call(this, params);
  }

  return Character101;

})(Character101Base);

Character102 = (function(superClass) {
  extend(Character102, superClass);

  function Character102(params) {
    Character102.__super__.constructor.call(this, params);
  }

  return Character102;

})(Character102Base);

Character103 = (function(superClass) {
  extend(Character103, superClass);

  function Character103(params) {
    Character103.__super__.constructor.call(this, params);
  }

  return Character103;

})(Character103Base);

Character104 = (function(superClass) {
  extend(Character104, superClass);

  function Character104(params) {
    Character104.__super__.constructor.call(this, params);
  }

  return Character104;

})(Character104Base);

Character105 = (function(superClass) {
  extend(Character105, superClass);

  function Character105(params) {
    Character105.__super__.constructor.call(this, params);
  }

  return Character105;

})(Character105Base);

Character106 = (function(superClass) {
  extend(Character106, superClass);

  function Character106(params) {
    Character106.__super__.constructor.call(this, params);
  }

  return Character106;

})(Character106Base);

Character107 = (function(superClass) {
  extend(Character107, superClass);

  function Character107(params) {
    Character107.__super__.constructor.call(this, params);
  }

  return Character107;

})(Character107Base);

Character108 = (function(superClass) {
  extend(Character108, superClass);

  function Character108(params) {
    Character108.__super__.constructor.call(this, params);
  }

  return Character108;

})(Character108Base);

Character109 = (function(superClass) {
  extend(Character109, superClass);

  function Character109(params) {
    Character109.__super__.constructor.call(this, params);
  }

  return Character109;

})(Character109Base);

Character11 = (function(superClass) {
  extend(Character11, superClass);

  function Character11(params) {
    Character11.__super__.constructor.call(this, params);
  }

  return Character11;

})(Character11Base);

Character110 = (function(superClass) {
  extend(Character110, superClass);

  function Character110(params) {
    Character110.__super__.constructor.call(this, params);
  }

  return Character110;

})(Character110Base);

Character111 = (function(superClass) {
  extend(Character111, superClass);

  function Character111(params) {
    Character111.__super__.constructor.call(this, params);
  }

  return Character111;

})(Character111Base);

Character112 = (function(superClass) {
  extend(Character112, superClass);

  function Character112(params) {
    Character112.__super__.constructor.call(this, params);
  }

  return Character112;

})(Character112Base);

Character113 = (function(superClass) {
  extend(Character113, superClass);

  function Character113(params) {
    Character113.__super__.constructor.call(this, params);
  }

  return Character113;

})(Character113Base);

Character114 = (function(superClass) {
  extend(Character114, superClass);

  function Character114(params) {
    Character114.__super__.constructor.call(this, params);
  }

  return Character114;

})(Character114Base);

Character115 = (function(superClass) {
  extend(Character115, superClass);

  function Character115(params) {
    Character115.__super__.constructor.call(this, params);
  }

  return Character115;

})(Character115Base);

Character116 = (function(superClass) {
  extend(Character116, superClass);

  function Character116(params) {
    Character116.__super__.constructor.call(this, params);
  }

  return Character116;

})(Character116Base);

Character117 = (function(superClass) {
  extend(Character117, superClass);

  function Character117(params) {
    Character117.__super__.constructor.call(this, params);
  }

  return Character117;

})(Character117Base);

Character118 = (function(superClass) {
  extend(Character118, superClass);

  function Character118(params) {
    Character118.__super__.constructor.call(this, params);
  }

  return Character118;

})(Character118Base);

Character119 = (function(superClass) {
  extend(Character119, superClass);

  function Character119(params) {
    Character119.__super__.constructor.call(this, params);
  }

  return Character119;

})(Character119Base);

Character12 = (function(superClass) {
  extend(Character12, superClass);

  function Character12(params) {
    Character12.__super__.constructor.call(this, params);
  }

  return Character12;

})(Character12Base);

Character120 = (function(superClass) {
  extend(Character120, superClass);

  function Character120(params) {
    Character120.__super__.constructor.call(this, params);
  }

  return Character120;

})(Character120Base);

Character121 = (function(superClass) {
  extend(Character121, superClass);

  function Character121(params) {
    Character121.__super__.constructor.call(this, params);
  }

  return Character121;

})(Character121Base);

Character122 = (function(superClass) {
  extend(Character122, superClass);

  function Character122(params) {
    Character122.__super__.constructor.call(this, params);
  }

  return Character122;

})(Character122Base);

Character123 = (function(superClass) {
  extend(Character123, superClass);

  function Character123(params) {
    Character123.__super__.constructor.call(this, params);
  }

  return Character123;

})(Character123Base);

Character124 = (function(superClass) {
  extend(Character124, superClass);

  function Character124(params) {
    Character124.__super__.constructor.call(this, params);
  }

  return Character124;

})(Character124Base);

Character125 = (function(superClass) {
  extend(Character125, superClass);

  function Character125(params) {
    Character125.__super__.constructor.call(this, params);
  }

  return Character125;

})(Character125Base);

Character126 = (function(superClass) {
  extend(Character126, superClass);

  function Character126(params) {
    Character126.__super__.constructor.call(this, params);
  }

  return Character126;

})(Character126Base);

Character127 = (function(superClass) {
  extend(Character127, superClass);

  function Character127(params) {
    Character127.__super__.constructor.call(this, params);
  }

  return Character127;

})(Character127Base);

Character128 = (function(superClass) {
  extend(Character128, superClass);

  function Character128(params) {
    Character128.__super__.constructor.call(this, params);
  }

  return Character128;

})(Character128Base);

Character129 = (function(superClass) {
  extend(Character129, superClass);

  function Character129(params) {
    Character129.__super__.constructor.call(this, params);
  }

  return Character129;

})(Character129Base);

Character13 = (function(superClass) {
  extend(Character13, superClass);

  function Character13(params) {
    Character13.__super__.constructor.call(this, params);
  }

  return Character13;

})(Character13Base);

Character130 = (function(superClass) {
  extend(Character130, superClass);

  function Character130(params) {
    Character130.__super__.constructor.call(this, params);
  }

  return Character130;

})(Character130Base);

Character131 = (function(superClass) {
  extend(Character131, superClass);

  function Character131(params) {
    Character131.__super__.constructor.call(this, params);
  }

  return Character131;

})(Character131Base);

Character132 = (function(superClass) {
  extend(Character132, superClass);

  function Character132(params) {
    Character132.__super__.constructor.call(this, params);
  }

  return Character132;

})(Character132Base);

Character133 = (function(superClass) {
  extend(Character133, superClass);

  function Character133(params) {
    Character133.__super__.constructor.call(this, params);
  }

  return Character133;

})(Character133Base);

Character134 = (function(superClass) {
  extend(Character134, superClass);

  function Character134(params) {
    Character134.__super__.constructor.call(this, params);
  }

  return Character134;

})(Character134Base);

Character135 = (function(superClass) {
  extend(Character135, superClass);

  function Character135(params) {
    Character135.__super__.constructor.call(this, params);
  }

  return Character135;

})(Character135Base);

Character136 = (function(superClass) {
  extend(Character136, superClass);

  function Character136(params) {
    Character136.__super__.constructor.call(this, params);
  }

  return Character136;

})(Character136Base);

Character137 = (function(superClass) {
  extend(Character137, superClass);

  function Character137(params) {
    Character137.__super__.constructor.call(this, params);
  }

  return Character137;

})(Character137Base);

Character138 = (function(superClass) {
  extend(Character138, superClass);

  function Character138(params) {
    Character138.__super__.constructor.call(this, params);
  }

  return Character138;

})(Character138Base);

Character139 = (function(superClass) {
  extend(Character139, superClass);

  function Character139(params) {
    Character139.__super__.constructor.call(this, params);
  }

  return Character139;

})(Character139Base);

Character14 = (function(superClass) {
  extend(Character14, superClass);

  function Character14(params) {
    Character14.__super__.constructor.call(this, params);
  }

  return Character14;

})(Character14Base);

Character140 = (function(superClass) {
  extend(Character140, superClass);

  function Character140(params) {
    Character140.__super__.constructor.call(this, params);
  }

  return Character140;

})(Character140Base);

Character141 = (function(superClass) {
  extend(Character141, superClass);

  function Character141(params) {
    Character141.__super__.constructor.call(this, params);
  }

  return Character141;

})(Character141Base);

Character142 = (function(superClass) {
  extend(Character142, superClass);

  function Character142(params) {
    Character142.__super__.constructor.call(this, params);
  }

  return Character142;

})(Character142Base);

Character143 = (function(superClass) {
  extend(Character143, superClass);

  function Character143(params) {
    Character143.__super__.constructor.call(this, params);
  }

  return Character143;

})(Character143Base);

Character144 = (function(superClass) {
  extend(Character144, superClass);

  function Character144(params) {
    Character144.__super__.constructor.call(this, params);
  }

  return Character144;

})(Character144Base);

Character145 = (function(superClass) {
  extend(Character145, superClass);

  function Character145(params) {
    Character145.__super__.constructor.call(this, params);
  }

  return Character145;

})(Character145Base);

Character146 = (function(superClass) {
  extend(Character146, superClass);

  function Character146(params) {
    Character146.__super__.constructor.call(this, params);
  }

  return Character146;

})(Character146Base);

Character147 = (function(superClass) {
  extend(Character147, superClass);

  function Character147(params) {
    Character147.__super__.constructor.call(this, params);
  }

  return Character147;

})(Character147Base);

Character148 = (function(superClass) {
  extend(Character148, superClass);

  function Character148(params) {
    Character148.__super__.constructor.call(this, params);
  }

  return Character148;

})(Character148Base);

Character149 = (function(superClass) {
  extend(Character149, superClass);

  function Character149(params) {
    Character149.__super__.constructor.call(this, params);
  }

  return Character149;

})(Character149Base);

Character15 = (function(superClass) {
  extend(Character15, superClass);

  function Character15(params) {
    Character15.__super__.constructor.call(this, params);
  }

  return Character15;

})(Character15Base);

Character150 = (function(superClass) {
  extend(Character150, superClass);

  function Character150(params) {
    Character150.__super__.constructor.call(this, params);
  }

  return Character150;

})(Character150Base);

Character151 = (function(superClass) {
  extend(Character151, superClass);

  function Character151(params) {
    Character151.__super__.constructor.call(this, params);
  }

  return Character151;

})(Character151Base);

Character152 = (function(superClass) {
  extend(Character152, superClass);

  function Character152(params) {
    Character152.__super__.constructor.call(this, params);
  }

  return Character152;

})(Character152Base);

Character153 = (function(superClass) {
  extend(Character153, superClass);

  function Character153(params) {
    Character153.__super__.constructor.call(this, params);
  }

  return Character153;

})(Character153Base);

Character154 = (function(superClass) {
  extend(Character154, superClass);

  function Character154(params) {
    Character154.__super__.constructor.call(this, params);
  }

  return Character154;

})(Character154Base);

Character155 = (function(superClass) {
  extend(Character155, superClass);

  function Character155(params) {
    Character155.__super__.constructor.call(this, params);
  }

  return Character155;

})(Character155Base);

Character156 = (function(superClass) {
  extend(Character156, superClass);

  function Character156(params) {
    Character156.__super__.constructor.call(this, params);
  }

  return Character156;

})(Character156Base);

Character157 = (function(superClass) {
  extend(Character157, superClass);

  function Character157(params) {
    Character157.__super__.constructor.call(this, params);
  }

  return Character157;

})(Character157Base);

Character158 = (function(superClass) {
  extend(Character158, superClass);

  function Character158(params) {
    Character158.__super__.constructor.call(this, params);
  }

  return Character158;

})(Character158Base);

Character159 = (function(superClass) {
  extend(Character159, superClass);

  function Character159(params) {
    Character159.__super__.constructor.call(this, params);
  }

  return Character159;

})(Character159Base);

Character16 = (function(superClass) {
  extend(Character16, superClass);

  function Character16(params) {
    Character16.__super__.constructor.call(this, params);
  }

  return Character16;

})(Character16Base);

Character160 = (function(superClass) {
  extend(Character160, superClass);

  function Character160(params) {
    Character160.__super__.constructor.call(this, params);
  }

  return Character160;

})(Character160Base);

Character161 = (function(superClass) {
  extend(Character161, superClass);

  function Character161(params) {
    Character161.__super__.constructor.call(this, params);
  }

  return Character161;

})(Character161Base);

Character162 = (function(superClass) {
  extend(Character162, superClass);

  function Character162(params) {
    Character162.__super__.constructor.call(this, params);
  }

  return Character162;

})(Character162Base);

Character163 = (function(superClass) {
  extend(Character163, superClass);

  function Character163(params) {
    Character163.__super__.constructor.call(this, params);
  }

  return Character163;

})(Character163Base);

Character164 = (function(superClass) {
  extend(Character164, superClass);

  function Character164(params) {
    Character164.__super__.constructor.call(this, params);
  }

  return Character164;

})(Character164Base);

Character165 = (function(superClass) {
  extend(Character165, superClass);

  function Character165(params) {
    Character165.__super__.constructor.call(this, params);
  }

  return Character165;

})(Character165Base);

Character166 = (function(superClass) {
  extend(Character166, superClass);

  function Character166(params) {
    Character166.__super__.constructor.call(this, params);
  }

  return Character166;

})(Character166Base);

Character167 = (function(superClass) {
  extend(Character167, superClass);

  function Character167(params) {
    Character167.__super__.constructor.call(this, params);
  }

  return Character167;

})(Character167Base);

Character168 = (function(superClass) {
  extend(Character168, superClass);

  function Character168(params) {
    Character168.__super__.constructor.call(this, params);
  }

  return Character168;

})(Character168Base);

Character169 = (function(superClass) {
  extend(Character169, superClass);

  function Character169(params) {
    Character169.__super__.constructor.call(this, params);
  }

  return Character169;

})(Character169Base);

Character17 = (function(superClass) {
  extend(Character17, superClass);

  function Character17(params) {
    Character17.__super__.constructor.call(this, params);
  }

  return Character17;

})(Character17Base);

Character170 = (function(superClass) {
  extend(Character170, superClass);

  function Character170(params) {
    Character170.__super__.constructor.call(this, params);
  }

  return Character170;

})(Character170Base);

Character171 = (function(superClass) {
  extend(Character171, superClass);

  function Character171(params) {
    Character171.__super__.constructor.call(this, params);
  }

  return Character171;

})(Character171Base);

Character172 = (function(superClass) {
  extend(Character172, superClass);

  function Character172(params) {
    Character172.__super__.constructor.call(this, params);
  }

  return Character172;

})(Character172Base);

Character173 = (function(superClass) {
  extend(Character173, superClass);

  function Character173(params) {
    Character173.__super__.constructor.call(this, params);
  }

  return Character173;

})(Character173Base);

Character174 = (function(superClass) {
  extend(Character174, superClass);

  function Character174(params) {
    Character174.__super__.constructor.call(this, params);
  }

  return Character174;

})(Character174Base);

Character175 = (function(superClass) {
  extend(Character175, superClass);

  function Character175(params) {
    Character175.__super__.constructor.call(this, params);
  }

  return Character175;

})(Character175Base);

Character176 = (function(superClass) {
  extend(Character176, superClass);

  function Character176(params) {
    Character176.__super__.constructor.call(this, params);
  }

  return Character176;

})(Character176Base);

Character177 = (function(superClass) {
  extend(Character177, superClass);

  function Character177(params) {
    Character177.__super__.constructor.call(this, params);
  }

  return Character177;

})(Character177Base);

Character178 = (function(superClass) {
  extend(Character178, superClass);

  function Character178(params) {
    Character178.__super__.constructor.call(this, params);
  }

  return Character178;

})(Character178Base);

Character179 = (function(superClass) {
  extend(Character179, superClass);

  function Character179(params) {
    Character179.__super__.constructor.call(this, params);
  }

  return Character179;

})(Character179Base);

Character18 = (function(superClass) {
  extend(Character18, superClass);

  function Character18(params) {
    Character18.__super__.constructor.call(this, params);
  }

  return Character18;

})(Character18Base);

Character180 = (function(superClass) {
  extend(Character180, superClass);

  function Character180(params) {
    Character180.__super__.constructor.call(this, params);
  }

  return Character180;

})(Character180Base);

Character181 = (function(superClass) {
  extend(Character181, superClass);

  function Character181(params) {
    Character181.__super__.constructor.call(this, params);
  }

  return Character181;

})(Character181Base);

Character182 = (function(superClass) {
  extend(Character182, superClass);

  function Character182(params) {
    Character182.__super__.constructor.call(this, params);
  }

  return Character182;

})(Character182Base);

Character183 = (function(superClass) {
  extend(Character183, superClass);

  function Character183(params) {
    Character183.__super__.constructor.call(this, params);
  }

  return Character183;

})(Character183Base);

Character184 = (function(superClass) {
  extend(Character184, superClass);

  function Character184(params) {
    Character184.__super__.constructor.call(this, params);
  }

  return Character184;

})(Character184Base);

Character185 = (function(superClass) {
  extend(Character185, superClass);

  function Character185(params) {
    Character185.__super__.constructor.call(this, params);
  }

  return Character185;

})(Character185Base);

Character186 = (function(superClass) {
  extend(Character186, superClass);

  function Character186(params) {
    Character186.__super__.constructor.call(this, params);
  }

  return Character186;

})(Character186Base);

Character187 = (function(superClass) {
  extend(Character187, superClass);

  function Character187(params) {
    Character187.__super__.constructor.call(this, params);
  }

  return Character187;

})(Character187Base);

Character188 = (function(superClass) {
  extend(Character188, superClass);

  function Character188(params) {
    Character188.__super__.constructor.call(this, params);
  }

  return Character188;

})(Character188Base);

Character189 = (function(superClass) {
  extend(Character189, superClass);

  function Character189(params) {
    Character189.__super__.constructor.call(this, params);
  }

  return Character189;

})(Character189Base);

Character19 = (function(superClass) {
  extend(Character19, superClass);

  function Character19(params) {
    Character19.__super__.constructor.call(this, params);
  }

  return Character19;

})(Character19Base);

Character190 = (function(superClass) {
  extend(Character190, superClass);

  function Character190(params) {
    Character190.__super__.constructor.call(this, params);
  }

  return Character190;

})(Character190Base);

Character191 = (function(superClass) {
  extend(Character191, superClass);

  function Character191(params) {
    Character191.__super__.constructor.call(this, params);
  }

  return Character191;

})(Character191Base);

Character192 = (function(superClass) {
  extend(Character192, superClass);

  function Character192(params) {
    Character192.__super__.constructor.call(this, params);
  }

  return Character192;

})(Character192Base);

Character193 = (function(superClass) {
  extend(Character193, superClass);

  function Character193(params) {
    Character193.__super__.constructor.call(this, params);
  }

  return Character193;

})(Character193Base);

Character194 = (function(superClass) {
  extend(Character194, superClass);

  function Character194(params) {
    Character194.__super__.constructor.call(this, params);
  }

  return Character194;

})(Character194Base);

Character195 = (function(superClass) {
  extend(Character195, superClass);

  function Character195(params) {
    Character195.__super__.constructor.call(this, params);
  }

  return Character195;

})(Character195Base);

Character196 = (function(superClass) {
  extend(Character196, superClass);

  function Character196(params) {
    Character196.__super__.constructor.call(this, params);
  }

  return Character196;

})(Character196Base);

Character197 = (function(superClass) {
  extend(Character197, superClass);

  function Character197(params) {
    Character197.__super__.constructor.call(this, params);
  }

  return Character197;

})(Character197Base);

Character198 = (function(superClass) {
  extend(Character198, superClass);

  function Character198(params) {
    Character198.__super__.constructor.call(this, params);
  }

  return Character198;

})(Character198Base);

Character199 = (function(superClass) {
  extend(Character199, superClass);

  function Character199(params) {
    Character199.__super__.constructor.call(this, params);
  }

  return Character199;

})(Character199Base);

Character2 = (function(superClass) {
  extend(Character2, superClass);

  function Character2(params) {
    Character2.__super__.constructor.call(this, params);
  }

  return Character2;

})(Character2Base);

Character20 = (function(superClass) {
  extend(Character20, superClass);

  function Character20(params) {
    Character20.__super__.constructor.call(this, params);
  }

  return Character20;

})(Character20Base);

Character200 = (function(superClass) {
  extend(Character200, superClass);

  function Character200(params) {
    Character200.__super__.constructor.call(this, params);
  }

  return Character200;

})(Character200Base);

Character201 = (function(superClass) {
  extend(Character201, superClass);

  function Character201(params) {
    Character201.__super__.constructor.call(this, params);
  }

  return Character201;

})(Character201Base);

Character202 = (function(superClass) {
  extend(Character202, superClass);

  function Character202(params) {
    Character202.__super__.constructor.call(this, params);
  }

  return Character202;

})(Character202Base);

Character203 = (function(superClass) {
  extend(Character203, superClass);

  function Character203(params) {
    Character203.__super__.constructor.call(this, params);
  }

  return Character203;

})(Character203Base);

Character204 = (function(superClass) {
  extend(Character204, superClass);

  function Character204(params) {
    Character204.__super__.constructor.call(this, params);
  }

  return Character204;

})(Character204Base);

Character21 = (function(superClass) {
  extend(Character21, superClass);

  function Character21(params) {
    Character21.__super__.constructor.call(this, params);
  }

  return Character21;

})(Character21Base);

Character22 = (function(superClass) {
  extend(Character22, superClass);

  function Character22(params) {
    Character22.__super__.constructor.call(this, params);
  }

  return Character22;

})(Character22Base);

Character23 = (function(superClass) {
  extend(Character23, superClass);

  function Character23(params) {
    Character23.__super__.constructor.call(this, params);
  }

  return Character23;

})(Character23Base);

Character24 = (function(superClass) {
  extend(Character24, superClass);

  function Character24(params) {
    Character24.__super__.constructor.call(this, params);
  }

  return Character24;

})(Character24Base);

Character25 = (function(superClass) {
  extend(Character25, superClass);

  function Character25(params) {
    Character25.__super__.constructor.call(this, params);
  }

  return Character25;

})(Character25Base);

Character26 = (function(superClass) {
  extend(Character26, superClass);

  function Character26(params) {
    Character26.__super__.constructor.call(this, params);
  }

  return Character26;

})(Character26Base);

Character27 = (function(superClass) {
  extend(Character27, superClass);

  function Character27(params) {
    Character27.__super__.constructor.call(this, params);
  }

  return Character27;

})(Character27Base);

Character28 = (function(superClass) {
  extend(Character28, superClass);

  function Character28(params) {
    Character28.__super__.constructor.call(this, params);
  }

  return Character28;

})(Character28Base);

Character29 = (function(superClass) {
  extend(Character29, superClass);

  function Character29(params) {
    Character29.__super__.constructor.call(this, params);
  }

  return Character29;

})(Character29Base);

Character3 = (function(superClass) {
  extend(Character3, superClass);

  function Character3(params) {
    Character3.__super__.constructor.call(this, params);
  }

  return Character3;

})(Character3Base);

Character30 = (function(superClass) {
  extend(Character30, superClass);

  function Character30(params) {
    Character30.__super__.constructor.call(this, params);
  }

  return Character30;

})(Character30Base);

Character31 = (function(superClass) {
  extend(Character31, superClass);

  function Character31(params) {
    Character31.__super__.constructor.call(this, params);
  }

  return Character31;

})(Character31Base);

Character32 = (function(superClass) {
  extend(Character32, superClass);

  function Character32(params) {
    Character32.__super__.constructor.call(this, params);
  }

  return Character32;

})(Character32Base);

Character33 = (function(superClass) {
  extend(Character33, superClass);

  function Character33(params) {
    Character33.__super__.constructor.call(this, params);
  }

  return Character33;

})(Character33Base);

Character34 = (function(superClass) {
  extend(Character34, superClass);

  function Character34(params) {
    Character34.__super__.constructor.call(this, params);
  }

  return Character34;

})(Character34Base);

Character35 = (function(superClass) {
  extend(Character35, superClass);

  function Character35(params) {
    Character35.__super__.constructor.call(this, params);
  }

  return Character35;

})(Character35Base);

Character36 = (function(superClass) {
  extend(Character36, superClass);

  function Character36(params) {
    Character36.__super__.constructor.call(this, params);
  }

  return Character36;

})(Character36Base);

Character37 = (function(superClass) {
  extend(Character37, superClass);

  function Character37(params) {
    Character37.__super__.constructor.call(this, params);
  }

  return Character37;

})(Character37Base);

Character38 = (function(superClass) {
  extend(Character38, superClass);

  function Character38(params) {
    Character38.__super__.constructor.call(this, params);
  }

  return Character38;

})(Character38Base);

Character39 = (function(superClass) {
  extend(Character39, superClass);

  function Character39(params) {
    Character39.__super__.constructor.call(this, params);
  }

  return Character39;

})(Character39Base);

Character4 = (function(superClass) {
  extend(Character4, superClass);

  function Character4(params) {
    Character4.__super__.constructor.call(this, params);
  }

  return Character4;

})(Character4Base);

Character40 = (function(superClass) {
  extend(Character40, superClass);

  function Character40(params) {
    Character40.__super__.constructor.call(this, params);
  }

  return Character40;

})(Character40Base);

Character41 = (function(superClass) {
  extend(Character41, superClass);

  function Character41(params) {
    Character41.__super__.constructor.call(this, params);
  }

  return Character41;

})(Character41Base);

Character42 = (function(superClass) {
  extend(Character42, superClass);

  function Character42(params) {
    Character42.__super__.constructor.call(this, params);
  }

  return Character42;

})(Character42Base);

Character43 = (function(superClass) {
  extend(Character43, superClass);

  function Character43(params) {
    Character43.__super__.constructor.call(this, params);
  }

  return Character43;

})(Character43Base);

Character44 = (function(superClass) {
  extend(Character44, superClass);

  function Character44(params) {
    Character44.__super__.constructor.call(this, params);
  }

  return Character44;

})(Character44Base);

Character45 = (function(superClass) {
  extend(Character45, superClass);

  function Character45(params) {
    Character45.__super__.constructor.call(this, params);
  }

  return Character45;

})(Character45Base);

Character46 = (function(superClass) {
  extend(Character46, superClass);

  function Character46(params) {
    Character46.__super__.constructor.call(this, params);
  }

  return Character46;

})(Character46Base);

Character47 = (function(superClass) {
  extend(Character47, superClass);

  function Character47(params) {
    Character47.__super__.constructor.call(this, params);
  }

  return Character47;

})(Character47Base);

Character48 = (function(superClass) {
  extend(Character48, superClass);

  function Character48(params) {
    Character48.__super__.constructor.call(this, params);
  }

  return Character48;

})(Character48Base);

Character49 = (function(superClass) {
  extend(Character49, superClass);

  function Character49(params) {
    Character49.__super__.constructor.call(this, params);
  }

  return Character49;

})(Character49Base);

Character5 = (function(superClass) {
  extend(Character5, superClass);

  function Character5(params) {
    Character5.__super__.constructor.call(this, params);
  }

  return Character5;

})(Character5Base);

Character50 = (function(superClass) {
  extend(Character50, superClass);

  function Character50(params) {
    Character50.__super__.constructor.call(this, params);
  }

  return Character50;

})(Character50Base);

Character51 = (function(superClass) {
  extend(Character51, superClass);

  function Character51(params) {
    Character51.__super__.constructor.call(this, params);
  }

  return Character51;

})(Character51Base);

Character52 = (function(superClass) {
  extend(Character52, superClass);

  function Character52(params) {
    Character52.__super__.constructor.call(this, params);
  }

  return Character52;

})(Character52Base);

Character53 = (function(superClass) {
  extend(Character53, superClass);

  function Character53(params) {
    Character53.__super__.constructor.call(this, params);
  }

  return Character53;

})(Character53Base);

Character54 = (function(superClass) {
  extend(Character54, superClass);

  function Character54(params) {
    Character54.__super__.constructor.call(this, params);
  }

  return Character54;

})(Character54Base);

Character55 = (function(superClass) {
  extend(Character55, superClass);

  function Character55(params) {
    Character55.__super__.constructor.call(this, params);
  }

  return Character55;

})(Character55Base);

Character56 = (function(superClass) {
  extend(Character56, superClass);

  function Character56(params) {
    Character56.__super__.constructor.call(this, params);
  }

  return Character56;

})(Character56Base);

Character57 = (function(superClass) {
  extend(Character57, superClass);

  function Character57(params) {
    Character57.__super__.constructor.call(this, params);
  }

  return Character57;

})(Character57Base);

Character58 = (function(superClass) {
  extend(Character58, superClass);

  function Character58(params) {
    Character58.__super__.constructor.call(this, params);
  }

  return Character58;

})(Character58Base);

Character59 = (function(superClass) {
  extend(Character59, superClass);

  function Character59(params) {
    Character59.__super__.constructor.call(this, params);
  }

  return Character59;

})(Character59Base);

Character6 = (function(superClass) {
  extend(Character6, superClass);

  function Character6(params) {
    Character6.__super__.constructor.call(this, params);
  }

  return Character6;

})(Character6Base);

Character60 = (function(superClass) {
  extend(Character60, superClass);

  function Character60(params) {
    Character60.__super__.constructor.call(this, params);
  }

  return Character60;

})(Character60Base);

Character61 = (function(superClass) {
  extend(Character61, superClass);

  function Character61(params) {
    Character61.__super__.constructor.call(this, params);
  }

  return Character61;

})(Character61Base);

Character62 = (function(superClass) {
  extend(Character62, superClass);

  function Character62(params) {
    Character62.__super__.constructor.call(this, params);
  }

  return Character62;

})(Character62Base);

Character63 = (function(superClass) {
  extend(Character63, superClass);

  function Character63(params) {
    Character63.__super__.constructor.call(this, params);
  }

  return Character63;

})(Character63Base);

Character64 = (function(superClass) {
  extend(Character64, superClass);

  function Character64(params) {
    Character64.__super__.constructor.call(this, params);
  }

  return Character64;

})(Character64Base);

Character65 = (function(superClass) {
  extend(Character65, superClass);

  function Character65(params) {
    Character65.__super__.constructor.call(this, params);
  }

  return Character65;

})(Character65Base);

Character66 = (function(superClass) {
  extend(Character66, superClass);

  function Character66(params) {
    Character66.__super__.constructor.call(this, params);
  }

  return Character66;

})(Character66Base);

Character67 = (function(superClass) {
  extend(Character67, superClass);

  function Character67(params) {
    Character67.__super__.constructor.call(this, params);
  }

  return Character67;

})(Character67Base);

Character68 = (function(superClass) {
  extend(Character68, superClass);

  function Character68(params) {
    Character68.__super__.constructor.call(this, params);
  }

  return Character68;

})(Character68Base);

Character69 = (function(superClass) {
  extend(Character69, superClass);

  function Character69(params) {
    Character69.__super__.constructor.call(this, params);
  }

  return Character69;

})(Character69Base);

Character7 = (function(superClass) {
  extend(Character7, superClass);

  function Character7(params) {
    Character7.__super__.constructor.call(this, params);
  }

  return Character7;

})(Character7Base);

Character70 = (function(superClass) {
  extend(Character70, superClass);

  function Character70(params) {
    Character70.__super__.constructor.call(this, params);
  }

  return Character70;

})(Character70Base);

Character71 = (function(superClass) {
  extend(Character71, superClass);

  function Character71(params) {
    Character71.__super__.constructor.call(this, params);
  }

  return Character71;

})(Character71Base);

Character72 = (function(superClass) {
  extend(Character72, superClass);

  function Character72(params) {
    Character72.__super__.constructor.call(this, params);
  }

  return Character72;

})(Character72Base);

Character73 = (function(superClass) {
  extend(Character73, superClass);

  function Character73(params) {
    Character73.__super__.constructor.call(this, params);
  }

  return Character73;

})(Character73Base);

Character74 = (function(superClass) {
  extend(Character74, superClass);

  function Character74(params) {
    Character74.__super__.constructor.call(this, params);
  }

  return Character74;

})(Character74Base);

Character75 = (function(superClass) {
  extend(Character75, superClass);

  function Character75(params) {
    Character75.__super__.constructor.call(this, params);
  }

  return Character75;

})(Character75Base);

Character76 = (function(superClass) {
  extend(Character76, superClass);

  function Character76(params) {
    Character76.__super__.constructor.call(this, params);
  }

  return Character76;

})(Character76Base);

Character77 = (function(superClass) {
  extend(Character77, superClass);

  function Character77(params) {
    Character77.__super__.constructor.call(this, params);
  }

  return Character77;

})(Character77Base);

Character78 = (function(superClass) {
  extend(Character78, superClass);

  function Character78(params) {
    Character78.__super__.constructor.call(this, params);
  }

  return Character78;

})(Character78Base);

Character79 = (function(superClass) {
  extend(Character79, superClass);

  function Character79(params) {
    Character79.__super__.constructor.call(this, params);
  }

  return Character79;

})(Character79Base);

Character8 = (function(superClass) {
  extend(Character8, superClass);

  function Character8(params) {
    Character8.__super__.constructor.call(this, params);
  }

  return Character8;

})(Character8Base);

Character80 = (function(superClass) {
  extend(Character80, superClass);

  function Character80(params) {
    Character80.__super__.constructor.call(this, params);
  }

  return Character80;

})(Character80Base);

Character81 = (function(superClass) {
  extend(Character81, superClass);

  function Character81(params) {
    Character81.__super__.constructor.call(this, params);
  }

  return Character81;

})(Character81Base);

Character82 = (function(superClass) {
  extend(Character82, superClass);

  function Character82(params) {
    Character82.__super__.constructor.call(this, params);
  }

  return Character82;

})(Character82Base);

Character83 = (function(superClass) {
  extend(Character83, superClass);

  function Character83(params) {
    Character83.__super__.constructor.call(this, params);
  }

  return Character83;

})(Character83Base);

Character84 = (function(superClass) {
  extend(Character84, superClass);

  function Character84(params) {
    Character84.__super__.constructor.call(this, params);
  }

  return Character84;

})(Character84Base);

Character85 = (function(superClass) {
  extend(Character85, superClass);

  function Character85(params) {
    Character85.__super__.constructor.call(this, params);
  }

  return Character85;

})(Character85Base);

Character86 = (function(superClass) {
  extend(Character86, superClass);

  function Character86(params) {
    Character86.__super__.constructor.call(this, params);
  }

  return Character86;

})(Character86Base);

Character87 = (function(superClass) {
  extend(Character87, superClass);

  function Character87(params) {
    Character87.__super__.constructor.call(this, params);
  }

  return Character87;

})(Character87Base);

Character88 = (function(superClass) {
  extend(Character88, superClass);

  function Character88(params) {
    Character88.__super__.constructor.call(this, params);
  }

  return Character88;

})(Character88Base);

Character89 = (function(superClass) {
  extend(Character89, superClass);

  function Character89(params) {
    Character89.__super__.constructor.call(this, params);
  }

  return Character89;

})(Character89Base);

Character9 = (function(superClass) {
  extend(Character9, superClass);

  function Character9(params) {
    Character9.__super__.constructor.call(this, params);
  }

  return Character9;

})(Character9Base);

Character90 = (function(superClass) {
  extend(Character90, superClass);

  function Character90(params) {
    Character90.__super__.constructor.call(this, params);
  }

  return Character90;

})(Character90Base);

Character91 = (function(superClass) {
  extend(Character91, superClass);

  function Character91(params) {
    Character91.__super__.constructor.call(this, params);
  }

  return Character91;

})(Character91Base);

Character92 = (function(superClass) {
  extend(Character92, superClass);

  function Character92(params) {
    Character92.__super__.constructor.call(this, params);
  }

  return Character92;

})(Character92Base);

Character93 = (function(superClass) {
  extend(Character93, superClass);

  function Character93(params) {
    Character93.__super__.constructor.call(this, params);
  }

  return Character93;

})(Character93Base);

Character94 = (function(superClass) {
  extend(Character94, superClass);

  function Character94(params) {
    Character94.__super__.constructor.call(this, params);
  }

  return Character94;

})(Character94Base);

Character95 = (function(superClass) {
  extend(Character95, superClass);

  function Character95(params) {
    Character95.__super__.constructor.call(this, params);
  }

  return Character95;

})(Character95Base);

Character96 = (function(superClass) {
  extend(Character96, superClass);

  function Character96(params) {
    Character96.__super__.constructor.call(this, params);
  }

  return Character96;

})(Character96Base);

Character97 = (function(superClass) {
  extend(Character97, superClass);

  function Character97(params) {
    Character97.__super__.constructor.call(this, params);
  }

  return Character97;

})(Character97Base);

Character98 = (function(superClass) {
  extend(Character98, superClass);

  function Character98(params) {
    Character98.__super__.constructor.call(this, params);
  }

  return Character98;

})(Character98Base);

Character99 = (function(superClass) {
  extend(Character99, superClass);

  function Character99(params) {
    Character99.__super__.constructor.call(this, params);
  }

  return Character99;

})(Character99Base);

window.CharacterList = {
  "1": Character1,
  "2": Character2,
  "3": Character3,
  "4": Character4,
  "5": Character5,
  "6": Character6,
  "7": Character7,
  "8": Character8,
  "9": Character9,
  "10": Character10,
  "11": Character11,
  "12": Character12,
  "13": Character13,
  "14": Character14,
  "15": Character15,
  "16": Character16,
  "17": Character17,
  "18": Character18,
  "19": Character19,
  "20": Character20,
  "21": Character21,
  "22": Character22,
  "23": Character23,
  "24": Character24,
  "25": Character25,
  "26": Character26,
  "27": Character27,
  "28": Character28,
  "29": Character29,
  "30": Character30,
  "31": Character31,
  "32": Character32,
  "33": Character33,
  "34": Character34,
  "35": Character35,
  "36": Character36,
  "37": Character37,
  "38": Character38,
  "39": Character39,
  "40": Character40,
  "41": Character41,
  "42": Character42,
  "43": Character43,
  "44": Character44,
  "45": Character45,
  "46": Character46,
  "47": Character47,
  "48": Character48,
  "49": Character49,
  "50": Character50,
  "51": Character51,
  "52": Character52,
  "53": Character53,
  "54": Character54,
  "55": Character55,
  "56": Character56,
  "57": Character57,
  "58": Character58,
  "59": Character59,
  "60": Character60,
  "61": Character61,
  "62": Character62,
  "63": Character63,
  "64": Character64,
  "65": Character65,
  "66": Character66,
  "67": Character67,
  "68": Character68,
  "69": Character69,
  "70": Character70,
  "71": Character71,
  "72": Character72,
  "73": Character73,
  "74": Character74,
  "75": Character75,
  "76": Character76,
  "77": Character77,
  "78": Character78,
  "79": Character79,
  "80": Character80,
  "81": Character81,
  "82": Character82,
  "83": Character83,
  "84": Character84,
  "85": Character85,
  "86": Character86,
  "87": Character87,
  "88": Character88,
  "89": Character89,
  "90": Character90,
  "91": Character91,
  "92": Character92,
  "93": Character93,
  "94": Character94,
  "95": Character95,
  "96": Character96,
  "97": Character97,
  "98": Character98,
  "99": Character99,
  "100": Character100,
  "101": Character101,
  "102": Character102,
  "103": Character103,
  "104": Character104,
  "105": Character105,
  "106": Character106,
  "107": Character107,
  "108": Character108,
  "109": Character109,
  "110": Character110,
  "111": Character111,
  "112": Character112,
  "113": Character113,
  "114": Character114,
  "115": Character115,
  "116": Character116,
  "117": Character117,
  "118": Character118,
  "119": Character119,
  "120": Character120,
  "121": Character121,
  "122": Character122,
  "123": Character123,
  "124": Character124,
  "125": Character125,
  "126": Character126,
  "127": Character127,
  "128": Character128,
  "129": Character129,
  "130": Character130,
  "131": Character131,
  "132": Character132,
  "133": Character133,
  "134": Character134,
  "135": Character135,
  "136": Character136,
  "137": Character137,
  "138": Character138,
  "139": Character139,
  "140": Character140,
  "141": Character141,
  "142": Character142,
  "143": Character143,
  "144": Character144,
  "145": Character145,
  "146": Character146,
  "147": Character147,
  "148": Character148,
  "149": Character149,
  "150": Character150,
  "151": Character151,
  "152": Character152,
  "153": Character153,
  "154": Character154,
  "155": Character155,
  "156": Character156,
  "157": Character157,
  "158": Character158,
  "159": Character159,
  "160": Character160,
  "161": Character161,
  "162": Character162,
  "163": Character163,
  "164": Character164,
  "165": Character165,
  "166": Character166,
  "167": Character167,
  "168": Character168,
  "169": Character169,
  "170": Character170,
  "171": Character171,
  "172": Character172,
  "173": Character173,
  "174": Character174,
  "175": Character175,
  "176": Character176,
  "177": Character177,
  "178": Character178,
  "179": Character179,
  "180": Character180,
  "181": Character181,
  "182": Character182,
  "183": Character183,
  "184": Character184,
  "185": Character185,
  "186": Character186,
  "187": Character187,
  "188": Character188,
  "189": Character189,
  "190": Character190,
  "191": Character191,
  "192": Character192,
  "193": Character193,
  "194": Character194,
  "195": Character195,
  "196": Character196,
  "197": Character197,
  "198": Character198,
  "199": Character199,
  "200": Character200,
  "201": Character201,
  "202": Character202,
  "203": Character203,
  "204": Character204
};

CharacterPalletManager = (function() {
  function CharacterPalletManager() {}

  CharacterPalletManager.ID = 'character_pallet';

  CharacterPalletManager.SIZE_X = 400;

  CharacterPalletManager.SIZE_Y = 600;

  CharacterPalletManager.characters = [];

  CharacterPalletManager.panels = [];

  CharacterPalletManager.init = function(parentElement, posX, posY) {
    this.parentElement = parentElement;
    this.posX = posX;
    this.posY = posY;
    return this.divObject = $('<div>').attr('id', this.ID).addClass('no_display').css({
      width: this.SIZE_X,
      height: this.SIZE_Y,
      left: this.posX,
      top: this.posY
    }).appendTo(this.parentElement);
  };

  CharacterPalletManager.show = function() {
    return $(this.divObject).removeClass('no_display');
  };

  CharacterPalletManager.hide = function() {
    return $(this.divObject).addClass('no_display');
  };

  CharacterPalletManager.addCharacter = function(characterObject) {
    return this.characters.push(characterObject);
  };

  CharacterPalletManager.draw = function() {
    var c, index, j, len, ref, results, top;
    this.characters.sort(function(a, b) {
      return Number(a.constructor.characterId) - Number(b.constructor.characterId);
    });
    this.panels = [];
    $('#' + this.ID + ' > .' + Panel.CLASSNAME).remove();
    ref = this.characters;
    results = [];
    for (index = j = 0, len = ref.length; j < len; index = ++j) {
      c = ref[index];
      top = index * Panel.SIZE_Y;
      results.push(this.panels.push(new Panel(this.divObject, c, top, 0, true)));
    }
    return results;
  };

  CharacterPalletManager.redraw = function(object) {
    if (object == null) {
      object = null;
    }
    return $.each(this.panels, function() {
      if (object === null || this.object !== null && object.getId() === this.object.getId()) {
        return this.draw();
      }
    });
  };

  CharacterPalletManager.pickCharacter = function(characterObject) {
    GameManager.flags.pickedCharacterObject = characterObject;
    FieldManager.removeAllTempObject(characterObject);
    GameManager.flags.pickedCharacterElement = $('<img>').addClass('picked_character').css({
      width: Cell.SIZE_X
    }).attr({
      src: characterObject.getBaseImage()
    }).appendTo(GameManager.gameElement);
    return GameManager.followPickedCharacterElement();
  };

  return CharacterPalletManager;

})();

EnemyBase = (function(superClass) {
  extend(EnemyBase, superClass);

  function EnemyBase(params) {
    EnemyBase.__super__.constructor.call(this, ObjectBase.OBJECT_TYPE.ENEMY);
    this.level = params.level;
    this.hp = params.hp;
    this.inField = params.inField;
    this.moved = params.moved;
  }

  EnemyBase.prototype.getId = function() {
    return this.constructor.characterId;
  };

  EnemyBase.prototype.getName = function() {
    return this.constructor.characterName;
  };

  EnemyBase.prototype.isInField = function() {
    return this.inField;
  };

  EnemyBase.prototype.setInField = function(isInField) {
    this.inField = !!isInField;
    return CharacterPalletManager.redraw(this);
  };

  EnemyBase.prototype.isMoved = function() {
    return this.moved;
  };

  EnemyBase.prototype.setMoved = function(bool) {
    return this.moved = !!bool;
  };

  return EnemyBase;

})(ObjectBase);

Enemy1Base = (function(superClass) {
  extend(Enemy1Base, superClass);

  Enemy1Base.characterId = 1;

  Enemy1Base.characterName = "きゃんきゃん";

  Enemy1Base.images = ["./img/enemy/1/1005010301_001.png", "./img/enemy/1/1005010301_003.png"];

  Enemy1Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Enemy1Base.attackBase = 18;

  Enemy1Base.hpBase = 3;

  Enemy1Base.pDefBase = 1;

  Enemy1Base.mDefBase = 3;

  Enemy1Base.moveBase = 4;

  Enemy1Base.rangeBase = 1;

  Enemy1Base.hitRateBase = 95;

  Enemy1Base.dodgeRateBase = 10;

  Enemy1Base.appearance = 1;

  Enemy1Base.expRate = 2;

  Enemy1Base.abilityName = "なし";

  Enemy1Base.abilityDesc = "なし";

  function Enemy1Base(params) {
    Enemy1Base.__super__.constructor.call(this, params);
  }

  return Enemy1Base;

})(EnemyBase);

Enemy2Base = (function(superClass) {
  extend(Enemy2Base, superClass);

  Enemy2Base.characterId = 2;

  Enemy2Base.characterName = "ミートボール";

  Enemy2Base.images = ["./img/enemy/2/1036010301_001.png", "./img/enemy/2/1036010301_003.png"];

  Enemy2Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Enemy2Base.attackBase = 17;

  Enemy2Base.hpBase = 2;

  Enemy2Base.pDefBase = 1;

  Enemy2Base.mDefBase = 3;

  Enemy2Base.moveBase = 4;

  Enemy2Base.rangeBase = 1;

  Enemy2Base.hitRateBase = 95;

  Enemy2Base.dodgeRateBase = 10;

  Enemy2Base.appearance = 1;

  Enemy2Base.expRate = 2;

  Enemy2Base.abilityName = "なし";

  Enemy2Base.abilityDesc = "なし";

  function Enemy2Base(params) {
    Enemy2Base.__super__.constructor.call(this, params);
  }

  return Enemy2Base;

})(EnemyBase);

Enemy3Base = (function(superClass) {
  extend(Enemy3Base, superClass);

  Enemy3Base.characterId = 3;

  Enemy3Base.characterName = "ピクシーFOX";

  Enemy3Base.images = ["./img/enemy/3/1082010301_001.png", "./img/enemy/3/1082010301_003.png"];

  Enemy3Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Enemy3Base.attackBase = 18;

  Enemy3Base.hpBase = 3;

  Enemy3Base.pDefBase = 6;

  Enemy3Base.mDefBase = 4;

  Enemy3Base.moveBase = 4;

  Enemy3Base.rangeBase = 1;

  Enemy3Base.hitRateBase = 95;

  Enemy3Base.dodgeRateBase = 10;

  Enemy3Base.appearance = 1;

  Enemy3Base.expRate = 2;

  Enemy3Base.abilityName = "なし";

  Enemy3Base.abilityDesc = "なし";

  function Enemy3Base(params) {
    Enemy3Base.__super__.constructor.call(this, params);
  }

  return Enemy3Base;

})(EnemyBase);

Enemy4Base = (function(superClass) {
  extend(Enemy4Base, superClass);

  Enemy4Base.characterId = 4;

  Enemy4Base.characterName = "マジスコ";

  Enemy4Base.images = ["./img/enemy/4/1084010301_001.png", "./img/enemy/4/1084010301_003.png"];

  Enemy4Base.attackTypeBase = ObjectBase.ATTACK_TYPE.MAGIC;

  Enemy4Base.attackBase = 19;

  Enemy4Base.hpBase = 3;

  Enemy4Base.pDefBase = 7;

  Enemy4Base.mDefBase = 4;

  Enemy4Base.moveBase = 3;

  Enemy4Base.rangeBase = 4;

  Enemy4Base.hitRateBase = 95;

  Enemy4Base.dodgeRateBase = 10;

  Enemy4Base.appearance = 1;

  Enemy4Base.expRate = 2;

  Enemy4Base.abilityName = "なし";

  Enemy4Base.abilityDesc = "なし";

  function Enemy4Base(params) {
    Enemy4Base.__super__.constructor.call(this, params);
  }

  return Enemy4Base;

})(EnemyBase);

Enemy5Base = (function(superClass) {
  extend(Enemy5Base, superClass);

  Enemy5Base.characterId = 5;

  Enemy5Base.characterName = "ばくだんいわ";

  Enemy5Base.images = ["./img/enemy/5/1.png"];

  Enemy5Base.attackTypeBase = ObjectBase.ATTACK_TYPE.PHYSIC;

  Enemy5Base.attackBase = 0;

  Enemy5Base.hpBase = 3;

  Enemy5Base.pDefBase = 8;

  Enemy5Base.mDefBase = 8;

  Enemy5Base.moveBase = 0;

  Enemy5Base.rangeBase = 0;

  Enemy5Base.hitRateBase = 95;

  Enemy5Base.dodgeRateBase = 10;

  Enemy5Base.appearance = 1;

  Enemy5Base.expRate = 2;

  Enemy5Base.abilityName = "なし";

  Enemy5Base.abilityDesc = "なし";

  function Enemy5Base(params) {
    Enemy5Base.__super__.constructor.call(this, params);
  }

  return Enemy5Base;

})(EnemyBase);

Enemy1 = (function(superClass) {
  extend(Enemy1, superClass);

  function Enemy1(params) {
    Enemy1.__super__.constructor.call(this, params);
  }

  return Enemy1;

})(Enemy1Base);

Enemy2 = (function(superClass) {
  extend(Enemy2, superClass);

  function Enemy2(params) {
    Enemy2.__super__.constructor.call(this, params);
  }

  return Enemy2;

})(Enemy2Base);

Enemy3 = (function(superClass) {
  extend(Enemy3, superClass);

  function Enemy3(params) {
    Enemy3.__super__.constructor.call(this, params);
  }

  return Enemy3;

})(Enemy3Base);

Enemy4 = (function(superClass) {
  extend(Enemy4, superClass);

  function Enemy4(params) {
    Enemy4.__super__.constructor.call(this, params);
  }

  return Enemy4;

})(Enemy4Base);

Enemy5 = (function(superClass) {
  extend(Enemy5, superClass);

  function Enemy5(params) {
    Enemy5.__super__.constructor.call(this, params);
  }

  return Enemy5;

})(Enemy5Base);

window.EnemyList = {
  "1": Enemy1,
  "2": Enemy2,
  "3": Enemy3,
  "4": Enemy4,
  "5": Enemy5
};

EnvManager = (function() {
  function EnvManager() {}

  EnvManager.ID = 'env';

  EnvManager.SIZE_X = 200;

  EnvManager.SIZE_Y = 120;

  EnvManager.exp = 0;

  EnvManager.floor = 1;

  EnvManager.life = 5;

  EnvManager.init = function(parentElement) {
    this.parentElement = parentElement;
    this.divObject = $('<div>').attr('id', this.ID).css({
      width: this.SIZE_X,
      height: this.SIZE_Y
    });
    this.lifeObject = $('<div>').css({
      left: 0,
      top: 2,
      height: 35,
      width: this.SIZE_X - 10
    }).appendTo(this.divObject);
    this.expObject = $('<div>').css({
      left: 0,
      top: 40,
      height: 35,
      width: this.SIZE_X - 10
    }).appendTo(this.divObject);
    this.floorObject = $('<div>').css({
      left: 0,
      top: 77,
      height: 35,
      width: this.SIZE_X - 10
    }).appendTo(this.divObject);
    this.draw();
    return this.divObject.appendTo(this.parentElement);
  };

  EnvManager.draw = function() {
    this.lifeObject.html('&#9829;' + this.life);
    this.expObject.html('EXP:' + this.exp);
    return this.floorObject.html('' + this.floor + '階');
  };

  EnvManager.increaseExp = function(amount) {
    if (amount < 1) {
      return false;
    }
    this.exp += amount;
    this.draw();
    return this.exp;
  };

  EnvManager.decreaseExp = function(amount) {
    if (amount < 1) {
      return false;
    }
    if (this.exp < amount) {
      return false;
    }
    this.exp -= amount;
    this.draw();
    return this.exp;
  };

  EnvManager.getExp = function() {
    return this.exp;
  };

  EnvManager.setExp = function(exp) {
    if (exp < 0) {
      return false;
    }
    this.exp = exp;
    this.draw();
    return this.exp;
  };

  EnvManager.increaseFloor = function(amount) {
    if (amount == null) {
      amount = 1;
    }
    if (amount < 1) {
      return false;
    }
    this.floor += amount;
    this.draw();
    return this.floor;
  };

  EnvManager.decreaseFloor = function(amount) {
    if (amount < 1) {
      return false;
    }
    if (this.floor - amount < 1) {
      return false;
    }
    this.floor -= amount;
    if (this.floor < 1) {
      this.floor = 1;
    }
    this.draw();
    return this.floor;
  };

  EnvManager.getFloor = function() {
    return this.floor;
  };

  EnvManager.setFloor = function(floor) {
    if (floor < 1) {
      return false;
    }
    this.floor = floor;
    this.draw();
    return this.floor;
  };

  EnvManager.increaseLife = function(amount) {
    if (amount == null) {
      amount = 1;
    }
    if (amount < 1) {
      return false;
    }
    this.life += amount;
    this.draw();
    return this.life;
  };

  EnvManager.decreaseLife = function(amount) {
    if (amount == null) {
      amount = 1;
    }
    if (amount < 1) {
      return false;
    }
    if (this.life < amount) {
      return false;
    }
    this.life -= amount;
    if (this.life < 0) {
      this.life = 0;
    }
    this.draw();
    return this.life;
  };

  EnvManager.getLife = function() {
    return this.life;
  };

  EnvManager.setLife = function(life) {
    if (life < 0) {
      return false;
    }
    this.life = life;
    this.draw();
    return this.life;
  };

  return EnvManager;

})();

FieldManager = (function() {
  function FieldManager() {}

  FieldManager.ID = 'field';

  FieldManager.CELL_X = 18;

  FieldManager.CELL_Y = 8;

  FieldManager.BORDER_SIZE = 1;

  FieldManager.MOVE_SPEED = 50;

  FieldManager.ENEMY_APPEAR_WIDTH = 5;

  FieldManager.divObject = null;

  FieldManager.cells = [];

  FieldManager.cellAnimationTimer = false;

  FieldManager.init = function(parentElement) {
    var j, l, o, ref, ref1, ref2, x, y;
    this.parentElement = parentElement;
    this.visibleObject = $('<div>').attr('id', 'field_visible').css({
      width: this.CELL_X * Cell.SIZE_X + this.BORDER_SIZE * (this.CELL_X + 1),
      height: this.CELL_Y * Cell.SIZE_Y + this.BORDER_SIZE * (this.CELL_Y + 1) + 50
    }).appendTo(this.parentElement);
    this.divObject = $('<div>').attr('id', this.ID).css({
      width: this.CELL_X * Cell.SIZE_X + this.BORDER_SIZE * (this.CELL_X + 1),
      height: this.CELL_Y * Cell.SIZE_Y + this.BORDER_SIZE * (this.CELL_Y + 1)
    }).appendTo(this.visibleObject);
    this.cells = [];
    for (x = j = 0, ref = this.CELL_X; 0 <= ref ? j < ref : j > ref; x = 0 <= ref ? ++j : --j) {
      this.cells[x] = [];
      for (y = l = 0, ref1 = this.CELL_Y; 0 <= ref1 ? l < ref1 : l > ref1; y = 0 <= ref1 ? ++l : --l) {
        this.cells[x][y] = new Cell(this.divObject, x, y, this.BORDER_SIZE);
      }
    }
    this.nextField = [];
    for (y = o = 0, ref2 = this.CELL_Y; 0 <= ref2 ? o < ref2 : o > ref2; y = 0 <= ref2 ? ++o : --o) {
      this.nextField[y] = null;
    }
    return this.startCellAnimation();
  };

  FieldManager.removeAllTempObject = function(characterObject) {
    if (characterObject === null) {
      return;
    }
    return $.each(this.cells, function() {
      return $.each(this, function() {
        if (this.tempObject !== null && this.tempObject.isCharacterObject() && this.tempObject.getId() === characterObject.getId()) {
          this.tempObject.setInField(false);
          this.tempObject = null;
          return this.draw();
        }
      });
    });
  };

  FieldManager.removeAllWayStack = function() {
    return $.each(this.cells, function() {
      return $.each(this, function() {
        return this.wayStack = null;
      });
    });
  };

  FieldManager.removeAllKnockout = function() {
    return $.each(this.cells, function() {
      return $.each(this, function() {
        return this.knockout = null;
      });
    });
  };

  FieldManager.resetAllMoved = function() {
    return $.each(this.cells, function() {
      return $.each(this, function() {
        if (this.object !== null && (this.object.isCharacterObject() || this.object.isEnemyObject())) {
          this.object.setMoved(false);
        }
        return true;
      });
    });
  };

  FieldManager.drawMovable = function() {
    return $.each(this.cells, function() {
      return $.each(this, function() {
        return this.drawMovable();
      });
    });
  };

  FieldManager.drawKnockout = function() {
    return $.each(this.cells, function() {
      return $.each(this, function() {
        return this.drawKnockout();
      });
    });
  };

  FieldManager.drawFin = function() {
    return $.each(this.cells, function() {
      return $.each(this, function() {
        return this.drawFin();
      });
    });
  };

  FieldManager.show = function() {
    return $(this.divObject).removeClass('no_display');
  };

  FieldManager.hide = function() {
    return $(this.divObject).addClass('no_display');
  };

  FieldManager.startCellAnimation = function() {
    FieldManager.stopObjectAnimation();
    return FieldManager.cellAnimationTimer = setInterval(function() {
      if (!GameManager.flags.isCellObjectAnimation) {
        return;
      }
      return $.each(FieldManager.cells, function() {
        return $.each(this, function() {
          return this.stepObjectAnimation();
        });
      });
    }, Cell.OBJECT_ANIMATION_MSEC);
  };

  FieldManager.stopObjectAnimation = function() {
    if (FieldManager.cellAnimationTimer !== false) {
      return clearInterval(FieldManager.cellAnimationTimer);
    }
  };

  FieldManager.moveObject = function(startCell, endCell, callback) {
    var charaObject, finish, showHide, wayStack;
    if (callback == null) {
      callback = null;
    }
    GameManager.changeControllable(false);
    if (startCell === endCell) {
      if (callback instanceof Function) {
        callback();
      }
      return;
    }
    wayStack = endCell.wayStack;
    FieldManager.removeAllWayStack();
    FieldManager.removeAllKnockout();
    FieldManager.drawMovable();
    FieldManager.drawKnockout();
    charaObject = startCell.object;
    finish = function() {
      var attackableCell, attackables, j, len;
      GameManager.flags.movePickCell = null;
      GameManager.flags.moveToCell = [startCell, endCell];
      attackables = FieldManager.getAttackableCellsByCell(endCell);
      if (attackables.length === 0) {
        GameManager.flags.waitAttackCell = null;
        if (endCell.object === null) {
          console.log(endCell);
        }
        endCell.object.setMoved(true);
      } else {
        GameManager.flags.waitAttackCell = endCell;
        for (j = 0, len = attackables.length; j < len; j++) {
          attackableCell = attackables[j];
          attackableCell.knockout = endCell;
        }
        FieldManager.drawKnockout();
      }
      GameManager.flags.movePickCell = null;
      endCell.draw();
      if (callback instanceof Function) {
        return callback();
      }
    };
    showHide = function(prevCell, wayStack) {
      var nextCell;
      if (wayStack.length === 0) {
        return finish();
      } else {
        nextCell = wayStack.shift();
        prevCell.setObject(null);
        nextCell.setObject(charaObject);
        prevCell.draw();
        nextCell.draw();
        return setTimeout(showHide.bind(null, nextCell, wayStack), FieldManager.MOVE_SPEED);
      }
    };
    setTimeout(showHide.bind(null, startCell, wayStack), FieldManager.MOVE_SPEED);
    return true;
  };

  FieldManager.getAttackableCellsByCell = function(cell) {
    return this.getAttackableCells(cell.object, cell.xIndex, cell.yIndex);
  };

  FieldManager.getAttackableCells = function(object, x, y) {
    var body, dist, j, l, len, len1, ref, res, targetCell, targetType, xIndex, yIndex;
    targetType = object === null ? [] : object.isCharacterObject() ? [ObjectBase.OBJECT_TYPE.ENEMY] : object.isEnemyObject() ? [ObjectBase.OBJECT_TYPE.CHARACTER] : [];
    if (targetType.length <= 0) {
      return [];
    }
    res = [];
    ref = this.cells;
    for (xIndex = j = 0, len = ref.length; j < len; xIndex = ++j) {
      body = ref[xIndex];
      for (yIndex = l = 0, len1 = body.length; l < len1; yIndex = ++l) {
        targetCell = body[yIndex];
        dist = Math.abs(x - targetCell.xIndex) + Math.abs(y - targetCell.yIndex);
        if (dist <= object.getRange()) {
          if (targetCell.object !== null && Utl.inArray(targetCell.object.getObjectType(), targetType)) {
            res.push(targetCell);
          }
        }
      }
    }
    return res;
  };

  FieldManager.getMovableMap = function(cell) {
    var allCellChecked, body, j, l, len, len1, len2, loopCount, movableMap, o, ref, ref1, ref2, ref3, wayStack, x, xPlus, y, yPlus;
    movableMap = Utl.array2dFill(this.CELL_X, this.CELL_Y, null);
    movableMap[cell.xIndex][cell.yIndex] = [];
    loopCount = 0;
    while (!allCellChecked && (loopCount <= this.CELL_X * this.CELL_Y)) {
      loopCount++;
      allCellChecked = true;
      for (x = j = 0, len = movableMap.length; j < len; x = ++j) {
        body = movableMap[x];
        for (y = l = 0, len1 = body.length; l < len1; y = ++l) {
          wayStack = body[y];
          if (wayStack === null) {
            if (this.cells[x][y].isEnterable()) {
              allCellChecked = false;
            }
          } else {
            ref = [[-1, 0], [1, 0], [0, -1], [0, 1]];
            for (o = 0, len2 = ref.length; o < len2; o++) {
              ref1 = ref[o], xPlus = ref1[0], yPlus = ref1[1];
              if (!((0 <= (ref2 = x + xPlus) && ref2 < this.cells.length))) {
                continue;
              }
              if (!((0 <= (ref3 = y + yPlus) && ref3 < this.cells[0].length))) {
                continue;
              }
              if (FieldManager.cells[x + xPlus][y + yPlus].isEnterable() && (movableMap[x + xPlus][y + yPlus] === null || wayStack.length + 1 < movableMap[x + xPlus][y + yPlus].length)) {
                movableMap[x + xPlus][y + yPlus] = wayStack.concat([this.cells[x + xPlus][y + yPlus]]);
              }
            }
          }
        }
      }
    }
    return movableMap;
  };

  FieldManager.randomEnemyAppear = function(callback) {
    var cnt, enemyAmount, flushCount, isNotEmpty, j, putEnemy, ref, res;
    if (callback == null) {
      callback = null;
    }
    GameManager.flags.isCellObjectAnimation = false;
    enemyAmount = Utl.gacha([[0, 10], [1, 20], [2, 50], [3, 20], [4, 20], [5, 10], [6, 10]]);
    flushCount = 5;
    putEnemy = (function(_this) {
      return function(enemyObject) {
        var cell, cnt, emptyCells, j, l, len, o, ref, ref1, ref2, ref3, targetCell, x;
        if (enemyObject === null) {
          return false;
        }
        emptyCells = [];
        for (x = j = ref = _this.cells.length - _this.ENEMY_APPEAR_WIDTH, ref1 = _this.cells.length; ref <= ref1 ? j < ref1 : j > ref1; x = ref <= ref1 ? ++j : --j) {
          ref2 = _this.cells[x];
          for (l = 0, len = ref2.length; l < len; l++) {
            cell = ref2[l];
            if (cell.object === null) {
              emptyCells.push(cell);
            }
          }
        }
        if (emptyCells.length <= 0) {
          return false;
        }
        targetCell = Utl.shuffle(emptyCells).pop();
        targetCell.setObject(enemyObject);
        targetCell.draw();
        for (cnt = o = 0, ref3 = flushCount; 0 <= ref3 ? o < ref3 : o > ref3; cnt = 0 <= ref3 ? ++o : --o) {
          setTimeout(targetCell.showObject.bind(targetCell, false), cnt * 100 + 50);
          setTimeout(targetCell.showObject.bind(targetCell, true), cnt * 100 + 100);
        }
        return true;
      };
    })(this);
    isNotEmpty = false;
    for (cnt = j = 0, ref = enemyAmount; 0 <= ref ? j < ref : j > ref; cnt = 0 <= ref ? ++j : --j) {
      res = putEnemy(GameManager.getEnemyObject());
    }
    setTimeout((function(_this) {
      return function() {
        GameManager.flags.isCellObjectAnimation = true;
        return callback();
      };
    })(this), (flushCount + 1) * 100);
    return true;
  };

  FieldManager.checkDeath = function(callback) {
    var body, c, j, l, len, len1, noExistDeath, ref;
    if (callback == null) {
      callback = null;
    }
    noExistDeath = true;
    ref = FieldManager.cells;
    for (j = 0, len = ref.length; j < len; j++) {
      body = ref[j];
      for (l = 0, len1 = body.length; l < len1; l++) {
        c = body[l];
        if (c.object !== null && c.object.getHp() <= 0) {
          if (c.object.isCharacterObject()) {
            return c.showPopover(c.object.getTextOnDeath(), 2000, function() {
              c.object = null;
              c.draw();
              return FieldManager.checkDeath(callback);
            });
          } else if (c.object.isEnemyObject()) {
            EnvManager.increaseExp(c.object.getExp());
            c.object = null;
            c.draw();
            FieldManager.checkDeath(callback);
          }
        }
      }
    }
    return callback();
  };

  FieldManager.generateNextField = function() {
    var GACHA_ORDER, cell, j, nextField, ref, yIndex;
    GACHA_ORDER = [['ENEMY', 100], ['EMPTY', 100]];
    nextField = [];
    for (yIndex = j = 0, ref = this.CELL_Y; 0 <= ref ? j < ref : j > ref; yIndex = 0 <= ref ? ++j : --j) {
      cell = new Cell(this.divObject, this.CELL_X, yIndex, this.BORDER_SIZE);
      switch (Utl.gacha(GACHA_ORDER)) {
        case 'ENEMY':
          cell.object = GameManager.getEnemyObject(EnvManager.getFloor() + 1);
          break;
        case 'EMPTY':
      }
      nextField.push(cell);
      cell.draw();
    }
    return nextField;
  };

  return FieldManager;

})();

GameManager = (function() {
  function GameManager() {}

  GameManager.DEBUG_CONFIG = {
    DISABLE_RIGHT_CLICK_MENU: false,
    START_EXP: 10000
  };

  GameManager.ID = 'game';

  GameManager.mousePos = {
    x: 0,
    y: 0
  };

  GameManager.gameElement = null;

  GameManager.characters = [];

  GameManager.enemy = [];

  GameManager.initialized = {
    characters: false,
    field: false,
    menu: false,
    enemys: false,
    levelup: false,
    env: false
  };

  GameManager.flags = {
    controllable: true,
    isCellObjectAnimation: true,
    isEnableCharacterPick: true,
    isCharacterPick: false,
    pickedCharacterObject: null,
    pickedCharacterElement: null,
    isEnableBattle: true,
    isBattle: false,
    movePickCell: null,
    moveToCell: null,
    waitAttackCell: null,
    isEnableTurnEnd: true,
    isEnableLevelup: true,
    isEnableWalk: true,
    isWalkInThisTurn: false
  };

  GameManager.POSITION = {
    BATTLE: {
      menu: [0, 0],
      character_pallet: null,
      field_visible: [0, 0],
      left_info: [200, 630],
      right_info: [600, 630],
      env: [0, 630],
      levelup: null
    },
    CHARACTER_PICK: {
      menu: [0, 0],
      character_pallet: [140, 50],
      field_visible: [0, 0],
      left_info: null,
      right_info: null,
      env: [0, 630],
      levelup: null
    },
    LEVELUP: {
      menu: [0, 0],
      character_pallet: null,
      field_visible: [0, 0],
      left_info: null,
      right_info: null,
      env: [0, 630],
      levelup: [0, 50]
    }
  };

  GameManager.ANIMATION_MSEC = 500;

  GameManager.onMouseMiddleDown = function(evt) {
    if (!this.isControllable()) {
      return;
    }
    return true;
  };

  GameManager.onMouseMiddleUp = function(evt) {
    if (!this.isControllable()) {
      return;
    }
    return true;
  };

  GameManager.onMouseRightDown = function(evt) {
    if (!this.isControllable()) {
      return;
    }
    return true;
  };

  GameManager.onMouseRightUp = function(evt) {
    if (!this.isControllable()) {
      return;
    }
    return true;
  };

  GameManager.onMouseLeftDown = function(evt) {
    if (!this.isControllable()) {
      return;
    }
    return true;
  };

  GameManager.onMouseLeftUp = function(evt) {
    if (!this.isControllable()) {
      return;
    }
    console.log('game mouseup');
    if (this.flags.pickedCharacterObject !== null) {
      this.flags.pickedCharacterObject = null;
    }
    if (this.flags.pickedCharacterElement !== null) {
      this.flags.pickedCharacterElement.remove();
      this.flags.pickedCharacterElement = null;
    }
    return true;
  };

  GameManager.onMouseLeave = function(evt) {
    if (!this.isControllable()) {
      return;
    }
    return true;
  };

  GameManager.onMouseMove = function(evt) {
    var ref;
    if (!this.isControllable()) {
      return;
    }
    ref = Utl.e2localPos(evt), this.mousePos.x = ref[0], this.mousePos.y = ref[1];
    if (this.flags.pickedCharacterElement !== null) {
      this.followPickedCharacterElement(evt);
    }
    return true;
  };

  GameManager.followPickedCharacterElement = function(evt) {
    if (this.flags.pickedCharacterElement !== null) {
      return this.flags.pickedCharacterElement.css({
        left: this.mousePos.x - 90 / 2,
        top: this.mousePos.y - 90 / 2
      }).removeClass('no_display');
    }
  };

  GameManager.doBattle = function(isSoon) {
    if (isSoon == null) {
      isSoon = false;
    }
    if (!this.flags.isEnableBattle) {
      return;
    }
    this.partsAnimation(this.POSITION.BATTLE, isSoon);
    this.flags.isCharacterPick = false;
    this.flags.pickedCharacterObject = null;
    if (this.flags.pickedCharacterElement !== null) {
      this.flags.pickedCharacterElement.remove();
    }
    this.flags.pickedCharacterElement = null;
    this.flags.isCellObjectAnimation = true;
    this.switchTempAll();
    return this.flags.isBattle = true;
  };

  GameManager.doCharacterPick = function(isSoon) {
    if (isSoon == null) {
      isSoon = false;
    }
    if (!this.flags.isEnableCharacterPick) {
      return;
    }
    this.partsAnimation(this.POSITION.CHARACTER_PICK, isSoon);
    this.flags.isCharacterPick = true;
    this.flags.pickedCharacterObject = null;
    if (this.flags.pickedCharacterElement !== null) {
      this.flags.pickedCharacterElement.remove();
    }
    this.flags.pickedCharacterElement = null;
    this.flags.isCellObjectAnimation = false;
    this.switchTempAll();
    return this.flags.isBattle = false;
  };

  GameManager.doTurnEnd = function(isSoon) {
    if (isSoon == null) {
      isSoon = false;
    }
    if (!this.flags.isEnableTurnEnd) {
      return;
    }
    this.enemyMove();
    return this.flags.isWalkInThisTurn = false;
  };

  GameManager.doLevelup = function(isSoon) {
    if (isSoon == null) {
      isSoon = false;
    }
    if (!this.flags.isEnableLevelup) {
      return;
    }
    this.partsAnimation(this.POSITION.LEVELUP, isSoon);
    return this.flags.isCellObjectAnimation = false;
  };

  GameManager.partsAnimation = function(ary, isSoon) {
    var animationMsec, id, pos;
    if (isSoon == null) {
      isSoon = false;
    }
    this.changeControllable(false);
    animationMsec = isSoon ? 0 : this.ANIMATION_MSEC;
    for (id in ary) {
      pos = ary[id];
      if (pos === null) {
        $('#' + id).slideUp(animationMsec);

        /*
        if isSoon
          $('#'+id).css('display', 'none')
        else
          $('#'+id).slideUp(@ANIMATION_MSEC)
         */
      } else {
        $('#' + id).animate({
          left: pos[0],
          top: pos[1]
        }, animationMsec).slideDown(animationMsec);

        /*
        if isSoon
          $('#'+id).css('display', 'block').css({left: pos[0], top: pos[1]})
        else
          $('#'+id).slideDown(@ANIMATION_MSEC).css({left: pos[0], top: pos[1]})
         */
      }
    }
    return setTimeout((function(_this) {
      return function() {
        return _this.changeControllable(true);
      };
    })(this), animationMsec);
  };

  GameManager.init = function() {
    $(document).on('contextmenu', function() {
      return !GameManager.DEBUG_CONFIG.DISABLE_RIGHT_CLICK_MENU;
    });
    this.gameElement = $('<div>').attr('id', this.ID).on('mousemove', this.onMouseMove.bind(this)).on('mouseup', (function(_this) {
      return function(evt) {
        switch (evt.which) {
          case 1:
            return _this.onMouseLeftUp.bind(_this)(evt);
          case 2:
            return _this.onMouseMiddleUp.bind(_this)(evt);
          case 3:
            return _this.onMouseRightUp.bind(_this)(evt);
        }
      };
    })(this)).on('mousedown', (function(_this) {
      return function(evt) {
        switch (evt.which) {
          case 1:
            return _this.onMouseLeftDown.bind(_this)(evt);
          case 2:
            return _this.onMouseMiddleDown.bind(_this)(evt);
          case 3:
            return _this.onMouseRightDown.bind(_this)(evt);
        }
      };
    })(this)).on('mouseleave', this.onMouseLeave.bind(this)).css({
      width: 1200,
      height: 800
    });
    this.initField(null);
    this.initEnv(null);
    this.initMenu(null);
    this.initPanels(null);
    this.initCharacters(null);
    this.initLevelup(null);
    this.initEnemys(null);
    this.initBattleResult(null);
    this.gameElement.appendTo('body');
    return this.doBattle(true);
  };

  GameManager.initMenu = function(savedata) {
    if (this.initialized.menu) {
      return;
    }
    this.initialized.menu = true;
    return MenuManager.init(this.gameElement);
  };

  GameManager.initField = function(savedata) {
    if (this.initialized.field) {
      return;
    }
    this.initialized.field = true;
    return FieldManager.init(this.gameElement);
  };

  GameManager.initEnv = function(savedata) {
    if (this.initialized.env) {
      return;
    }
    this.initialized.env = true;
    EnvManager.init(this.gameElement);
    EnvManager.setLife(5);
    EnvManager.setExp((this.DEBUG_CONFIG.startExp === false ? 0 : this.DEBUG_CONFIG.START_EXP));
    return EnvManager.setFloor(1);
  };

  GameManager.initPanels = function(savedata) {
    if (this.initialized.panels) {
      return;
    }
    this.initialized.panels = true;
    LeftInfoManager.init(this.gameElement);
    return RightInfoManager.init(this.gameElement);
  };

  GameManager.initLevelup = function(savedata) {
    var characterId, characterObject, ref;
    if (this.initialized.levelup) {
      return;
    }
    this.initialized.levelup = true;
    LevelupManager.init(this.gameElement);
    ref = this.characters;
    for (characterId in ref) {
      characterObject = ref[characterId];
      LevelupManager.addCharacter(characterObject);
    }
    return LevelupManager.draw();
  };

  GameManager.initBattleResult = function(savedata) {
    if (this.initialized.battleResult) {
      return;
    }
    this.initialized.battleResult = true;
    return BattleResultManager.init(this.gameElement);
  };

  GameManager.initCharacters = function(savedata) {
    var characterId, characterObject, className, params, ref, ref1;
    if (this.initialized.characters) {
      return;
    }
    this.initialized.characters = true;
    CharacterPalletManager.init(this.gameElement, 0, 50);
    this.characters = {};
    ref = window.CharacterList;
    for (characterId in ref) {
      className = ref[characterId];
      if ((savedata != null) && 'characters' in savedata && characterId in savedata.characters) {
        params = savedata.characters[characterId];
      } else {
        params = {
          joined: null,
          level: 1,
          hp: null,
          items: [],
          inField: false,
          moved: false
        };
      }
      this.characters[characterId] = new window.CharacterList[characterId](params);
    }
    ref1 = this.characters;
    for (characterId in ref1) {
      characterObject = ref1[characterId];
      CharacterPalletManager.addCharacter(characterObject);
    }
    return CharacterPalletManager.draw();
  };

  GameManager.initEnemys = function(savedata) {
    if (this.initialized.enemys) {
      return;
    }
    this.initialized.enemys = true;
    return this.enemys = window.EnemyList;
  };

  GameManager.isControllable = function() {
    return this.flags.controllable;
  };

  GameManager.changeControllable = function(bool) {
    return this.flags.controllable = !!bool;
  };

  GameManager.switchTempAll = function() {
    return $.each(FieldManager.cells, function() {
      return $.each(this, function() {
        return this.switchTemp();
      });
    });
  };

  GameManager.movePick = function(cell) {
    var attackableCell, attackables, body, j, l, len, len1, len2, movableMap, o, ref, wayStack, x, y;
    FieldManager.removeAllWayStack();
    FieldManager.removeAllKnockout();
    this.flags.movePickCell = cell;
    this.flags.waitAttackCell = cell;
    movableMap = FieldManager.getMovableMap(cell);
    for (x = j = 0, len = movableMap.length; j < len; x = ++j) {
      body = movableMap[x];
      for (y = l = 0, len1 = body.length; l < len1; y = ++l) {
        wayStack = body[y];
        if (wayStack !== null && (0 < (ref = wayStack.length) && ref <= cell.object.getMove())) {
          FieldManager.cells[x][y].setWayStack(wayStack);
        } else {
          FieldManager.cells[x][y].setWayStack(null);
        }
      }
    }
    attackables = FieldManager.getAttackableCellsByCell(cell);
    for (o = 0, len2 = attackables.length; o < len2; o++) {
      attackableCell = attackables[o];
      attackableCell.knockout = cell;
    }
    FieldManager.drawMovable();
    return FieldManager.drawKnockout();
  };

  GameManager.enemyMove = function() {
    var _, acts, atkCell, atkObj, attackables, beatLevel, beatPossibility, c, damage, debugCount, def, ending, enemyCell, getAct, hp, j, l, len, len1, len2, level, mBody, movableMap, moveToCell, myAttack, myAttackType, o, q, r, ref, ref1, ref2, ref3, wayStack, x, xMove, y, yMove;
    debugCount = 0;
    this.changeControllable(false);
    this.flags.moveToCell = null;
    FieldManager.removeAllWayStack();
    FieldManager.removeAllKnockout();
    FieldManager.drawMovable();
    FieldManager.drawKnockout();
    ending = (function(_this) {
      return function() {
        FieldManager.resetAllMoved();
        FieldManager.drawMovable();
        FieldManager.drawKnockout();
        FieldManager.drawFin();
        _this.flags.movePickCell = null;
        _this.flags.moveToCell = null;
        _this.flags.waitAttackCell = null;
        return FieldManager.randomEnemyAppear(function() {
          return GameManager.changeControllable(true);
        });
      };
    })(this);
    enemyCell = null;
    enemysearch://;
    for (x = j = 0, ref = FieldManager.cells.length; 0 <= ref ? j < ref : j > ref; x = 0 <= ref ? ++j : --j) {
      for (y = l = 0, ref1 = FieldManager.cells[x].length; 0 <= ref1 ? l < ref1 : l > ref1; y = 0 <= ref1 ? ++l : --l) {
        c = FieldManager.cells[x][y];
        if (c.object !== null && c.object.isEnemyObject() && !c.object.isMoved()) {
          enemyCell = c;
          break enemysearch;
        }
      }
    }
    if (enemyCell === null) {
      return ending();
    }
    getAct = function(params) {
      var rtn;
      rtn = {
        life: 0,
        beatLevel: 0,
        beatPossibility: -2e308,
        damage: 0,
        xMove: +2e308,
        moveAmount: +2e308
      };
      if ('life' in params) {
        rtn.life = params.life;
      }
      if ('beatLevel' in params) {
        rtn.beatLevel = params.beatLevel;
      }
      if ('beatPossibility' in params) {
        rtn.beatPossibility = params.beatPossibility;
      }
      if ('damage' in params) {
        rtn.damage = params.damage;
      }
      if ('xMove' in params) {
        rtn.xMove = params.xMove;
      }
      if ('moveAmount' in params) {
        rtn.moveAmount = params.moveAmount;
      }
      return rtn;
    };
    acts = [];
    movableMap = FieldManager.getMovableMap(enemyCell);
    myAttackType = enemyCell.object.getAttackType();
    myAttack = enemyCell.object.getAttack();
    actsearch://;
    for (xMove = o = 0, len = movableMap.length; o < len; xMove = ++o) {
      mBody = movableMap[xMove];
      for (yMove = q = 0, len1 = mBody.length; q < len1; yMove = ++q) {
        wayStack = mBody[yMove];
        if (!(wayStack !== null && (0 <= (ref2 = wayStack.length) && ref2 <= enemyCell.object.getMove()))) {
          continue;
        }
        moveToCell = FieldManager.cells[xMove][yMove];
        moveToCell.setWayStack(wayStack);
        if (xMove === 0 && (enemyCell.object.getMove() - wayStack.length) > 0) {
          acts.push([
            getAct({
              life: 1,
              moveAmount: wayStack.length
            }), moveToCell, -1
          ]);
        }
        acts.push([
          getAct({
            xMove: xMove,
            moveAmount: wayStack.length
          }), moveToCell, null
        ]);
        attackables = FieldManager.getAttackableCells(enemyCell.object, xMove, yMove);
        for (r = 0, len2 = attackables.length; r < len2; r++) {
          atkCell = attackables[r];
          atkObj = atkCell.object;
          def = myAttackType === ObjectBase.ATTACK_TYPE.PHYSIC ? atkObj.getPDef() : atkObj.getMDef();
          hp = atkObj.getHp();
          level = atkObj.getLevel();
          beatPossibility = ObjectBase.getKnockoutRate(hp, myAttack, def);
          damage = ObjectBase.getDamageMax(myAttack, def);
          beatLevel = beatPossibility === +2e308 ? level : 0;
          acts.push([
            getAct({
              beatLevel: beatLevel,
              beatPossibility: beatPossibility,
              damage: damage,
              xMove: xMove,
              moveAmount: wayStack.length
            }), moveToCell, atkCell
          ]);
        }
      }
    }
    acts.sort(function(aAry, bAry) {
      var a, b;
      a = aAry[0];
      b = bAry[0];
      if (a.life > b.life) {
        return -1;
      }
      if (a.life < b.life) {
        return 1;
      }
      if (a.beatLevel > b.beatLevel) {
        return -1;
      }
      if (a.beatLevel < b.beatLevel) {
        return 1;
      }
      if (a.beatPossibility > b.beatPossibility) {
        return -1;
      }
      if (a.beatPossibility < b.beatPossibility) {
        return 1;
      }
      if (a.damage > b.damage) {
        return -1;
      }
      if (a.damage < b.damage) {
        return 1;
      }
      if (a.xMove < b.xMove) {
        return -1;
      }
      if (a.xMove > b.xMove) {
        return 1;
      }
      if (a.moveAmount > b.moveAmount) {
        return -1;
      }
      if (a.moveAmount < b.moveAmount) {
        return 1;
      }
      return 0;
    });
    ref3 = acts[0], _ = ref3[0], moveToCell = ref3[1], atkCell = ref3[2];
    FieldManager.moveObject(enemyCell, moveToCell, (function(_this) {
      return function() {
        if (atkCell === null) {
          moveToCell.object.setMoved(true);
          moveToCell.drawFin();
          return setTimeout(_this.enemyMove.bind(_this), 1);
        } else if (atkCell === -1) {
          return _this.terror(moveToCell, _this.enemyMove.bind(_this));
        } else {
          return _this.attack(moveToCell, atkCell, _this.enemyMove.bind(_this));
        }
      };
    })(this));
    return true;
  };

  GameManager.attack = function(attackerCell, defenderCell, callback) {
    var attacker, defender, leftObject, rightObject;
    if (callback == null) {
      callback = null;
    }
    attacker = attackerCell.object;
    defender = defenderCell.object;
    leftObject = attacker.isCharacterObject() ? attacker : defender;
    rightObject = attacker.isCharacterObject() ? defender : attacker;
    LeftInfoManager.setObject(leftObject);
    RightInfoManager.setObject(rightObject);
    defenderCell.startAnimation('./img/target.png', 0, 100);
    defenderCell.startAnimation('./img/target.png', 200, 300);
    defenderCell.startAnimation('./img/target.png', 400, 500);
    return setTimeout((function(_this) {
      return function() {
        var attack, attackType, character, damage, def, enemy, hp, hpBase, hpMax, hpTo, isCharacterOffence;
        attackType = attacker.getAttackType();
        attack = attacker.getAttack();
        def = attackType === ObjectBase.ATTACK_TYPE.PHYSIC ? defender.getPDef() : defender.getMDef();
        hp = defender.getHp();
        damage = ObjectBase.getDamage(attack, def);
        if (attacker.isCharacterObject()) {
          character = attacker;
          enemy = defender;
          isCharacterOffence = true;
        } else {
          character = defender;
          enemy = attacker;
          isCharacterOffence = false;
        }
        hpMax = defender.getHpMax();
        hpBase = defender.getHp();
        hpTo = defender.getHp() - damage;
        if (hpTo < 0) {
          hpTo = 0;
        }
        return BattleResultManager.animate(character, enemy, isCharacterOffence, hpMax, hpBase, hpTo, function() {
          defender.damage(damage);
          return FieldManager.checkDeath(function() {
            attacker.setMoved(true);
            attackerCell.draw();
            defenderCell.draw();
            FieldManager.removeAllWayStack();
            FieldManager.removeAllKnockout();
            FieldManager.drawMovable();
            FieldManager.drawKnockout();
            if (callback instanceof Function) {
              return setTimeout(callback, 1);
            }
          });
        });
      };
    })(this), 550);
  };

  GameManager.terror = function(cell, callback) {
    if (callback == null) {
      callback = null;
    }
    EnvManager.decreaseLife();
    cell.object = null;
    cell.draw();
    if (callback instanceof Function) {
      return setTimeout(callback, 1);
    }
  };

  GameManager.getEnemyObject = function(level) {
    var enemyClass, id, ids, ref, targetId;
    if (level == null) {
      level = EnvManager.getFloor();
    }
    ids = [];
    ref = GameManager.enemys;
    for (id in ref) {
      enemyClass = ref[id];
      if (enemyClass.appearance <= level) {
        ids.push(id);
      }
    }
    if (ids.length <= 0) {
      return null;
    }
    targetId = Utl.shuffle(ids).pop();
    return new GameManager.enemys[targetId]({
      level: level,
      hp: null,
      inField: true,
      moved: false
    });
  };

  GameManager.doWalk = function() {
    var cell, j, l, len, nextField, o, q, r, ref, ref1, ref2, ref3, ref4, results, x, y;
    this.changeControllable(false);
    if (this.flags.isWalkInThisTurn) {
      window.alert('このターンは既に階層を進んだので、次のターンになるまで進めません');
      return this.changeControllable(true);
    }
    ref = FieldManager.cells[0];
    for (j = 0, len = ref.length; j < len; j++) {
      cell = ref[j];
      if (cell.object !== null && cell.object.isCharacterObject()) {
        window.alert('左端に味方がいるので進めません');
        return this.changeControllable(true);
      }
    }
    nextField = FieldManager.generateNextField();
    $.each(FieldManager.cells, function() {
      return $.each(this, function() {
        this.xIndex--;
        return this.elements.mother.animate({
          left: this.xIndex * this.constructor.SIZE_X + FieldManager.BORDER_SIZE * (this.xIndex + 1)
        }, 1000);
      });
    });
    $.each(nextField, function() {
      this.xIndex--;
      return this.elements.mother.animate({
        left: this.xIndex * this.constructor.SIZE_X + FieldManager.BORDER_SIZE * (this.xIndex + 1)
      }, 1000);
    });
    setTimeout((function(_this) {
      return function() {
        EnvManager.increaseFloor(1);
        _this.flags.isWalkInThisTurn = true;
        return _this.changeControllable(true);
      };
    })(this), 1100);
    for (y = l = 0, ref1 = FieldManager.cells[0].length; 0 <= ref1 ? l < ref1 : l > ref1; y = 0 <= ref1 ? ++l : --l) {
      FieldManager.cells[0][y].removeMe();
    }
    for (x = o = 1, ref2 = FieldManager.cells.length; 1 <= ref2 ? o < ref2 : o > ref2; x = 1 <= ref2 ? ++o : --o) {
      for (y = q = 0, ref3 = FieldManager.cells[x].length; 0 <= ref3 ? q < ref3 : q > ref3; y = 0 <= ref3 ? ++q : --q) {
        FieldManager.cells[x - 1][y] = FieldManager.cells[x][y];
      }
    }
    results = [];
    for (y = r = 0, ref4 = nextField.length; 0 <= ref4 ? r < ref4 : r > ref4; y = 0 <= ref4 ? ++r : --r) {
      results.push(FieldManager.cells[FieldManager.CELL_X - 1][y] = nextField[y]);
    }
    return results;
  };

  return GameManager;

})();

InfoManager = (function() {
  function InfoManager() {}

  InfoManager.init = function(parentElement) {
    this.parentElement = parentElement;
    this.divObject = $('<div>').attr('id', this.ID).css({
      width: Panel.SIZE_X,
      height: Panel.SIZE_Y,
      "background-color": '#000000'
    }).appendTo(this.parentElement);
    return this.panel = new Panel(this.divObject, null);
  };

  InfoManager.setObject = function(object) {
    if (object == null) {
      object = null;
    }
    this.panel.object = object;
    return this.panel.draw();
  };

  InfoManager.show = function() {
    return this.divObject.addClass('no_display');
  };

  InfoManager.hide = function() {
    return this.divObject.addClass('no_display');
  };

  return InfoManager;

})();

LeftInfoManager = (function(superClass) {
  extend(LeftInfoManager, superClass);

  function LeftInfoManager() {
    return LeftInfoManager.__super__.constructor.apply(this, arguments);
  }

  LeftInfoManager.ID = 'left_info';

  return LeftInfoManager;

})(InfoManager);

LevelupController = (function() {
  LevelupController.CLASSNAME = 'levelup_controller';

  LevelupController.SIZE_X = 200;

  LevelupController.SIZE_Y = 120;

  LevelupController.POS_X = 400;

  LevelupController.POS_Y = 0;

  function LevelupController(parentLevelupPanel) {
    this.parentLevelupPanel = parentLevelupPanel;
    this.divObject = $('<div>').addClass(this.constructor.CLASSNAME).css({
      width: this.constructor.SIZE_X,
      height: this.constructor.SIZE_Y,
      top: this.constructor.POS_Y,
      left: this.constructor.POS_X,
      'background-color': '#ffffff'
    });
    this.input = $('<input>').attr({
      type: 'range',
      min: 1,
      max: this.parentLevelupPanel.object.getLevelUpMax(EnvManager.getExp()),
      step: 1
    }).addClass('levelup_range').css({
      width: '' + (this.constructor.SIZE_X - 20) + 'px'
    }).on('mousemove', this.onChange.bind(this)).val(1).appendTo(this.divObject);
    this.expLabel = $('<div>').addClass('levelup_exp_label').html('EXP').appendTo(this.divObject);
    this.expNum = $('<div>').addClass('levelup_exp').appendTo(this.divObject);
    this.levelButton = $('<button>').addClass('levelup_level_button').css({
      width: 200
    }).on('click', this.onLevelup.bind(this)).appendTo(this.divObject);
    this.onChange();
    this.divObject.appendTo(this.parentLevelupPanel.divObject);
  }

  LevelupController.prototype.onChange = function() {
    var levelup, neededExp;
    levelup = Number(this.input.val());
    neededExp = this.parentLevelupPanel.object.getNeededExp(levelup);
    this.levelButton.html(levelup + 'レベルUP');
    this.expNum.html(neededExp);
    if (EnvManager.getExp() < neededExp) {
      this.levelButton.prop('disabled', true);
    }
    return this.parentLevelupPanel.setLevel(levelup);
  };

  LevelupController.prototype.onLevelup = function() {
    var levelup, neededExp;
    GameManager.changeControllable(false);
    levelup = Number(this.input.val());
    neededExp = this.parentLevelupPanel.object.getNeededExp(levelup);
    if (EnvManager.decreaseExp(neededExp) === false) {
      return;
    }
    this.parentLevelupPanel.object.levelup(levelup);
    LevelupManager.draw();
    CharacterPalletManager.draw();
    return GameManager.changeControllable(true);
  };

  return LevelupController;

})();

LevelupManager = (function() {
  function LevelupManager() {}

  LevelupManager.ID = 'levelup';

  LevelupManager.SIZE_X = 1050;

  LevelupManager.SIZE_Y = 600;

  LevelupManager.init = function(parentElement) {
    this.parentElement = parentElement;
    this.divObject = $('<div>').attr('id', this.ID).css({
      width: this.SIZE_X,
      height: this.SIZE_Y
    }).appendTo(this.parentElement);
    return this.characters = [];
  };

  LevelupManager.addCharacter = function(characterObject) {
    return this.characters.push(characterObject);
  };

  LevelupManager.draw = function() {
    var c, index, j, len, ref, results, top;
    this.characters.sort(function(a, b) {
      return Number(a.getId()) - Number(b.getId());
    });
    this.panels = [];
    $('#' + this.ID + ' > .' + LevelupPanel.CLASSNAME).remove();
    ref = this.characters;
    results = [];
    for (index = j = 0, len = ref.length; j < len; index = ++j) {
      c = ref[index];
      top = index * LevelupPanel.SIZE_Y;
      results.push(this.panels.push(new LevelupPanel(this.divObject, c, top)));
    }
    return results;
  };

  LevelupManager.show = function() {
    return this.divObject.addClass('no_display');
  };

  LevelupManager.hide = function() {
    return this.divObject.addClass('no_display');
  };

  return LevelupManager;

})();

LevelupPanel = (function() {
  LevelupPanel.SIZE_X = 400 * 2 + 200;

  LevelupPanel.SIZE_Y = 120;

  LevelupPanel.CLASSNAME = 'levelup_panel';

  function LevelupPanel(parentElement, object1, posY, posX) {
    this.parentElement = parentElement;
    this.object = object1;
    this.posY = posY != null ? posY : 0;
    this.posX = posX != null ? posX : 0;
    this.divObject = $('<div>').addClass(this.constructor.CLASSNAME).css({
      width: this.constructor.SIZE_X,
      height: this.constructor.SIZE_Y,
      top: this.posY,
      left: this.posX
    }).appendTo(this.parentElement);
    this.draw();
  }

  LevelupPanel.prototype.draw = function() {
    $(this.divObject).find('*').remove();
    this.leftPanel = new Panel(this.divObject, this.object, 0, 0);
    this.rightPanel = new Panel(this.divObject, this.object, 0, Panel.SIZE_X + 200);
    return this.centerController = new LevelupController(this, this.divObject);
  };

  LevelupPanel.prototype.setLevel = function(levelup) {
    return this.rightPanel.draw(this.object.getLevel() + levelup);
  };

  return LevelupPanel;

})();

MenuManager = (function() {
  function MenuManager() {}

  MenuManager.ID = 'menu';

  MenuManager.SIZE_X = 1200;

  MenuManager.SIZE_Y = 50;

  MenuManager.elements = {
    pickCharacter: null
  };

  MenuManager.init = function(parentElement, posX, posY) {
    this.parentElement = parentElement;
    this.posX = posX;
    this.posY = posY;
    this.divObject = $('<div>').attr('id', this.ID).css({
      width: this.SIZE_X,
      height: this.SIZE_Y,
      left: this.posX,
      top: this.posY
    });
    this.pickCharacter = $('<div>').html('出撃').css({
      border: '1px solid #000000',
      width: 100,
      height: 40,
      "font-size": '30px'
    }).on('click', this.onClickCharacterPick.bind(this)).appendTo(this.divObject);
    this.battle = $('<div>').html('戦闘').css({
      border: '1px solid #000000',
      width: 100,
      height: 40,
      "font-size": '30px'
    }).on('click', this.onClickBattle.bind(this)).appendTo(this.divObject);
    this.turnEnd = $('<div>').html('ターン終了').css({
      border: '1px solid #000000',
      width: 100,
      height: 40,
      "font-size": '30px'
    }).on('click', this.onClickTurnEnd.bind(this)).appendTo(this.divObject);
    this.turnEnd = $('<div>').html('レベルアップ').css({
      border: '1px solid #000000',
      width: 100,
      height: 40,
      "font-size": '30px'
    }).on('click', this.onClickLevelup.bind(this)).appendTo(this.divObject);
    this.turnEnd = $('<div>').html('前進').css({
      border: '1px solid #000000',
      width: 100,
      height: 40,
      "font-size": '30px'
    }).on('click', this.onClickWalk.bind(this)).appendTo(this.divObject);
    return this.divObject.appendTo(this.parentElement);
  };

  MenuManager.onClickCharacterPick = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.doCharacterPick();
    return true;
  };

  MenuManager.onClickBattle = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.doBattle();
    return true;
  };

  MenuManager.onClickTurnEnd = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.doTurnEnd();
    return true;
  };

  MenuManager.onClickLevelup = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.doLevelup();
    return true;
  };

  MenuManager.onClickWalk = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    GameManager.doWalk();
    return true;
  };

  return MenuManager;

})();

Panel = (function() {
  Panel.SIZE_X = 400;

  Panel.SIZE_Y = 120;

  Panel.CLASSNAME = 'panel';

  function Panel(parentElement, object1, posY, posX, isCharacterPallet) {
    this.parentElement = parentElement;
    this.object = object1;
    this.posY = posY != null ? posY : 0;
    this.posX = posX != null ? posX : 0;
    this.isCharacterPallet = isCharacterPallet != null ? isCharacterPallet : false;
    this.divObject = $('<div>').addClass(this.constructor.CLASSNAME).css({
      width: this.constructor.SIZE_X,
      height: this.constructor.SIZE_Y,
      top: this.posY,
      left: this.posX
    }).appendTo(this.parentElement);
    this.draw();
  }

  Panel.prototype.onIconDragStart = function(evt) {
    if (!GameManager.isControllable()) {
      return;
    }
    if (!this.isCharacterPallet) {
      return;
    }
    if (!GameManager.flags.isCharacterPick) {
      return;
    }
    if (!this.object.isCharacterObject()) {
      return;
    }
    if (this.object.isInField()) {
      return true;
    }
    CharacterPalletManager.pickCharacter(this.object);
    return true;
  };

  Panel.prototype.draw = function(level) {
    if (level == null) {
      level = null;
    }
    $(this.divObject).find('*').remove();
    if (this.object !== null) {
      switch (this.object.objectType) {
        case ObjectBase.OBJECT_TYPE.CHARACTER:
          return this.drawCharacter(level);
        case ObjectBase.OBJECT_TYPE.ENEMY:
          return this.drawEnemy();
      }
    }
  };

  Panel.prototype.drawCharacter = function(level) {
    var attackImg;
    if (level == null) {
      level = null;
    }
    if (this.isCharacterPallet && this.object.isInField()) {
      $('<div>').addClass('in_field').css({
        left: 0,
        top: 0,
        "z-index": 9999,
        opacity: 0.5,
        "background-color": '#230381',
        width: this.constructor.SIZE_X,
        height: this.constructor.SIZE_Y,
        'font-size': '80px',
        color: '#000000',
        'text-align': 'center'
      }).html('出撃中').appendTo(this.divObject);
    }
    $(this.divObject).append($('<div>').addClass('field_icon').css({
      top: 20,
      left: 0,
      width: 90,
      height: 90,
      "background-image": 'url(' + this.object.getBaseImage() + ')'
    }).on('mousedown', (function(_this) {
      return function(evt) {
        if (evt.which === 1) {
          _this.onIconDragStart.bind(_this)(evt);
        }
        return true;
      };
    })(this)));
    $(this.divObject).append($('<div>').addClass('label_level').css({
      top: 0,
      left: 0,
      width: 20,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('Lv'));
    $(this.divObject).append($('<div>').addClass('field_level').css({
      top: 0,
      left: 20,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html(this.object.getLevel(level)));
    $(this.divObject).append($('<div>').addClass('field_name').css({
      top: 0,
      left: 90,
      width: 120,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html(this.object.getCharacterName()));
    $(this.divObject).append($('<div>').addClass('label_attack').css({
      top: 25,
      left: 90,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('攻撃'));
    attackImg = this.object.getAttackType() === '物理' ? './img/sword.png' : './img/magic.png';
    $(this.divObject).append($('<img>').addClass('field_attack_type').css({
      top: 25,
      left: 130,
      width: 20,
      height: 20
    }).attr('src', attackImg));
    $(this.divObject).append($('<div>').addClass('field_attack').css({
      top: 25,
      left: 160,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getAttack(level)));
    $(this.divObject).append($('<div>').addClass('label_pdef').css({
      top: 45,
      left: 90,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('物防'));
    $(this.divObject).append($('<div>').addClass('field_pdef').css({
      top: 45,
      left: 160,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getPDef(level)));
    $(this.divObject).append($('<div>').addClass('label_mdef').css({
      top: 65,
      left: 90,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('魔防'));
    $(this.divObject).append($('<div>').addClass('field_mdef').css({
      top: 65,
      left: 160,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getMDef(level)));
    $(this.divObject).append($('<div>').addClass('label_hp').css({
      top: 0,
      left: 180,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('HP'));
    $(this.divObject).append($('<div>').addClass('field_hp').css({
      top: 0,
      left: 220,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getHp()));
    $(this.divObject).append($('<div>').addClass('label_hp_split').css({
      top: 0,
      left: 280,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html('/'));
    $(this.divObject).append($('<div>').addClass('field_hp_max').css({
      top: 0,
      left: 300,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getHpMax(level)));
    $(this.divObject).append($('<div>').addClass('label_hit_rate').css({
      top: 25,
      left: 210,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('命中'));
    $(this.divObject).append($('<div>').addClass('field_hit_rate').css({
      top: 25,
      left: 260,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getHitRate()));
    $(this.divObject).append($('<div>').addClass('label_dodge_rate').css({
      top: 45,
      left: 210,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('回避'));
    $(this.divObject).append($('<div>').addClass('field_dodge_rate').css({
      top: 45,
      left: 260,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getDodgeRate()));
    $(this.divObject).append($('<div>').addClass('label_move').css({
      top: 25,
      left: 310,
      width: 50,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('移動'));
    $(this.divObject).append($('<div>').addClass('field_move').css({
      top: 25,
      left: 360,
      width: 50,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getMove()));
    $(this.divObject).append($('<div>').addClass('label_range').css({
      top: 45,
      left: 310,
      width: 50,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('射程'));
    $(this.divObject).append($('<div>').addClass('field_range').css({
      top: 45,
      left: 360,
      width: 50,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getRange()));
    $(this.divObject).append($('<div>').addClass('label_ability').css({
      top: 85,
      left: 90,
      width: 50,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('能力'));
    return $(this.divObject).append($('<div>').addClass('field_ability').css({
      top: 85,
      left: 130,
      width: 250,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getAbilityName()).tooltip({
      'placement': 'top',
      'title': this.object.getAbilityDesc()
    }));
  };

  Panel.prototype.drawEnemy = function() {
    var attackImg;
    $(this.divObject).append($('<div>').addClass('field_icon').css({
      top: 20,
      left: 0,
      width: 90,
      height: 90,
      "background-image": 'url(' + this.object.getBaseImage() + ')'
    }));
    $(this.divObject).append($('<div>').addClass('label_level').css({
      top: 0,
      left: 0,
      width: 20,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('Lv'));
    $(this.divObject).append($('<div>').addClass('field_level').css({
      top: 0,
      left: 20,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html(this.object.getLevel()));
    $(this.divObject).append($('<div>').addClass('field_name').css({
      top: 0,
      left: 90,
      width: 120,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html(this.object.getCharacterName()));
    $(this.divObject).append($('<div>').addClass('label_attack').css({
      top: 25,
      left: 90,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('攻撃'));
    attackImg = this.object.getAttackType() === '物理' ? './img/sword.png' : './img/magic.png';
    $(this.divObject).append($('<img>').addClass('field_attack_type').css({
      top: 25,
      left: 130,
      width: 20,
      height: 20
    }).attr('src', attackImg));
    $(this.divObject).append($('<div>').addClass('field_attack').css({
      top: 25,
      left: 160,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getAttack()));
    $(this.divObject).append($('<div>').addClass('label_pdef').css({
      top: 45,
      left: 90,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('物防'));
    $(this.divObject).append($('<div>').addClass('field_pdef').css({
      top: 45,
      left: 160,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getPDef()));
    $(this.divObject).append($('<div>').addClass('label_mdef').css({
      top: 65,
      left: 90,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('魔防'));
    $(this.divObject).append($('<div>').addClass('field_mdef').css({
      top: 65,
      left: 160,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getMDef()));
    $(this.divObject).append($('<div>').addClass('label_hp').css({
      top: 0,
      left: 180,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('HP'));
    $(this.divObject).append($('<div>').addClass('field_hp').css({
      top: 0,
      left: 220,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getHp()));
    $(this.divObject).append($('<div>').addClass('label_hp_split').css({
      top: 0,
      left: 280,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html('/'));
    $(this.divObject).append($('<div>').addClass('field_hp_max').css({
      top: 0,
      left: 300,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getHpMax()));
    $(this.divObject).append($('<div>').addClass('label_hit_rate').css({
      top: 25,
      left: 210,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('命中'));
    $(this.divObject).append($('<div>').addClass('field_hit_rate').css({
      top: 25,
      left: 260,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getHitRate()));
    $(this.divObject).append($('<div>').addClass('label_dodge_rate').css({
      top: 45,
      left: 210,
      width: 90,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('回避'));
    $(this.divObject).append($('<div>').addClass('field_dodge_rate').css({
      top: 45,
      left: 260,
      width: 20,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getDodgeRate()));
    $(this.divObject).append($('<div>').addClass('label_move').css({
      top: 25,
      left: 310,
      width: 50,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('移動'));
    $(this.divObject).append($('<div>').addClass('field_move').css({
      top: 25,
      left: 360,
      width: 50,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getMove()));
    $(this.divObject).append($('<div>').addClass('label_range').css({
      top: 45,
      left: 310,
      width: 50,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('射程'));
    $(this.divObject).append($('<div>').addClass('field_range').css({
      top: 45,
      left: 360,
      width: 50,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getRange()));
    $(this.divObject).append($('<div>').addClass('label_ability').css({
      top: 85,
      left: 90,
      width: 50,
      height: 20,
      "font-size": "16px",
      "background-color": '#ffffff'
    }).html('能力'));
    return $(this.divObject).append($('<div>').addClass('field_ability').css({
      top: 85,
      left: 130,
      width: 250,
      height: 20,
      "font-size": "16px"
    }).html(this.object.getAbilityName()).tooltip({
      'placement': 'top',
      'title': this.object.getAbilityDesc()
    }));
  };

  return Panel;

})();

PresentboxBase = (function(superClass) {
  extend(PresentboxBase, superClass);

  function PresentboxBase(params) {
    PresentboxBase.__super__.constructor.call(this, ObjectBase.OBJECT_TYPE.PRESENTBOX);
    this.level = params.level;
    this.hp = params.hp;
  }

  PresentboxBase.prototype.getPDef = function(level) {
    if (level == null) {
      level = null;
    }
    return +2e308;
  };

  PresentboxBase.prototype.getMDef = function(level) {
    if (level == null) {
      level = null;
    }
    return +2e308;
  };

  PresentboxBase.prototype.damage = function(amount) {
    if (amount <= 0) {
      return false;
    }
    this.hp = this.getHp() - 1;
    return this.getHp();
  };

  PresentboxBase.prototype.getDodgeRate = function() {
    return 0;
  };

  PresentboxBase.prototype.getDodgeRateBase = function() {
    return 0;
  };

  return PresentboxBase;

})(ObjectBase);

RightInfoManager = (function(superClass) {
  extend(RightInfoManager, superClass);

  function RightInfoManager() {
    return RightInfoManager.__super__.constructor.apply(this, arguments);
  }

  RightInfoManager.ID = 'right_info';

  return RightInfoManager;

})(InfoManager);

$().ready(function() {
  return GameManager.init();
});

Utl = (function() {
  function Utl() {}

  Utl.numFormat = function(num) {
    return String(num).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1,');
  };

  Utl.rand = function(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  };

  Utl.genPassword = function(length) {
    var chars, i, j, ref, res;
    if (length == null) {
      length = 4;
    }
    chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    res = '';
    for (i = j = 0, ref = length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      res += chars.substr(this.rand(0, chars.length - 1), 1);
    }
    return res;
  };

  Utl.adrBar = function(url) {
    return window.history.replaceState('', '', '' + url);
  };

  Utl.getQuery = function(key, defaultValue) {
    var j, k, len, p, params, query, ref, res, v;
    if (key == null) {
      key = null;
    }
    if (defaultValue == null) {
      defaultValue = null;
    }
    query = document.location.search.substring(1);
    params = query.split('&');
    res = {};
    for (j = 0, len = params.length; j < len; j++) {
      p = params[j];
      ref = p.split('='), k = ref[0], v = ref[1];
      res[k] = v;
    }
    if (key === null) {
      return res;
    }
    if (res[key] != null) {
      return res[key];
    }
    return defaultValue;
  };

  Utl.normalize = function(num, min, max) {
    var range;
    if (min == null) {
      min = 0;
    }
    if (max == null) {
      max = 1;
    }
    range = Math.abs(max - min);
    if (num < min) {
      num += range * Math.ceil(Math.abs(num - min) / range);
    } else if (max <= num) {
      num -= range * (Math.floor(Math.abs(num - max) / range) + 1);
    }
    return num;
  };

  Utl.time = function(date) {
    if (date == null) {
      date = null;
    }
    if (date === null) {
      date = new Date();
    }
    return Math.floor(+date / 1000);
  };

  Utl.militime = function(date, getAsFloat) {
    if (date == null) {
      date = null;
    }
    if (getAsFloat == null) {
      getAsFloat = false;
    }
    if (date === null) {
      date = new Date();
    }
    return +date / (getAsFloat ? 1000 : 1);
  };

  Utl.dateStr = function(date, dateSep) {
    if (date == null) {
      date = null;
    }
    if (dateSep == null) {
      dateSep = '-';
    }
    if (date === null) {
      date = new Date();
    }
    return '' + this.zerofill(date.getFullYear(), 4) + dateSep + this.zerofill(date.getMonth() + 1, 2) + dateSep + this.zerofill(date.getDate(), 2);
  };

  Utl.datetimeStr = function(date, dateSep, timeSep, betweenSep) {
    if (date == null) {
      date = null;
    }
    if (dateSep == null) {
      dateSep = '-';
    }
    if (timeSep == null) {
      timeSep = ':';
    }
    if (betweenSep == null) {
      betweenSep = ' ';
    }
    if (date === null) {
      date = new Date();
    }
    return this.dateStr(date, dateSep) + betweenSep + this.zerofill(date.getHours(), 2) + timeSep + this.zerofill(date.getMinutes(), 2) + timeSep + this.zerofill(date.getSeconds(), 2);
  };

  Utl.difftime = function(targetDate, baseDate, nowSec, nowStr, agoStr, secStr, minStr, hourStr, dayStr, monStr, yearStr) {
    var baseTime, d, diffTime, h, m, mo, targetTime, y;
    if (baseDate == null) {
      baseDate = null;
    }
    if (nowSec == null) {
      nowSec = 0;
    }
    if (nowStr == null) {
      nowStr = 'ついさっき';
    }
    if (agoStr == null) {
      agoStr = '前';
    }
    if (secStr == null) {
      secStr = '秒';
    }
    if (minStr == null) {
      minStr = '分';
    }
    if (hourStr == null) {
      hourStr = '時間';
    }
    if (dayStr == null) {
      dayStr = '日';
    }
    if (monStr == null) {
      monStr = '月';
    }
    if (yearStr == null) {
      yearStr = '年';
    }
    if (baseDate === null) {
      baseTime = this.time();
    }
    targetTime = this.time(targetDate);
    diffTime = baseTime - targetTime;
    if (diffTime < 0) {
      return null;
    }
    if (nowSec >= diffTime) {
      return nowStr;
    }
    y = Math.floor(diffTime / (60 * 60 * 24 * 30 * 12));
    if (y > 0) {
      return '' + y + yearStr + agoStr;
    }
    diffTime -= y * (60 * 60 * 24 * 30 * 12);
    mo = Math.floor(diffTime / (60 * 60 * 24 * 30));
    if (mo > 0) {
      return '' + mo + monStr + agoStr;
    }
    diffTime -= mo * (60 * 60 * 24 * 30);
    d = Math.floor(diffTime / (60 * 60 * 24));
    if (d > 0) {
      return '' + d + dayStr + agoStr;
    }
    diffTime -= d * (60 * 60 * 24);
    h = Math.floor(diffTime / (60 * 60));
    if (h > 0) {
      return '' + h + hourStr + agoStr;
    }
    diffTime -= h * (60 * 60);
    m = Math.floor(diffTime / 60);
    if (m > 0) {
      return '' + m + minStr + agoStr;
    }
    diffTime -= m * 60;
    if (diffTime > 0) {
      return '' + diffTime + secStr + agoStr;
    }
    return nowStr;
  };

  Utl.zerofill = function(num, digit) {
    return ('' + this.repeat('0', digit) + num).slice(-digit);
  };

  Utl.repeat = function(str, times) {
    return Array(1 + times).join(str);
  };

  Utl.shuffle = function(ary) {
    var i, n, ref;
    n = ary.length;
    while (n) {
      n--;
      i = this.rand(0, n);
      ref = [ary[n], ary[i]], ary[i] = ref[0], ary[n] = ref[1];
    }
    return ary;
  };

  Utl.inArray = function(needle, ary) {
    var j, len, v;
    for (j = 0, len = ary.length; j < len; j++) {
      v = ary[j];
      if (v === needle) {
        return true;
      }
    }
    return false;
  };

  Utl.clone = function(obj) {
    var res;
    res = obj;
    if ($.isArray(obj)) {
      res = $.extend(true, [], obj);
    } else if (obj instanceof Object) {
      res = $.extend(true, {}, obj);
    }
    return res;
  };

  Utl.arrayFill = function(length, val) {
    var i, j, ref, res;
    if (val == null) {
      val = null;
    }
    res = [];
    for (i = j = 0, ref = length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      res[i] = this.clone(val);
    }
    return res;
  };

  Utl.array2dFill = function(x, y, val) {
    var j, l, ref, ref1, res, xx, yAry, yy;
    if (y == null) {
      y = null;
    }
    if (val == null) {
      val = null;
    }
    if (y === null) {
      y = x;
    }
    res = [];
    yAry = [];
    for (yy = j = 0, ref = y; 0 <= ref ? j < ref : j > ref; yy = 0 <= ref ? ++j : --j) {
      yAry[yy] = this.clone(val);
    }
    for (xx = l = 0, ref1 = x; 0 <= ref1 ? l < ref1 : l > ref1; xx = 0 <= ref1 ? ++l : --l) {
      res[xx] = this.clone(yAry);
    }
    return res;
  };

  Utl.arraySum = function(ary) {
    var j, len, sum, v;
    sum = 0;
    for (j = 0, len = ary.length; j < len; j++) {
      v = ary[j];
      sum += v;
    }
    return sum;
  };

  Utl.arrayMin = function(ary) {
    var j, len, min, v;
    min = null;
    for (j = 0, len = ary.length; j < len; j++) {
      v = ary[j];
      if (min === null || min > v) {
        min = v;
      }
    }
    return min;
  };

  Utl.arrayMax = function(ary) {
    var j, len, max, v;
    max = null;
    for (j = 0, len = ary.length; j < len; j++) {
      v = ary[j];
      if (max === null || max < v) {
        max = v;
      }
    }
    return max;
  };

  Utl.count = function(object) {
    return Object.keys(object).length;
  };

  Utl.uuid4 = function() {
    var i, j, random, uuid;
    uuid = '';
    for (i = j = 0; j < 32; i = ++j) {
      random = Math.random() * 16 | 0;
      if (i === 8 || i === 12 || i === 16 || i === 20) {
        uuid += '-';
      }
      uuid += (i === 12 ? 4 : (i === 16 ? random & 3 | 8 : random)).toString(16);
    }
    return uuid;
  };

  Utl.delLs = function(key) {
    return localStorage.removeItem(key);
  };

  Utl.setLs = function(key, value) {
    var json;
    if (value == null) {
      value = null;
    }
    if (value === null) {
      return this.delLs(key);
    }
    json = JSON.stringify(value);
    return localStorage.setItem(key, json);
  };

  Utl.getLs = function(key) {
    var res;
    res = localStorage.getItem(key);
    try {
      res = JSON.parse(res);
    } catch (error) {
      res = null;
    }
    return res;
  };

  Utl.getOnWheel = function() {
    if ('onwheel' in document) {
      return 'wheel';
    }
    if ('onmousewheel' in document) {
      return 'mousewheel';
    }
    return 'DOMMouseScroll';
  };

  Utl.e2localPos = function(e) {
    var boundingClientRect;
    boundingClientRect = e.currentTarget.getBoundingClientRect();
    return [e.clientX - boundingClientRect.left, e.clientY - boundingClientRect.top];
  };

  Utl.dumpNumArray2d = function(ary) {
    var j, l, ref, ref1, res, x, y;
    res = '';
    for (y = j = 0, ref = ary[0].length; 0 <= ref ? j < ref : j > ref; y = 0 <= ref ? ++j : --j) {
      for (x = l = 0, ref1 = ary.length; 0 <= ref1 ? l < ref1 : l > ref1; x = 0 <= ref1 ? ++l : --l) {
        if (ary[x][y] === null) {
          res += '-';
        } else if (ary[x][y] === 10) {
          res += 'A';
        } else if (ary[x][y] === 11) {
          res += 'B';
        } else if (ary[x][y] === 12) {
          res += 'C';
        } else if (ary[x][y] === 13) {
          res += 'D';
        } else if (ary[x][y] === 14) {
          res += 'E';
        } else if (ary[x][y] === 15) {
          res += 'F';
        } else if (ary[x][y] === 16) {
          res += 'G';
        } else if (ary[x][y] === 17) {
          res += 'H';
        } else {
          res += '' + ary[x][y];
        }
      }
      res += "\n";
    }
    return console.log(res);
  };

  Utl.gacha = function(map) {
    var j, l, len, len1, p, pTotal, ref, ref1, seed, target;
    if (map.length <= 0) {
      return false;
    }
    pTotal = 0;
    for (j = 0, len = map.length; j < len; j++) {
      ref = map[j], target = ref[0], p = ref[1];
      pTotal += p;
    }
    if (pTotal <= 0) {
      return false;
    }
    seed = Utl.rand(1, pTotal);
    pTotal = 0;
    for (l = 0, len1 = map.length; l < len1; l++) {
      ref1 = map[l], target = ref1[0], p = ref1[1];
      pTotal += p;
      if (seed <= pTotal) {
        return target;
      }
    }
    return map[map.legnth - 1][0];
  };

  return Utl;

})();
