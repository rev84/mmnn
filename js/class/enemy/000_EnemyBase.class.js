// Generated by CoffeeScript 2.2.2
var EnemyBase;

EnemyBase = class EnemyBase extends ObjectBase {
  constructor(params) {
    super(ObjectBase.OBJECT_TYPE.ENEMY);
    // 現在のレベル
    this.level = params.level;
    // 現在のHP
    this.hp = params.hp;
    // 出撃中であるか
    this.inField = params.inField;
    // 行動済みであるか
    this.moved = params.moved;
  }

  serialize() {}

  getId() {
    return this.constructor.characterId;
  }

  getName() {
    return this.constructor.characterName;
  }

  isInField() {
    return this.inField;
  }

  setInField(isInField) {
    this.inField = !!isInField;
    return CharacterPalletManager.redraw(this);
  }

  isMoved() {
    return this.moved;
  }

  setMoved(bool) {
    return this.moved = !!bool;
  }

  getJuwel() {
    return this.constructor.itemJuwelAmount;
  }

  getItemTableId() {
    return this.constructor.itemTableId;
  }

  async dropItem() {
    var res, seed;
    seed = Math.random();
    // アイテムを落とす
    if (seed < this.constructor.itemRate) {
      res = ItemManager.getItemObjectFromItemTableId(this.getItemTableId());
      // ジュエルにする
      if (res === false) {
        EnvManager.increaseJuwel(this.getJuwel());
        return (await ItemWindow.showJuwel(this.getJuwel()));
      } else {
        // 最低レベルのアイテムを与える
        res.increaseAmount(0);
        return (await ItemWindow.showItem(res));
      }
    }
  }

};
